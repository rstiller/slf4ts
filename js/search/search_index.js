var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/BunyanLoggerBinding.html",[0,0.065,1,2.682]],["body/classes/BunyanLoggerBinding.html",[0,0.095,1,4.299,2,0.896,3,0.5,4,0.97,5,0.5,6,0.837,7,3.118,8,0.77,9,2.241,10,0.97,11,3.667,12,1.534,13,0.601,14,0.55,15,1.305,16,0.981,17,1.062,18,3.195,19,0.97,20,1.048,21,2.456,22,2.456,23,2.456,24,1.645,25,1.149,26,5.307,27,0.55,28,0.028,29,4.214,30,1.062,31,4.167,32,4.214,33,0.87,34,4.214,35,0.55,36,0.77,37,0.77,38,2.301,39,2.301,40,0.601,41,0.197,42,0.655,43,0.896,44,0.455,45,2.317,46,2.317,47,2.919,48,2.317,49,1.579,50,2.919,51,2.317,52,1.472,53,2.317,54,2.317,55,2.317,56,2.317,57,1.147,58,0.318,59,2.317,60,0.017,61,0.021,62,0.017]],["title/classes/BunyanLoggerImplementation.html",[0,0.065,31,2.403]],["body/classes/BunyanLoggerImplementation.html",[0,0.073,2,0.609,3,0.566,4,0.747,5,0.339,6,0.831,8,0.523,10,0.747,11,2.869,12,1.26,13,0.408,14,0.373,15,1.006,16,1.1,17,1.047,19,0.747,20,1.028,25,1.152,27,0.831,28,0.028,30,1.103,31,3.163,33,0.977,35,0.409,36,1.122,37,0.523,40,0.876,41,0.133,42,0.445,43,0.69,44,0.558,57,1.028,58,0.416,60,0.011,61,0.016,62,0.011,63,1.72,64,2.069,65,1.375,66,1.866,67,2.415,68,4.025,69,3.131,70,1.667,71,2.869,72,1.667,73,0.622,74,1.773,75,1.789,76,1.667,77,1.789,78,1.832,79,1.449,80,1.789,81,2.869,82,2.861,83,2.861,84,2.861,85,2.861,86,1.152,87,1.673,88,2.861,89,1.832,90,1.791,91,1.709,92,1.72,93,2.861,94,1.072,95,2.861,96,1.352,97,1.158,98,1.158,99,1.475,100,2.861,101,0.932,102,1.708,103,1.152,104,2.861,105,1.573,106,0.932,107,1.131,108,2.861,109,0.869,110,2.861,111,0.936,112,0.609,113,1.338,114,1.533,115,1.72,116,2.861,117,1.72,118,2.861,119,1.72,120,2.861,121,1.72,122,2.861,123,1.72,124,2.861,125,3.452,126,1.428,127,1.158,128,1.332,129,0.807,130,1.896,131,2.412,132,2.412,133,2.412,134,2.412,135,2.412,136,2.249,137,1.896,138,1.573,139,1.338,140,2.117,141,1.773,142,1.093,143,1.896,144,1.896,145,1.896,146,1.381,147,2.869,148,1.896,149,1.896,150,2.412,151,2.117,152,2.412,153,2.861,154,1.896,155,1.152,156,1.573,157,1.573,158,2.861,159,1.922,160,1.647,161,2.412,162,2.412,163,2.459,164,2.412,165,2.459,166,2.861,167,2.861,168,2.861,169,1.72,170,1.448,171,1.896,172,2.412]],["title/classes/CassandraLogAdapter.html",[0,0.065,173,2.682]],["body/classes/CassandraLogAdapter.html",[0,0.068,2,0.801,3,0.586,4,0.903,5,0.447,6,0.763,14,0.491,15,1.215,16,0.93,17,1.007,19,0.903,20,0.768,24,1.399,25,1.007,27,0.719,28,0.028,30,0.689,33,0.93,35,0.501,36,0.689,37,0.689,41,0.176,42,0.586,43,0.636,44,0.423,60,0.015,61,0.02,62,0.015,72,1.924,73,0.869,87,1.215,89,1.5,90,1.5,96,1.067,97,1.399,129,0.744,142,1.453,173,3.654,174,3.339,175,2.788,176,5.51,177,5.51,178,3.767,179,4.493,180,4.931,181,2.913,182,4.939,183,5.51,184,3.767,185,6.23,186,3.746,187,2.029,188,6.23,189,3.767,190,2.788,191,2.497,192,1.067,193,2.716,194,2.497,195,5.51,196,4.939,197,3.767,198,4.931,199,4.931,200,4.939,201,4.939,202,3.876,203,5.848,204,3.767,205,3.767,206,3.767,207,1.762,208,5.51,209,5.51,210,3.767,211,3.767,212,3.767,213,3.767,214,3.767,215,3.767,216,4.939,217,3.767,218,3.767,219,3.767]],["title/classes/ConsoleLoggerBinding.html",[0,0.065,220,2.682]],["body/classes/ConsoleLoggerBinding.html",[0,0.095,2,0.899,3,0.501,4,0.972,5,0.501,6,0.837,8,0.772,9,2.243,10,0.972,12,1.536,13,0.603,14,0.551,15,1.308,16,0.982,17,1.063,18,3.199,19,0.972,20,1.048,21,2.459,22,2.459,23,2.459,24,1.647,25,1.15,27,0.551,28,0.028,30,1.063,33,0.871,35,0.539,36,0.772,37,0.772,38,2.304,39,2.304,41,0.197,42,0.657,43,0.897,44,0.456,45,2.323,46,2.323,47,2.923,48,2.323,49,1.583,50,2.923,51,2.323,52,1.475,53,2.323,54,2.323,55,2.323,56,2.323,57,1.148,58,0.319,59,2.323,60,0.017,61,0.021,62,0.017,220,4.304,221,3.126,222,3.934,223,4.905,224,5.316,225,4.225,226,4.17,227,4.225,228,4.225]],["title/classes/ConsoleLoggerImplementation.html",[0,0.065,226,2.403]],["body/classes/ConsoleLoggerImplementation.html",[0,0.076,2,0.635,3,0.354,4,0.771,5,0.354,6,0.809,8,0.771,10,1.062,12,1.29,13,0.426,14,0.389,15,1.037,16,0.825,17,0.893,19,0.771,20,1.042,24,1.646,25,1.115,27,0.809,28,0.028,30,1.115,33,0.97,35,0.419,36,0.546,37,0.546,40,0.602,41,0.139,42,0.464,43,0.712,44,0.498,57,0.589,60,0.012,61,0.017,62,0.012,64,2.133,65,1.402,66,1.373,70,1.707,72,1.707,73,0.73,74,1.828,75,1.832,76,1.707,77,1.832,78,1.612,86,1.203,87,1.662,89,1.852,90,1.814,91,1.731,94,1.119,96,1.504,97,1.384,98,1.194,99,1.504,101,1.373,102,1.757,103,1.203,106,0.972,107,1.147,109,0.907,111,0.965,114,1.119,136,1.642,138,1.642,139,1.396,142,1.215,146,1.215,151,3.12,155,1.968,157,2.688,194,1.979,207,1.396,223,3.555,226,4.043,229,2.21,230,4.014,231,2.986,232,4.216,233,1.971,234,4.121,235,2.986,236,1.698,237,2.687,238,2.986,239,2.178,240,4.216,241,4.216,242,3.555,243,2.473,244,4.216,245,4.216,246,2.986,247,2.986,248,2.986,249,2.986,250,3.555,251,1.828,252,2.986,253,2.118,254,2.986,255,5.6,256,2.285,257,1.795,258,5.812,259,2.518,260,2.518,261,2.518,262,2.986,263,1.979,264,2.986,265,4.216,266,4.216,267,2.986,268,2.986,269,1.795,270,4.216,271,2.986,272,2.986,273,2.986,274,2.986]],["title/classes/DefaultLoggerInstance.html",[0,0.065,275,1.994]],["body/classes/DefaultLoggerInstance.html",[0,0.068,2,0.337,3,0.498,4,0.474,5,0.188,6,0.8,8,0.602,10,1.012,12,0.869,13,0.226,14,0.206,15,0.638,16,1.065,17,0.968,19,0.602,20,1.042,24,0.734,25,1.114,27,0.746,28,0.028,30,1.122,33,0.9,35,0.282,36,0.602,37,0.289,40,0.904,43,0.762,44,0.526,49,0.972,57,1.172,58,0.34,60,0.006,61,0.01,62,0.006,65,1.433,66,1.469,70,1.576,72,2.111,73,0.83,75,0.593,76,1.33,77,1.575,78,1.37,87,1.577,89,1.563,90,1.563,91,1.609,96,1.77,97,1.803,98,0.448,99,1.078,102,1.621,106,0.515,107,1.278,109,0.48,111,1.486,112,0.551,126,1.33,127,1.078,128,1.24,129,0.752,141,0.686,142,1.178,146,1.384,155,1.533,159,1.533,160,0.637,170,0.801,181,2.746,186,2.526,187,1.619,192,1.278,193,2.62,233,1.212,236,1.533,239,0.972,251,2.545,253,2.481,256,1.212,269,0.951,275,2.913,276,0.87,277,1.718,278,3.736,279,3.296,280,2.524,281,2.524,282,2.526,283,2.785,284,2.524,285,1.582,286,2.592,287,1.718,288,1.718,289,1.718,290,1.718,291,1.427,292,1.582,293,1.582,294,1.582,295,1.582,296,1.718,297,1.582,298,1.718,299,1.582,300,1.582,301,1.582,302,1.582,303,1.582,304,1.582,305,1.582,306,1.718,307,1.582,308,1.582,309,1.582,310,1.582,311,1.582,312,1.582,313,1.821,314,2.231,315,1.718,316,2.182,317,2.524,318,2.182,319,1.718,320,1.582,321,1.718,322,1.582,323,1.044,324,1.072,325,1.049,326,2.526,327,2.11,328,2.228,329,2.785,330,2.785,331,2.785,332,1.109,333,2.126,334,2.126,335,1.049,336,1.718,337,2.785,338,3.412,339,2.182,340,2.182,341,1.049,342,1.049,343,1.049,344,1.049,345,1.049,346,1.049,347,1.049,348,2.785,349,2.785,350,0.951,351,1.049,352,1.049,353,1.049,354,0.448,355,2.182,356,2.289,357,3.53,358,0.951,359,2.182,360,1.049,361,1.049,362,1.049,363,2.524,364,1.718,365,1.049,366,0.951,367,1.049,368,1.049,369,2.182,370,1.049,371,1.049,372,1.049,373,0.933,374,0.951,375,2.182,376,1.049,377,1.427,378,2.524,379,0.593,380,1.049,381,1.049,382,0.801,383,1.049,384,0.951,385,1.049,386,1.718,387,2.182,388,1.049,389,1.049,390,1.049,391,0.87,392,0.593,393,1.049,394,0.951,395,1.049,396,1.049,397,1.212,398,1.049,399,1.049,400,1.718,401,0.553,402,1.049,403,1.426,404,1.049,405,1.049,406,0.593,407,1.049,408,1.049,409,1.426,410,1.312,411,1.312,412,1.049,413,1.049,414,1.049,415,1.049,416,1.049,417,1.426,418,2.524,419,2.524,420,2.991,421,2.524,422,2.991,423,2.182,424,2.524,425,2.524,426,1.049,427,1.049,428,2.182,429,1.718,430,1.718,431,1.049]],["title/interfaces/ILoggerInstance.html",[181,1.695,324,1.18]],["body/interfaces/ILoggerInstance.html",[0,0.071,3,0.554,4,0.503,5,0.202,6,0.689,8,0.503,10,1.091,12,0.727,14,0.222,16,0.985,17,0.727,19,0.727,20,0.983,24,0.483,25,0.935,27,0.609,28,0.028,30,1.079,33,0.868,35,0.297,36,0.633,37,0.311,40,0.902,43,0.789,44,0.533,49,1.032,57,1.19,58,0.352,60,0.007,61,0.011,62,0.007,65,1.298,66,1.296,70,1.631,72,1.717,73,0.858,75,0.639,76,0.962,77,1.637,78,1.208,87,1.547,89,1.419,90,1.419,91,1.559,96,1.772,97,1.845,98,0.483,99,1.127,102,1.628,107,1.219,109,0.836,111,1.499,112,0.586,126,1.525,127,1.237,128,1.422,129,0.862,141,0.739,142,1.352,146,1.352,155,1.602,159,1.602,160,0.686,170,0.862,181,2.792,186,2.626,187,1.872,192,1.323,193,2.704,233,0.797,236,1.881,239,0.639,251,2.588,253,2.528,256,1.288,269,1.025,275,2.814,276,0.937,277,1.13,278,3.392,279,2.637,280,1.13,281,1.13,282,2.626,283,1.825,284,1.13,287,1.13,288,1.13,289,1.13,290,1.13,291,1.502,296,1.825,298,1.825,306,1.825,313,1.893,314,2.235,315,1.13,316,2.297,317,2.637,318,2.297,319,1.825,321,1.825,323,1.109,324,1.296,325,1.825,326,3.263,327,2.595,328,2.645,329,2.895,330,2.895,331,3.597,332,1.433,333,2.747,334,2.747,335,1.825,336,1.825,337,2.895,338,3.503,339,2.297,340,2.297,341,1.13,342,1.13,343,1.13,344,1.13,345,1.13,346,1.13,347,1.13,348,2.895,349,2.895,350,1.025,351,1.13,352,1.13,353,1.13,354,0.483,355,2.297,356,2.392,357,3.59,358,1.025,359,2.297,360,1.13,361,1.13,362,1.13,363,2.637,364,1.825,365,1.13,366,1.025,367,1.13,368,1.13,369,2.297,370,1.13,371,1.13,372,1.13,373,0.981,374,1.025,375,2.297,376,1.13,377,1.491,378,2.637,379,0.639,380,1.13,381,1.13,382,0.862,383,1.13,384,1.025,385,1.13,386,1.825,387,2.297,388,1.13,389,1.13,390,1.13,391,0.937,392,0.639,393,1.13,394,1.025,395,1.13,396,1.13,397,1.288,398,1.13,399,1.13,400,1.825,401,0.595,402,1.13,403,1.514,404,1.13,405,1.13,406,0.639,407,1.13,408,1.13,409,1.514,410,1.393,411,1.393,412,1.13,413,1.13,414,1.13,415,1.13,416,1.13,417,1.514,418,2.637,419,2.637,420,3.096,421,2.637,422,3.096,423,2.297,424,2.637,425,2.637,426,1.13,427,1.13,428,2.297,429,1.825,430,1.825,431,1.13,432,1.025,433,1.704,434,1.704,435,1.704,436,1.704,437,1.704,438,1.704,439,1.704,440,1.704]],["title/classes/Log4JSLoggerBinding.html",[0,0.065,441,2.682]],["body/classes/Log4JSLoggerBinding.html",[0,0.095,2,0.895,3,0.499,4,0.969,5,0.499,6,0.837,8,0.769,9,2.241,10,0.969,12,1.533,13,0.6,14,0.549,15,1.304,16,0.98,17,1.061,18,3.193,19,0.969,20,1.047,21,2.455,22,2.455,23,2.455,24,1.644,25,1.149,27,0.549,28,0.028,30,1.061,33,0.87,35,0.55,36,0.769,37,0.769,38,2.299,39,2.299,40,0.6,41,0.196,42,0.654,43,0.895,44,0.454,45,2.314,46,2.314,47,2.916,48,2.314,49,1.577,50,2.916,51,2.314,52,1.47,53,2.314,54,2.314,55,2.314,56,2.314,57,1.146,58,0.318,59,2.314,60,0.017,61,0.021,62,0.017,441,4.297,442,3.114,443,3.352,444,5.303,445,4.208,446,4.165,447,4.208,448,4.208]],["title/classes/Log4JSLoggerImplementation.html",[0,0.065,446,2.403]],["body/classes/Log4JSLoggerImplementation.html",[0,0.077,2,0.646,3,0.506,4,0.78,5,0.36,6,0.832,8,0.555,10,0.78,12,1.302,13,0.433,14,0.396,15,1.049,16,1.087,17,0.901,19,0.78,20,1.036,25,1.153,27,0.823,28,0.028,30,1.12,33,0.983,35,0.423,36,1.03,37,0.555,40,0.834,41,0.142,42,0.472,43,0.72,44,0.547,57,1.056,58,0.372,60,0.012,61,0.017,62,0.012,64,2.158,65,1.412,66,1.902,67,2.495,69,3.216,70,1.722,71,2.965,72,1.722,73,0.643,74,1.849,75,1.848,76,1.722,77,1.848,78,1.86,79,1.295,80,2.005,81,2.965,86,1.223,87,1.678,89,1.86,90,1.822,91,1.725,92,1.825,94,1.138,96,1.208,97,1.208,98,1.208,99,1.515,101,0.989,102,1.735,103,1.223,105,1.67,106,0.989,107,1.153,109,0.922,111,1.224,113,1.42,114,1.138,115,1.825,117,1.825,119,1.825,121,1.825,123,1.825,126,1.06,127,0.86,128,0.989,129,0.599,136,1.67,137,2.012,138,1.67,139,1.42,140,2.247,141,1.849,142,0.695,143,2.012,144,2.012,145,2.012,146,1.402,147,3.216,148,2.012,149,2.012,154,2.012,155,1.223,156,1.67,157,1.67,159,1.223,160,1.223,163,1.825,165,1.825,169,1.825,171,2.012,243,1.536,358,1.825,443,2.712,446,3.268,449,2.012,450,3.036,451,3.036,452,3.036,453,3.036,454,3.036,455,3.036,456,3.036,457,3.036,458,3.036,459,3.036,460,3.036,461,2.247,462,3.036,463,3.036,464,2.56,465,2.56,466,3.036,467,3.036,468,3.036,469,3.036,470,3.036,471,2.56]],["title/interfaces/LoggerBinding.html",[9,1.266,324,1.18]],["body/interfaces/LoggerBinding.html",[0,0.067,3,0.3,4,0.684,5,0.444,6,0.641,8,0.463,9,2.214,10,1.066,14,0.33,16,0.886,17,0.463,19,0.684,20,0.692,21,1.98,22,1.98,23,1.98,24,0.717,25,0.813,27,0.641,28,0.028,30,1.089,33,0.979,35,0.421,36,0.463,37,0.463,38,1.622,39,1.622,40,0.941,41,0.175,43,0.985,44,0.533,57,1.084,58,0.282,60,0.01,61,0.015,62,0.01,65,1.622,66,1.218,73,0.641,78,1.351,79,0.769,86,1.019,87,1.571,91,1.642,94,0.949,96,1.06,97,1.06,98,0.717,99,1.555,101,1.218,102,1.486,103,1.019,106,0.824,107,0.97,109,0.769,111,1.201,112,0.538,114,1.402,142,1.019,146,1.257,207,1.749,233,1.184,236,2.349,237,1.281,239,0.949,243,1.281,251,2.769,253,2.723,257,1.522,291,2.131,313,1.622,314,1.792,323,2.44,324,1.601,327,1.184,328,1.184,332,1.45,333,1.281,334,1.281,354,0.717,373,1.609,397,2.656,401,0.884,410,1.281,411,1.281,432,1.522,472,1.392,473,2.531,474,2.531,475,3.638,476,2.531,477,1.98,478,1.678,479,2.956,480,1.678,481,1.873,482,1.873,483,1.873,484,2.48,485,1.522,486,3.293,487,1.873,488,2.48,489,2.057,490,1.678,491,1.678,492,2.768,493,2.48,494,1.873,495,1.873,496,2.768,497,1.873,498,1.873,499,1.678,500,1.873,501,1.678,502,3.293,503,2.249,504,1.873,505,1.678,506,1.402,507,2.768,508,3.293,509,1.873,510,1.678,511,2.95,512,1.873,513,1.873,514,1.873,515,1.873,516,3.293,517,1.873,518,1.873,519,1.873,520,1.873,521,1.873,522,1.873,523,1.873,524,1.873,525,4.063,526,1.873,527,1.873,528,1.873,529,1.873,530,1.873,531,1.873,532,2.48,533,1.873,534,2.768,535,1.873,536,2.768,537,1.873,538,2.768,539,1.873,540,1.873,541,1.873,542,1.678,543,1.873,544,1.873,545,1.873,546,1.873,547,1.873,548,1.873,549,1.873,550,1.873,551,1.873,552,1.873,553,1.873,554,1.678,555,1.873,556,1.873,557,1.873,558,1.873,559,1.873,560,1.873,561,1.873,562,1.873,563,1.873,564,1.873,565,1.873,566,1.873,567,1.873]],["title/classes/LoggerBindings.html",[0,0.065,323,1.46]],["body/classes/LoggerBindings.html",[0,0.062,2,0.486,3,0.271,4,0.633,5,0.497,6,0.738,8,0.765,9,2.25,10,0.966,13,0.326,14,0.298,15,0.852,16,1.039,17,0.765,19,0.633,20,0.88,21,0.92,22,0.92,23,0.92,24,0.981,25,1.004,27,0.77,28,0.028,30,1.097,33,0.98,35,0.4,36,0.418,37,0.418,38,1.502,39,1.502,40,0.924,41,0.195,43,0.978,44,0.521,57,1.043,58,0.261,60,0.009,61,0.014,62,0.009,65,1.559,66,1.128,73,0.609,78,1.271,79,1.271,80,0.857,86,0.92,87,1.585,89,1.525,90,1.525,91,1.606,94,0.857,96,0.981,97,0.981,98,0.647,99,1.497,101,1.128,102,1.497,103,0.92,106,0.744,107,0.922,109,0.694,111,1.069,112,0.486,114,0.857,142,0.958,146,1.257,207,1.958,233,1.621,236,2.129,237,1.156,239,0.857,243,1.156,251,2.72,253,2.668,257,1.374,291,2.025,313,1.502,314,1.396,323,2.505,324,1.521,327,1.621,328,1.621,332,1.494,333,1.156,334,1.156,354,0.981,373,1.641,397,2.879,401,0.798,410,1.156,411,1.156,472,1.257,475,2.564,477,1.396,478,1.515,479,3.178,480,1.515,481,1.691,482,1.691,483,1.691,484,2.775,485,1.374,486,3.716,487,1.691,488,2.297,489,1.906,490,1.515,491,1.515,492,2.564,493,2.297,494,2.564,495,2.564,496,3.457,497,2.564,498,2.564,499,2.297,500,2.564,501,2.297,502,3.716,503,2.517,504,2.564,505,2.297,506,1.751,507,3.457,508,3.716,509,2.564,510,2.297,511,3.329,512,2.564,513,2.564,514,2.564,515,2.564,516,3.716,517,1.691,518,1.691,519,1.691,520,1.691,521,1.691,522,1.691,523,1.691,524,1.691,525,4.063,526,1.691,527,1.691,528,1.691,529,1.691,530,1.691,531,1.691,532,3.097,533,3.098,534,2.564,535,1.691,536,2.564,537,1.691,538,2.564,539,1.691,540,1.691,541,1.691,542,2.297,543,3.457,544,1.691,545,3.098,546,1.691,547,1.691,548,1.691,549,1.691,550,1.691,551,3.098,552,2.564,553,1.691,554,1.515,555,1.691,556,1.691,557,1.691,558,1.691,559,1.691,560,1.691,561,1.691,562,1.691,563,1.691,564,3.098,565,1.691,566,1.691,567,1.691,568,2.285,569,3.466,570,2.285,571,2.285,572,2.285,573,2.285,574,2.285,575,2.285,576,2.285,577,2.285,578,2.285]],["title/classes/LoggerConfigurationImpl.html",[0,0.065,579,2.403]],["body/classes/LoggerConfigurationImpl.html",[0,0.055,2,0.416,3,0.51,4,0.562,5,0.232,6,0.794,8,0.949,10,0.949,13,0.279,14,0.255,15,0.756,16,0.99,17,1.011,19,0.562,20,1.024,25,1.101,27,0.801,28,0.028,30,1.055,33,0.962,35,0.263,36,1.011,37,0.357,40,0.95,43,0.789,44,0.445,57,1.139,58,0.449,60,0.008,61,0.012,62,0.008,73,0.825,74,1.332,76,1.326,79,1.896,80,2.163,87,1.69,89,1.719,90,1.633,91,1.797,96,1.406,98,0.87,99,1.634,101,2.001,102,1.406,106,0.637,107,1.249,112,0.416,113,1.775,114,0.733,126,0.683,127,0.554,128,0.637,129,0.386,142,1.463,146,1.483,159,1.733,160,1.733,180,3.943,191,2.851,198,2.591,199,2.591,202,2.037,207,1.437,236,1.238,251,2.742,253,2.453,256,2.321,282,2.282,313,1.865,327,2.646,350,2.282,366,1.848,374,2.586,384,2.586,394,2.586,401,0.683,403,1.69,417,2.366,488,2.037,489,2.088,490,2.516,491,3.441,579,4.338,580,1.176,581,3.796,582,5.192,583,3.073,584,3.796,585,3.796,586,3.796,587,4.302,588,3.796,589,1.956,590,1.956,591,1.956,592,1.956,593,3.073,594,1.956,595,1.956,596,1.956,597,3.073,598,1.956,599,1.956,600,3.073,601,2.274,602,2.274,603,1.956,604,1.956,605,4.302,606,5.377,607,5.865,608,4.534,609,5.377,610,5.377,611,1.956,612,1.956,613,1.956,614,4.302,615,4.302,616,1.956,617,3.073,618,1.956,619,1.956,620,1.956,621,1.956,622,1.649,623,3.073,624,1.956,625,1.956,626,3.796,627,1.956,628,1.956,629,1.956,630,1.956,631,3.073,632,3.073,633,1.956,634,1.956,635,1.956,636,1.956,637,1.956,638,3.073,639,1.956,640,1.956,641,1.956]],["title/classes/LoggerFactory.html",[0,0.065,192,1.027]],["body/classes/LoggerFactory.html",[0,0.069,2,0.344,3,0.397,4,0.483,5,0.192,6,0.74,8,0.706,10,1.019,12,0.697,13,0.231,14,0.211,15,0.65,16,1.086,17,0.834,19,0.611,20,0.975,24,0.459,25,1.019,27,0.713,28,0.028,30,1.052,33,0.885,35,0.287,36,0.777,37,0.296,40,0.936,43,0.77,44,0.528,49,1.254,57,1.178,58,0.403,60,0.006,61,0.01,62,0.006,65,1.325,66,1.485,70,1.168,72,1.68,73,0.814,75,0.607,76,0.922,77,1.594,78,1.385,79,1.385,80,1.71,87,1.558,89,1.461,90,1.291,91,1.59,96,1.689,97,1.756,98,0.459,99,1.204,102,1.689,105,0.89,107,1.199,109,0.802,111,1.505,112,0.562,126,0.922,127,0.748,128,0.86,129,0.521,141,0.702,142,1.149,146,1.39,155,1.555,159,1.555,160,0.652,170,0.819,181,2.76,186,2.743,187,1.634,192,1.363,193,2.646,233,0.757,236,1.837,239,0.607,251,2.559,253,2.496,256,1.805,269,0.973,275,2.855,276,0.89,277,1.073,278,3.326,279,2.559,280,1.073,281,1.073,282,1.588,283,2.819,284,1.073,287,1.073,288,1.073,289,1.073,290,1.073,291,1.145,296,1.073,298,1.073,306,1.073,313,1.977,314,2.402,315,1.073,316,1.751,317,2.559,318,1.751,319,1.073,321,1.073,323,1.064,324,1.089,325,1.073,326,2.557,327,2.25,328,2.346,329,2.819,330,2.819,331,2.819,332,1.123,333,2.152,334,2.152,335,1.073,336,1.751,337,2.819,338,3.441,339,2.217,340,2.217,341,1.073,342,1.073,343,1.073,344,1.073,345,1.073,346,1.073,347,1.073,348,2.819,349,2.819,350,0.973,351,1.073,352,1.073,353,1.073,354,0.748,355,3.024,356,3.017,357,3.969,358,2.011,359,2.217,360,1.073,361,1.073,362,1.073,363,2.559,364,1.751,365,1.073,366,1.588,367,1.751,368,1.751,369,2.559,370,1.751,371,1.751,372,1.751,373,1.093,374,2.011,375,2.819,376,1.073,377,1.881,378,3.326,379,0.99,380,1.751,381,1.751,382,1.337,383,1.751,384,1.588,385,1.751,386,1.751,387,2.217,388,1.073,389,1.073,390,2.217,391,1.453,392,1.254,393,2.217,394,1.588,395,2.217,396,2.559,397,1.235,398,1.073,399,1.073,400,1.751,401,0.565,402,1.073,403,1.453,404,1.073,405,1.073,406,0.607,407,1.073,408,1.073,409,1.453,410,1.337,411,1.337,412,1.073,413,1.073,414,1.073,415,1.073,416,2.217,417,2.123,418,2.559,419,2.559,420,3.024,421,2.559,422,3.024,423,2.217,424,2.559,425,2.559,426,1.073,427,2.217,428,2.217,429,1.751,430,1.751,431,1.073,480,1.751,642,1.619,643,1.619,644,1.619,645,1.619,646,1.619,647,1.619,648,1.619,649,1.619,650,1.619,651,1.619,652,1.619,653,1.619,654,1.619,655,1.619,656,1.619,657,1.619]],["title/interfaces/LoggerImplementation.html",[65,0.957,324,1.18]],["body/interfaces/LoggerImplementation.html",[0,0.061,3,0.266,4,0.624,5,0.405,6,0.712,8,0.959,9,2.142,10,1.074,14,0.292,16,0.841,17,0.41,19,0.624,20,0.643,21,0.903,22,0.903,23,0.903,24,0.635,25,0.959,27,0.779,28,0.028,30,1.107,33,0.982,35,0.397,36,0.41,37,0.41,38,1.481,39,1.481,40,0.959,41,0.159,43,0.949,44,0.519,57,1.036,58,0.349,60,0.009,61,0.014,62,0.009,65,1.578,66,1.507,70,1.193,73,0.766,74,1.481,75,1.281,76,1.193,77,1.281,78,1.512,79,0.681,86,1.376,87,1.653,89,1.657,90,1.594,91,1.734,94,1.281,96,1.172,97,1.311,98,0.968,99,1.665,101,1.348,102,1.632,103,1.376,106,1.113,107,1.077,109,1.038,111,1.249,112,0.477,114,0.841,142,1.201,146,1.319,207,1.935,233,1.049,236,2.113,237,1.729,239,1.281,243,1.729,251,2.71,253,2.658,257,1.348,291,2.365,313,2.006,314,1.376,323,2.367,324,1.507,327,1.049,328,1.049,332,1.552,333,1.729,334,1.729,354,0.635,373,1.486,397,2.551,401,0.783,410,1.135,411,1.135,432,1.348,472,1.233,475,2.528,477,1.376,478,1.487,479,2.994,480,1.487,481,2.528,482,2.528,483,2.528,484,2.743,485,2.054,486,3.424,487,2.528,488,2.265,489,2.545,490,2.265,491,2.265,492,3.424,493,3.067,494,1.66,495,1.66,496,2.528,497,1.66,498,1.66,499,1.487,500,1.66,501,1.487,502,3.062,503,2.054,504,1.66,505,1.487,506,1.281,507,2.528,508,3.062,509,1.66,510,1.487,511,2.743,512,1.66,513,1.66,514,1.66,515,1.66,516,3.062,517,1.66,518,1.66,519,1.66,520,1.66,521,1.66,522,1.66,523,1.66,524,1.66,525,3.883,526,1.66,527,1.66,528,1.66,529,1.66,530,1.66,531,1.66,532,2.265,533,1.66,534,2.528,535,1.66,536,2.528,537,1.66,538,2.528,539,1.66,540,1.66,541,1.66,542,1.487,543,1.66,544,1.66,545,1.66,546,1.66,547,1.66,548,1.66,549,1.66,550,1.66,551,1.66,552,1.66,553,1.66,554,1.487,555,1.66,556,1.66,557,1.66,558,1.66,559,1.66,560,1.66,561,1.66,562,1.66,563,1.66,564,1.66,565,1.66,566,1.66,567,1.66,658,2.243,659,2.243,660,2.243,661,2.243,662,2.243,663,2.243]],["title/classes/LoglevelLoggerBinding.html",[0,0.065,664,2.682]],["body/classes/LoglevelLoggerBinding.html",[0,0.095,2,0.895,3,0.499,4,0.969,5,0.499,6,0.837,8,0.769,9,2.241,10,0.969,12,1.533,13,0.6,14,0.549,15,1.304,16,0.98,17,1.061,18,3.193,19,0.969,20,1.047,21,2.455,22,2.455,23,2.455,24,1.644,25,1.149,27,0.549,28,0.028,30,1.061,33,0.87,35,0.55,36,0.769,37,0.769,38,2.299,39,2.299,40,0.6,41,0.196,42,0.654,43,0.895,44,0.454,45,2.314,46,2.314,47,2.916,48,2.314,49,1.577,50,2.916,51,2.314,52,1.47,53,2.314,54,2.314,55,2.314,56,2.314,57,1.146,58,0.318,59,2.314,60,0.017,61,0.021,62,0.017,107,1.203,664,4.297,665,3.114,666,5.303,667,4.208,668,4.165,669,4.208,670,4.208]],["title/classes/LoglevelLoggerImplementation.html",[0,0.065,668,2.403]],["body/classes/LoglevelLoggerImplementation.html",[0,0.075,2,0.625,3,0.625,4,0.761,5,0.348,6,0.826,8,0.537,10,0.761,12,1.278,13,0.419,14,0.383,15,1.024,16,1.08,17,0.885,19,0.761,20,1.032,25,1.145,27,0.826,28,0.028,30,1.11,33,0.98,35,0.451,36,1.017,37,0.537,40,0.867,41,0.137,42,0.456,43,0.703,44,0.553,57,1.098,58,0.314,60,0.012,61,0.016,62,0.012,64,2.108,65,1.391,66,1.882,67,2.45,69,3.168,70,1.691,71,2.911,72,1.691,73,0.726,74,1.805,75,1.815,76,1.691,77,1.815,78,1.844,79,1.265,80,1.561,81,2.911,86,1.182,87,1.679,89,1.844,90,1.805,91,1.716,92,1.765,94,1.1,96,1.371,97,1.18,98,1.18,99,1.492,101,0.956,102,1.72,103,1.182,105,1.614,106,0.956,107,1.237,109,0.891,111,0.953,112,0.625,113,1.373,114,1.1,115,1.765,117,1.765,119,1.765,121,1.765,123,1.765,125,3.492,126,1.691,127,1.371,128,1.576,129,0.956,130,1.946,131,2.475,132,2.475,133,2.475,134,2.475,135,2.475,136,1.614,137,1.946,138,1.614,139,1.373,141,1.272,142,0.953,143,1.946,144,1.946,145,1.946,146,1.361,147,2.911,150,2.475,151,2.172,152,2.475,155,1.677,156,1.614,157,2.291,159,1.182,160,1.182,163,1.765,165,1.765,169,1.765,170,1.485,471,2.475,668,3.209,671,1.765,672,2.935,673,2.935,674,2.935,675,2.935,676,2.935,677,2.935,678,2.935,679,2.935,680,2.935,681,2.935,682,3.512,683,2.935,684,2.935,685,2.935,686,2.935,687,2.935,688,2.935]],["title/classes/NullLoggerImplementation.html",[0,0.065,391,1.994]],["body/classes/NullLoggerImplementation.htmltitle/classes/PinoLoggerBinding.html",[0,0.065,696,2.682]],["body/classes/PinoLoggerBinding.html",[0,0.095,2,0.895,3,0.499,4,0.969,5,0.499,6,0.837,8,0.769,9,2.241,10,0.969,12,1.533,13,0.6,14,0.549,15,1.304,16,0.98,17,1.061,18,3.193,19,0.969,20,1.047,21,2.455,22,2.455,23,2.455,24,1.644,25,1.149,27,0.549,28,0.028,30,1.061,33,0.87,35,0.55,36,0.769,37,0.769,38,2.299,39,2.299,40,0.6,41,0.196,42,0.654,43,0.895,44,0.454,45,2.314,46,2.314,47,2.916,48,2.314,49,1.577,50,2.916,51,2.314,52,1.47,53,2.314,54,2.314,55,2.314,56,2.314,57,1.146,58,0.318,59,2.314,60,0.017,61,0.021,62,0.017,696,4.297,697,3.114,698,3.665,699,5.303,700,4.208,701,4.165,702,4.208,703,4.208]],["title/classes/PinoLoggerImplementation.html",[0,0.065,701,2.403]],["body/classes/PinoLoggerImplementation.html",[0,0.073,2,0.599,3,0.479,4,0.739,5,0.334,6,0.828,8,0.514,10,0.739,12,1.249,13,0.402,14,0.367,15,0.994,16,1.097,17,1.042,19,0.739,20,1.026,25,1.149,27,0.819,28,0.028,30,1.098,33,0.979,35,0.443,36,1.118,37,0.514,40,0.873,41,0.131,42,0.438,43,0.682,44,0.549,57,1.02,58,0.413,60,0.011,61,0.016,62,0.011,64,2.045,65,1.365,66,1.856,67,2.393,68,3.988,69,3.108,70,1.652,71,2.843,72,1.652,73,0.617,74,1.752,75,1.773,76,1.652,77,1.773,78,1.824,79,1.436,80,1.773,81,2.843,86,1.133,87,1.671,89,1.824,90,1.783,91,1.704,92,1.692,94,1.055,96,1.145,97,1.145,98,1.145,99,1.464,101,1.316,102,1.701,103,1.133,105,1.548,106,0.916,107,1.125,109,0.855,111,0.925,112,0.599,113,1.316,114,1.055,115,1.692,117,1.692,119,1.692,121,1.692,123,1.692,126,0.983,127,0.797,128,0.916,129,1.125,136,1.548,137,1.865,138,1.548,139,1.316,140,2.082,141,1.752,142,1.083,143,1.865,144,1.865,145,1.865,146,1.375,147,2.843,148,1.865,149,1.865,154,1.865,155,1.133,156,1.548,157,1.548,159,1.905,160,1.628,161,2.373,162,2.373,163,2.43,164,2.373,165,2.43,169,1.692,170,1.424,171,1.865,172,2.373,187,1.54,193,2.223,194,1.865,243,1.424,461,2.991,464,2.373,465,2.373,698,3.291,701,3.134,704,1.865,705,2.814,706,2.814,707,2.814,708,2.814,709,2.814,710,2.814,711,2.814,712,2.814,713,2.814,714,2.814,715,2.814,716,4.729,717,4.729,718,2.814,719,5.169,720,2.373,721,2.814,722,2.814,723,2.814,724,2.814,725,4.042,726,2.814]],["title/classes/WinstonLoggerBinding.html",[0,0.065,727,2.682]],["body/classes/WinstonLoggerBinding.html",[0,0.095,2,0.896,3,0.5,4,0.97,5,0.5,6,0.837,8,0.77,9,2.241,10,0.97,12,1.534,13,0.601,14,0.55,15,1.305,16,0.981,17,1.062,18,3.195,19,0.97,20,1.048,21,2.456,22,2.456,23,2.456,24,1.645,25,1.149,27,0.55,28,0.028,30,1.062,33,0.87,35,0.55,36,0.77,37,0.77,38,2.301,39,2.301,41,0.197,42,0.655,43,0.896,44,0.455,45,2.317,46,2.317,47,2.919,48,2.317,49,1.579,50,2.919,51,2.317,52,1.472,53,2.317,54,2.317,55,2.317,56,2.317,57,1.147,58,0.318,59,2.317,60,0.017,61,0.021,62,0.017,727,4.299,728,3.118,729,3.457,730,5.307,731,4.214,732,4.167,733,4.214,734,4.214]],["title/classes/WinstonLoggerImplementation.html",[0,0.065,732,2.403]],["body/classes/WinstonLoggerImplementation.html",[0,0.073,2,0.605,3,0.483,4,0.744,5,0.337,6,0.821,8,0.52,10,0.744,12,1.256,13,0.406,14,0.371,15,1.001,16,1.074,17,0.869,19,0.744,20,1.028,25,1.137,27,0.811,28,0.028,30,1.101,33,0.981,35,0.445,36,1.005,37,0.52,40,0.581,41,0.133,42,0.442,43,0.687,44,0.525,57,1.025,58,0.359,60,0.011,61,0.016,62,0.011,64,2.06,65,1.371,66,1.862,67,2.407,69,3.122,70,1.661,71,2.86,72,1.661,73,0.62,74,1.765,75,1.783,76,1.661,77,1.783,78,1.829,79,1.237,80,1.526,81,2.86,86,1.145,87,1.666,89,1.829,90,1.788,91,1.707,92,1.71,94,1.066,96,1.153,97,1.153,98,1.153,99,1.471,101,0.926,102,1.706,103,1.145,105,1.564,106,0.926,107,1.129,109,0.864,111,0.932,113,1.33,114,1.066,115,1.71,117,1.71,119,1.71,121,1.71,123,1.71,127,0.805,128,0.926,129,0.804,136,1.564,138,1.564,139,1.33,142,0.651,146,1.404,147,2.86,148,1.885,149,1.885,154,2.699,155,1.64,157,2.239,159,1.145,160,1.145,163,1.71,165,2.448,169,1.71,171,1.885,194,1.885,243,1.439,250,3.433,256,1.904,259,2.398,260,2.398,261,2.398,401,0.993,461,4.357,720,2.398,729,2.856,732,3.153,735,1.885,736,2.844,737,2.844,738,2.844,739,2.844,740,5.496,741,2.844,742,2.844,743,2.844,744,2.844,745,2.844,746,2.844,747,2.844,748,2.844,749,4.072,750,2.844,751,2.844,752,2.398,753,5.889,754,2.844,755,2.844,756,5.496,757,2.844,758,2.844,759,2.844,760,2.844,761,2.844,762,2.844,763,2.844,764,2.844,765,2.844,766,2.844,767,2.844,768,2.844,769,2.844]],["title/coverage.html",[770,3.563]],["body/coverage.html",[0,0.123,1,2.976,5,0.477,6,0.91,7,2.976,9,1.405,27,0.525,28,0.028,31,2.666,58,0.303,60,0.016,61,0.02,62,0.016,63,3.418,65,1.062,73,0.525,112,0.856,113,2.898,130,3.415,173,2.976,174,2.212,175,2.976,181,1.881,192,1.139,220,2.976,221,2.976,226,2.666,229,2.976,275,2.212,276,3.297,323,1.62,324,1.851,391,2.212,401,2.28,441,2.976,442,2.976,446,2.666,449,3.415,472,3.127,501,4.328,579,2.666,580,3.098,664,2.976,665,2.976,668,2.666,671,3.418,696,2.976,697,2.976,701,2.666,704,3.415,727,2.976,728,2.976,732,2.666,735,3.415,770,2.976,771,3.391,772,4.022,773,3.391,774,4.022,775,4.022,776,5.055,777,3.391,778,4.022,779,4.022,780,4.022,781,4.022,782,5.153,783,4.022,784,4.022,785,4.022,786,4.022,787,4.022,788,6.341,789,6.341,790,5.153,791,5.153,792,6.447,793,4.022,794,4.022,795,4.022,796,5.686,797,5.686,798,3.391,799,3.391]],["title/miscellaneous/enumerations.html",[800,1.702,801,3.646]],["body/miscellaneous/enumerations.html",[3,0.629,6,0.691,14,0.691,28,0.025,60,0.021,61,0.024,62,0.021,80,1.986,107,1.266,126,1.851,127,1.501,128,1.726,129,1.046,401,1.851,580,3.186,622,4.468,800,2.914,801,4.468,802,4.468]],["title/index.html",[14,0.404,803,2.61,804,2.61]],["body/index.html",[8,0.718,11,3.381,20,0.611,28,0.026,40,0.927,41,0.319,42,0.957,58,0.297,60,0.016,61,0.02,62,0.016,73,0.775,107,1.11,146,0.9,174,3.093,179,3.756,190,2.908,202,2.605,222,2.908,230,3.381,257,2.363,324,1.28,332,1.569,373,1.816,377,1.473,397,1.838,443,3.093,477,2.045,493,2.605,503,2.363,511,3.94,608,3.314,698,3.381,729,3.093,805,3.314,806,2.667,807,3.93,808,3.93,809,3.93,810,3.727,811,3.93,812,3.93,813,4.742,814,3.93,815,4.161,816,3.93,817,3.93,818,3.93,819,5.077,820,3.93,821,3.93,822,3.93,823,2.569,824,3.93,825,3.93,826,4.554,827,3.756,828,5.624,829,5.624,830,1.989,831,3.93,832,3.756,833,3.93,834,3.93,835,3.93,836,5.077,837,3.93,838,3.93,839,3.93,840,3.93,841,3.93,842,6.499,843,3.93,844,3.93,845,6.154,846,5.077,847,3.93,848,3.93,849,3.93,850,3.93,851,5.077,852,3.93,853,5.077,854,5.012,855,5.944,856,3.93,857,3.93,858,3.93,859,3.314,860,3.93,861,6.567,862,5.077,863,3.93,864,3.93,865,3.93,866,3.93,867,5.077,868,5.077,869,3.93,870,3.93,871,3.93,872,3.93,873,5.077,874,5.624,875,5.624,876,3.93,877,3.93,878,3.93,879,3.93,880,3.93,881,1.583]],["title/license.html",[803,2.61,804,2.61,882,2.29]],["body/license.html",[28,0.023,60,0.019,61,0.023,62,0.019,234,3.996,417,2.606,542,3.782,554,3.141,771,3.996,815,4.222,854,3.996,881,1.909,882,3.506,883,6.122,884,4.739,885,5.706,886,4.739,887,4.739,888,4.739,889,4.739,890,4.739,891,4.739,892,6.782,893,4.739,894,4.739,895,5.162,896,4.739,897,5.706,898,4.739,899,4.739,900,4.739,901,4.739,902,4.739,903,4.739,904,4.739,905,4.739,906,5.706,907,4.739,908,4.739,909,4.739,910,4.739,911,4.739,912,4.739,913,3.996,914,5.706,915,5.706,916,4.739,917,4.739,918,4.739,919,4.739,920,4.739,921,4.739,922,4.739,923,4.739,924,4.739,925,4.739,926,4.739,927,4.739,928,4.739,929,4.739,930,4.739,931,4.739,932,4.739,933,4.739,934,4.739,935,4.739,936,4.739,937,4.739,938,4.739,939,4.739,940,4.739,941,4.739,942,4.739,943,3.996,944,4.739,945,4.739]],["title/modules.html",[810,3.191]],["body/modules.html",[28,0.025,60,0.022,61,0.025,62,0.022,810,3.612]],["title/overview.html",[946,4.06]],["body/overview.html",[2,1.152,28,0.024,60,0.021,61,0.024,62,0.021,139,2.531,432,3.255,946,4.565,947,5.413]],["title/miscellaneous/typealiases.html",[800,1.702,948,4.323]],["body/miscellaneous/typealiases.html",[3,0.706,6,0.823,14,0.664,27,0.664,28,0.027,40,0.727,60,0.02,61,0.024,62,0.02,63,3.062,78,1.808,125,4.312,126,2.08,127,1.686,128,1.939,129,1.175,146,1.166,207,2.381,291,2.208,472,2.801,478,3.376,479,3.062,671,3.062,800,2.801,949,5.093,950,5.093,951,4.294,952,4.294]],["title/unit-test.html",[953,3.308,954,2.358]],["body/unit-test.html",[5,0.464,7,2.894,28,0.028,58,0.295,60,0.015,61,0.02,62,0.015,63,2.352,73,0.51,174,2.151,175,2.894,221,2.894,229,2.894,276,2.151,442,2.894,449,2.592,472,2.151,580,2.352,665,2.894,671,2.352,697,2.894,704,2.592,728,2.894,735,2.592,770,2.894,773,3.298,776,5.886,777,5.308,798,3.298,799,3.298,953,3.298,954,2.352,955,3.911,956,3.911,957,3.911,958,6.813,959,3.911,960,3.911,961,3.911,962,3.911,963,3.911,964,6.145,965,5.061,966,3.911,967,3.911,968,5.061,969,3.911,970,5.611,971,5.061,972,3.911,973,3.911,974,3.911,975,6.736,976,6.294,977,5.611,978,3.911,979,3.911,980,3.911,981,3.911,982,3.911,983,3.911,984,5.061,985,3.911,986,3.911,987,3.911,988,5.061,989,3.911,990,3.911,991,3.911,992,3.911,993,3.911,994,3.911,995,3.911,996,3.911,997,3.911,998,5.061,999,5.061,1000,5.061,1001,5.061,1002,5.061,1003,3.911,1004,3.911,1005,5.061,1006,5.061,1007,5.061,1008,3.911,1009,3.911,1010,3.911,1011,3.911]],["title/miscellaneous/variables.html",[800,1.702,1012,3.646]],["body/miscellaneous/variables.html",[6,0.86,14,0.614,27,0.87,28,0.028,33,0.871,58,0.355,60,0.019,61,0.022,62,0.019,63,2.829,79,2.057,80,2.522,112,1.209,113,3.185,114,1.763,125,3.765,130,4.201,146,1.077,449,3.118,489,2.587,579,3.118,580,2.829,671,2.829,682,3.967,704,3.118,735,3.118,800,2.587,802,3.967,951,4.79,952,4.79,1012,3.967,1013,4.705,1014,4.705,1015,4.705]],["title/additional-documentation/slf4ts-api.html",[41,0.126,42,0.42,506,1.012,1016,1.263]],["body/additional-documentation/slf4ts-api.html",[0,0.064,3,0.42,5,0.42,9,1.656,10,0.977,13,0.677,16,0.598,20,0.551,21,1.91,22,1.91,23,1.91,28,0.028,33,0.907,35,0.458,40,0.892,41,0.286,42,0.887,43,0.801,44,0.406,60,0.014,61,0.019,62,0.014,64,1.793,65,1.411,67,2.888,70,1.237,72,1.237,73,0.776,79,1.076,80,2.295,87,1.538,91,1.699,94,1.328,97,1.003,98,1.003,99,1.343,101,1.859,102,1.514,106,1.154,107,1.127,109,1.076,111,1.085,112,0.754,126,1.237,127,1.343,128,1.154,129,1.127,139,1.657,141,1.536,142,1.307,187,1.154,191,2.348,192,1.003,202,2.348,207,1.657,222,2.621,230,2.13,236,1.91,263,2.348,313,2.654,323,1.91,324,1.859,326,2.13,332,1.571,354,1.514,357,2.13,373,1.734,379,1.328,392,1.328,401,1.237,403,1.948,406,1.328,432,2.13,443,1.948,479,3.213,503,2.851,505,2.348,510,3.143,601,2.621,602,2.621,729,1.948,752,2.987,805,2.987,806,2.055,810,2.348,813,2.987,827,4.852,832,3.509,859,3.998,881,1.427,895,3.998,1017,3.543,1018,3.543,1019,3.543,1020,3.543,1021,3.543,1022,3.543,1023,3.543,1024,3.543,1025,3.543,1026,3.543,1027,1.657,1028,5.95,1029,3.543,1030,3.543,1031,3.543,1032,3.543,1033,3.543,1034,3.543,1035,3.543,1036,3.543,1037,3.543,1038,4.742,1039,4.742,1040,3.543,1041,2.987,1042,3.543,1043,3.543,1044,3.543,1045,3.543,1046,3.543,1047,3.543,1048,3.543,1049,1.793,1050,1.657,1051,6.124,1052,2.987,1053,3.543,1054,3.543,1055,3.543,1056,3.543,1057,3.543,1058,3.543,1059,3.543,1060,3.543,1061,4.742,1062,3.543,1063,3.543,1064,2.987,1065,3.543,1066,4.507,1067,2.987]],["title/additional-documentation/slf4ts-bunyan.html",[11,1.623,41,0.126,506,1.012,1016,1.263]],["body/additional-documentation/slf4ts-bunyan.html",[11,3.665,13,0.87,28,0.028,35,0.402,41,0.295,42,0.729,44,0.402,52,1.638,58,0.354,60,0.019,61,0.022,62,0.019,73,0.74,111,1.074,112,0.998,129,0.926,187,1.985,192,1.329,237,2.374,239,1.758,314,1.889,332,1.239,354,1.329,373,1.329,377,1.758,379,1.758,382,2.374,392,1.758,406,1.758,409,2.58,477,2.284,485,2.82,806,2.033,823,2.374,830,2.374,881,1.889,1027,2.194,1049,2.87,1050,2.194,1068,2.58,1069,2.58,1070,3.119,1071,3.109,1072,3.109,1073,3.956,1074,3.956,1075,3.956,1076,3.956,1077,3.956,1078,3.956,1079,4.691,1080,3.471,1081,3.956,1082,3.956,1083,3.956,1084,2.58,1085,3.109]],["title/additional-documentation/slf4ts-cassandra-log-adapter.html",[41,0.1,73,0.281,174,1.183,506,0.806,826,1.592,1016,1.006]],["body/additional-documentation/slf4ts-cassandra-log-adapter.html",[28,0.028,33,0.666,35,0.4,40,0.95,41,0.295,42,0.725,44,0.521,58,0.459,60,0.018,61,0.022,62,0.018,73,0.737,87,1.147,91,1.232,146,1.482,174,3.56,179,4.868,181,2.843,190,3.451,191,3.092,192,1.321,242,3.933,291,2.022,332,1.605,354,1.321,484,3.092,499,3.092,806,2.022,815,3.451,826,4.676,832,3.451,881,1.879,1027,2.181,1041,3.933,1050,2.181,1052,3.933,1086,4.664,1087,4.664,1088,4.664,1089,6.08,1090,4.664,1091,4.664,1092,4.664,1093,4.664,1094,5.651,1095,4.664,1096,4.664,1097,3.933,1098,4.664,1099,4.664,1100,4.664,1101,4.664,1102,4.664]],["title/additional-documentation/slf4ts-console.html",[41,0.126,230,1.623,506,1.012,1016,1.263]],["body/additional-documentation/slf4ts-console.html",[3,0.582,13,0.887,28,0.028,35,0.421,41,0.306,42,0.763,44,0.421,52,1.715,58,0.37,60,0.019,61,0.023,62,0.019,129,0.969,187,1.898,192,1.39,230,3.736,263,3.254,332,1.296,354,1.39,373,1.39,377,2.184,379,1.84,392,1.84,406,1.84,477,2.347,806,2.128,823,2.484,830,2.484,881,1.977,882,3.633,954,2.952,1027,2.296,1049,2.949,1050,2.296,1068,2.7,1069,2.7,1070,3.205,1084,2.7,1103,4.91,1104,4.91,1105,4.91,1106,4.14,1107,4.91,1108,4.91,1109,4.91]],["title/additional-documentation/slf4ts-log4js.html",[41,0.126,443,1.485,506,1.012,1016,1.263]],["body/additional-documentation/slf4ts-log4js.html",[3,0.525,5,0.525,13,0.848,27,0.714,28,0.028,35,0.469,40,0.631,41,0.29,42,0.688,44,0.379,52,1.545,58,0.334,60,0.018,61,0.022,62,0.018,79,1.662,111,1.013,112,0.941,127,1.253,129,0.873,142,1.013,156,3.267,187,1.782,192,1.253,256,2.069,314,1.782,332,1.168,354,1.253,373,1.253,377,2.051,379,1.658,392,1.658,406,1.658,443,3.507,477,2.204,602,3.274,806,1.918,823,2.239,830,2.239,881,1.782,913,3.731,943,4.614,954,2.66,1027,2.069,1049,2.769,1050,2.069,1068,2.433,1069,2.433,1070,3.413,1071,2.933,1072,2.933,1084,2.433,1085,2.933,1097,3.731,1106,3.731,1110,5.472,1111,4.425,1112,3.731,1113,4.425,1114,4.425,1115,4.425,1116,4.425,1117,4.425,1118,4.425,1119,4.425,1120,4.425,1121,4.425,1122,4.425,1123,4.425,1124,4.425,1125,4.425,1126,4.425,1127,4.425,1128,4.425,1129,4.425]],["title/additional-documentation/slf4ts-loglevel.html",[41,0.126,107,0.533,506,1.012,1016,1.263]],["body/additional-documentation/slf4ts-loglevel.html",[13,0.88,28,0.028,35,0.413,41,0.298,42,0.75,44,0.413,52,1.684,58,0.364,60,0.019,61,0.023,62,0.019,73,0.629,107,1.218,111,1.104,112,1.026,129,0.952,187,1.877,192,1.366,237,2.44,239,1.808,314,2.322,332,1.273,354,1.366,373,1.366,377,2.161,379,1.808,382,2.44,392,1.808,406,1.808,477,2.322,806,2.09,823,2.44,830,2.44,881,1.942,954,2.899,1027,2.255,1049,2.918,1050,2.255,1068,2.652,1069,2.652,1070,3.171,1071,3.196,1072,3.196,1080,3.568,1084,2.652,1085,3.196]],["title/additional-documentation/slf4ts-pino.html",[41,0.126,506,1.012,698,1.623,1016,1.263]],["body/additional-documentation/slf4ts-pino.html",[13,0.866,28,0.028,35,0.399,41,0.295,42,0.723,44,0.399,52,1.624,58,0.351,60,0.018,61,0.022,62,0.018,73,0.736,111,1.065,112,0.99,129,0.918,187,1.977,192,1.317,237,2.354,239,1.743,332,1.228,354,1.317,356,2.796,373,1.317,377,1.743,379,1.743,382,2.354,392,1.743,406,1.743,409,2.558,477,2.272,485,2.796,698,3.651,806,2.016,823,2.354,830,2.354,881,1.873,1027,2.175,1049,2.855,1050,2.175,1068,2.558,1069,2.558,1070,3.103,1071,3.083,1072,3.083,1073,3.922,1074,3.922,1075,3.922,1076,3.922,1077,3.922,1078,3.922,1080,3.442,1081,3.922,1082,3.922,1083,3.922,1084,2.558,1085,3.083,1130,4.651,1131,4.651,1132,4.651,1133,4.651]],["title/additional-documentation/slf4ts-winston.html",[41,0.126,506,1.012,729,1.485,1016,1.263]],["body/additional-documentation/slf4ts-winston.html",[5,0.545,13,0.862,28,0.028,35,0.48,40,0.799,41,0.293,42,0.715,44,0.48,49,1.724,52,1.606,58,0.475,60,0.018,61,0.022,62,0.018,67,2.327,73,0.6,101,1.497,112,0.978,127,1.302,129,0.908,142,1.053,156,3.081,187,1.497,192,1.302,263,3.048,328,2.15,332,1.214,354,1.302,373,1.302,377,1.724,379,1.724,392,1.724,406,1.724,477,1.852,489,2.529,532,3.048,601,3.403,729,3.606,806,1.993,823,2.327,827,4.146,830,2.327,881,1.852,1027,2.15,1049,2.327,1050,2.15,1064,3.878,1066,4.724,1067,3.878,1068,2.529,1069,2.529,1070,2.529,1084,2.529,1112,4.724,1134,4.599,1135,4.599,1136,4.599,1137,4.599,1138,4.599,1139,4.599,1140,4.599,1141,4.599,1142,4.599,1143,4.599,1144,4.599,1145,4.599,1146,4.599,1147,4.599,1148,4.599,1149,4.599,1150,4.599,1151,4.599,1152,4.599]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["0",{"_index":401,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/slf4ts-api.html":{}}}],["0/1",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1106,"title":{},"body":{"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{}}}],["01t11:22:33.444",{"_index":1116,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["01t12:00:00.999z",{"_index":1107,"title":{},"body":{"additional-documentation/slf4ts-console.html":{}}}],["1",{"_index":141,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["1.0.0",{"_index":1049,"title":{},"body":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["1/1",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":969,"title":{},"body":{"unit-test.html":{}}}],["10/15",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":776,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["127.0.0.1:9042",{"_index":1091,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["13/14",{"_index":1004,"title":{},"body":{"unit-test.html":{}}}],["13/15",{"_index":961,"title":{},"body":{"unit-test.html":{}}}],["13/22",{"_index":1010,"title":{},"body":{"unit-test.html":{}}}],["14",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":962,"title":{},"body":{"unit-test.html":{}}}],["14/17",{"_index":986,"title":{},"body":{"unit-test.html":{}}}],["16",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":975,"title":{},"body":{"unit-test.html":{}}}],["17/21",{"_index":967,"title":{},"body":{"unit-test.html":{}}}],["18",{"_index":947,"title":{},"body":{"overview.html":{}}}],["2",{"_index":752,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["2/2",{"_index":976,"title":{},"body":{"unit-test.html":{}}}],["2/8",{"_index":993,"title":{},"body":{"unit-test.html":{}}}],["20/32",{"_index":974,"title":{},"body":{"unit-test.html":{}}}],["2017",{"_index":1105,"title":{},"body":{"additional-documentation/slf4ts-console.html":{}}}],["2018",{"_index":884,"title":{},"body":{"license.html":{}}}],["2020",{"_index":1115,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["24/27",{"_index":984,"title":{},"body":{"unit-test.html":{}}}],["25",{"_index":992,"title":{},"body":{"unit-test.html":{}}}],["25/25",{"_index":988,"title":{},"body":{"unit-test.html":{}}}],["3",{"_index":139,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"overview.html":{},"additional-documentation/slf4ts-api.html":{}}}],["3/21",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":987,"title":{},"body":{"unit-test.html":{}}}],["3/7",{"_index":990,"title":{},"body":{"unit-test.html":{}}}],["31/39",{"_index":997,"title":{},"body":{"unit-test.html":{}}}],["32/36",{"_index":972,"title":{},"body":{"unit-test.html":{}}}],["32/40",{"_index":991,"title":{},"body":{"unit-test.html":{}}}],["38",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["38/45",{"_index":999,"title":{},"body":{"unit-test.html":{}}}],["39/44",{"_index":965,"title":{},"body":{"unit-test.html":{}}}],["4",{"_index":1029,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["4/4",{"_index":777,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["4/9",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["42/42",{"_index":963,"title":{},"body":{"unit-test.html":{}}}],["43",{"_index":989,"title":{},"body":{"unit-test.html":{}}}],["43/43",{"_index":959,"title":{},"body":{"unit-test.html":{}}}],["44",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["44/47",{"_index":983,"title":{},"body":{"unit-test.html":{}}}],["44/48",{"_index":978,"title":{},"body":{"unit-test.html":{}}}],["44/50",{"_index":1011,"title":{},"body":{"unit-test.html":{}}}],["45/51",{"_index":1008,"title":{},"body":{"unit-test.html":{}}}],["48/52",{"_index":1002,"title":{},"body":{"unit-test.html":{}}}],["5/13",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":979,"title":{},"body":{"unit-test.html":{}}}],["5/8",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":994,"title":{},"body":{"unit-test.html":{}}}],["59",{"_index":1009,"title":{},"body":{"unit-test.html":{}}}],["6/10",{"_index":1001,"title":{},"body":{"unit-test.html":{}}}],["60",{"_index":1000,"title":{},"body":{"unit-test.html":{}}}],["62",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":973,"title":{},"body":{"unit-test.html":{}}}],["64",{"_index":980,"title":{},"body":{"unit-test.html":{}}}],["66",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":1005,"title":{},"body":{"unit-test.html":{}}}],["7/11",{"_index":981,"title":{},"body":{"unit-test.html":{}}}],["7/12",{"_index":995,"title":{},"body":{"unit-test.html":{}}}],["7/7",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["73/91",{"_index":971,"title":{},"body":{"unit-test.html":{}}}],["79",{"_index":996,"title":{},"body":{"unit-test.html":{}}}],["8",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":1006,"title":{},"body":{"unit-test.html":{}}}],["80",{"_index":970,"title":{},"body":{"unit-test.html":{}}}],["81",{"_index":966,"title":{},"body":{"unit-test.html":{}}}],["82",{"_index":985,"title":{},"body":{"unit-test.html":{}}}],["83",{"_index":968,"title":{},"body":{"unit-test.html":{}}}],["84",{"_index":998,"title":{},"body":{"unit-test.html":{}}}],["87",{"_index":960,"title":{},"body":{"unit-test.html":{}}}],["88",{"_index":1007,"title":{},"body":{"unit-test.html":{}}}],["89",{"_index":964,"title":{},"body":{"unit-test.html":{}}}],["9",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":977,"title":{},"body":{"unit-test.html":{}}}],["93",{"_index":1003,"title":{},"body":{"unit-test.html":{}}}],["94",{"_index":982,"title":{},"body":{"unit-test.html":{}}}],["above",{"_index":913,"title":{},"body":{"license.html":{},"additional-documentation/slf4ts-log4js.html":{}}}],["absolutepath",{"_index":557,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["abstract",{"_index":1021,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["abstracting",{"_index":812,"title":{},"body":{"index.html":{}}}],["access",{"_index":1099,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["action",{"_index":938,"title":{},"body":{"license.html":{}}}],["actual",{"_index":64,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["adapter",{"_index":826,"title":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}},"body":{"index.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["adapter/lib/slf4ts/cassandralogadapter.ts",{"_index":175,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"coverage.html":{},"unit-test.html":{}}}],["adapter/lib/slf4ts/cassandralogadapter.ts:29",{"_index":189,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["adapter/lib/slf4ts/cassandralogadapter.ts:8",{"_index":182,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["add",{"_index":862,"title":{},"body":{"index.html":{}}}],["added",{"_index":288,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["additional",{"_index":506,"title":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["additionalarguments",{"_index":136,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["additionalarguments.foreach((arg",{"_index":718,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["additionalarguments.pop",{"_index":684,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["additionalarguments.splice(0",{"_index":138,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["additionalarguments.splice(additionalarguments.length",{"_index":140,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["additionalarguments[additionalarguments.length",{"_index":683,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["additionaldata",{"_index":1055,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["additionally",{"_index":497,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["additionalpaths",{"_index":516,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["additionalpaths.push(mainpath",{"_index":524,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["additionalpaths.push(process.env.logger_binding_additional_path",{"_index":518,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["affect",{"_index":385,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["alias",{"_index":204,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["aliases",{"_index":949,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alongside",{"_index":820,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":904,"title":{},"body":{"license.html":{}}}],["andthe",{"_index":1040,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["any).paths",{"_index":547,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["any)[logmethodname",{"_index":270,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["api",{"_index":42,"title":{"additional-documentation/slf4ts-api.html":{}},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["api/lib/slf4ts/loggerbindings.ts",{"_index":472,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:101",{"_index":474,"title":{},"body":{"interfaces/LoggerBinding.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:108",{"_index":476,"title":{},"body":{"interfaces/LoggerBinding.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:133",{"_index":569,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:166",{"_index":576,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:186",{"_index":574,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:190",{"_index":573,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:200",{"_index":578,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:216",{"_index":571,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:28",{"_index":659,"title":{},"body":{"interfaces/LoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:38",{"_index":658,"title":{},"body":{"interfaces/LoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:49",{"_index":660,"title":{},"body":{"interfaces/LoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:59",{"_index":662,"title":{},"body":{"interfaces/LoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:69",{"_index":663,"title":{},"body":{"interfaces/LoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:77",{"_index":661,"title":{},"body":{"interfaces/LoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerbindings.ts:94",{"_index":473,"title":{},"body":{"interfaces/LoggerBinding.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts",{"_index":580,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:108",{"_index":594,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:124",{"_index":612,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:137",{"_index":604,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:147",{"_index":613,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:157",{"_index":616,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:172",{"_index":599,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:26",{"_index":591,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:27",{"_index":592,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:28",{"_index":589,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:29",{"_index":590,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:41",{"_index":596,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:57",{"_index":620,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:70",{"_index":621,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerconfiguration.ts:89",{"_index":618,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["api/lib/slf4ts/loggerfactory.ts",{"_index":276,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"coverage.html":{},"unit-test.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:117",{"_index":303,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:121",{"_index":310,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:126",{"_index":305,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:130",{"_index":300,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:134",{"_index":301,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:138",{"_index":304,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:148",{"_index":312,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:153",{"_index":320,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:158",{"_index":297,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:163",{"_index":307,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:168",{"_index":322,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:173",{"_index":299,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:178",{"_index":302,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:182",{"_index":309,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:197",{"_index":691,"title":{},"body":{"classes/NullLoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:20",{"_index":439,"title":{},"body":{"interfaces/ILoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:201",{"_index":690,"title":{},"body":{"classes/NullLoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:205",{"_index":692,"title":{},"body":{"classes/NullLoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:209",{"_index":694,"title":{},"body":{"classes/NullLoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:213",{"_index":695,"title":{},"body":{"classes/NullLoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:217",{"_index":693,"title":{},"body":{"classes/NullLoggerImplementation.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:238",{"_index":650,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:271",{"_index":656,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:28",{"_index":433,"title":{},"body":{"interfaces/ILoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:284",{"_index":651,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:303",{"_index":657,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:313",{"_index":642,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:314",{"_index":644,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:315",{"_index":646,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:316",{"_index":643,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:317",{"_index":645,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:319",{"_index":652,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:343",{"_index":654,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:355",{"_index":648,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:36",{"_index":437,"title":{},"body":{"interfaces/ILoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:44",{"_index":440,"title":{},"body":{"interfaces/ILoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:52",{"_index":434,"title":{},"body":{"interfaces/ILoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:59",{"_index":436,"title":{},"body":{"interfaces/ILoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:66",{"_index":438,"title":{},"body":{"interfaces/ILoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:72",{"_index":435,"title":{},"body":{"interfaces/ILoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:83",{"_index":294,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:84",{"_index":295,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:85",{"_index":293,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:86",{"_index":292,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api/lib/slf4ts/loggerfactory.ts:87",{"_index":286,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["api@x.y.z",{"_index":867,"title":{},"body":{"index.html":{}}}],["app",{"_index":1070,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["appenders",{"_index":1110,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["application",{"_index":377,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["application\":\"my",{"_index":1075,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["application.log",{"_index":1113,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["arg",{"_index":719,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["args",{"_index":96,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["args.push(`${classname",{"_index":211,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["args.push(furtherinfo",{"_index":213,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["args.push(message",{"_index":212,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["arguments",{"_index":243,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["arguments[0",{"_index":259,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["arguments[1",{"_index":260,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["arguments[2",{"_index":261,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["arising",{"_index":942,"title":{},"body":{"license.html":{}}}],["array",{"_index":486,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["assigned",{"_index":316,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["associated",{"_index":893,"title":{},"body":{"license.html":{}}}],["async",{"_index":72,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["authors",{"_index":931,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":289,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["b",{"_index":878,"title":{},"body":{"index.html":{}}}],["b.getvendor",{"_index":537,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["b.getversion",{"_index":539,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["before",{"_index":847,"title":{},"body":{"index.html":{}}}],["binding",{"_index":373,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["binding.bindings",{"_index":1033,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["binding.getloggerimplementation",{"_index":404,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["binding.getvendor",{"_index":410,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{}}}],["binding.getversion",{"_index":411,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{}}}],["bindings",{"_index":397,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"index.html":{}}}],["bindings.foreach((binding",{"_index":408,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["bindings.length",{"_index":400,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["bindings.push(path.basename(modulefolder",{"_index":567,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["bindings.registerbinding",{"_index":1048,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["bindings[0",{"_index":399,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["boolean",{"_index":394,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["branch",{"_index":871,"title":{},"body":{"index.html":{}}}],["branches",{"_index":955,"title":{},"body":{"unit-test.html":{}}}],["break",{"_index":56,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["bridge",{"_index":481,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["build",{"_index":846,"title":{},"body":{"index.html":{}}}],["builder",{"_index":66,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["builds",{"_index":478,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"miscellaneous/typealiases.html":{}}}],["bunyan",{"_index":11,"title":{"additional-documentation/slf4ts-bunyan.html":{}},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-bunyan.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerbinding.ts",{"_index":7,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"coverage.html":{},"unit-test.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerbinding.ts:18",{"_index":26,"title":{},"body":{"classes/BunyanLoggerBinding.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerbinding.ts:33",{"_index":29,"title":{},"body":{"classes/BunyanLoggerBinding.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerbinding.ts:37",{"_index":32,"title":{},"body":{"classes/BunyanLoggerBinding.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerbinding.ts:41",{"_index":34,"title":{},"body":{"classes/BunyanLoggerBinding.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts",{"_index":63,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:37",{"_index":83,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:38",{"_index":84,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:39",{"_index":82,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:41",{"_index":95,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:58",{"_index":88,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:62",{"_index":100,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:66",{"_index":108,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:71",{"_index":110,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:77",{"_index":104,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:81",{"_index":85,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyan/lib/slf4ts/bunyanloggerimplementation.ts:85",{"_index":93,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["bunyanloggerbinding",{"_index":1,"title":{"classes/BunyanLoggerBinding.html":{}},"body":{"classes/BunyanLoggerBinding.html":{},"coverage.html":{}}}],["bunyanloggerimplementation",{"_index":31,"title":{"classes/BunyanLoggerImplementation.html":{}},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"coverage.html":{}}}],["c",{"_index":234,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"license.html":{}}}],["c=global.console",{"_index":252,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["cache",{"_index":355,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["call",{"_index":485,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["callarguments",{"_index":461,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["callarguments.concat((err",{"_index":761,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["callarguments.concat(...additionalarguments",{"_index":748,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["callarguments.concat(meta",{"_index":759,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["callarguments.concat(metaarg",{"_index":760,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["callarguments.length",{"_index":751,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["callarguments.push(arg",{"_index":721,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["callarguments.splice(2",{"_index":750,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["callarguments.unshift(error",{"_index":723,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["callarguments.unshift(message",{"_index":722,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["callback",{"_index":607,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["cassandra",{"_index":174,"title":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}},"body":{"classes/CassandraLogAdapter.html":{},"coverage.html":{},"index.html":{},"unit-test.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["cassandralogadapter",{"_index":173,"title":{"classes/CassandraLogAdapter.html":{}},"body":{"classes/CassandraLogAdapter.html":{},"coverage.html":{}}}],["cassandralogadapter(client",{"_index":1094,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["catch(console.error",{"_index":413,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["catch(error",{"_index":1058,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["categories",{"_index":1114,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["category",{"_index":469,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["causes",{"_index":370,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["certain",{"_index":601,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["change",{"_index":493,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"index.html":{}}}],["changes",{"_index":384,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["charge",{"_index":889,"title":{},"body":{"license.html":{}}}],["check",{"_index":856,"title":{},"body":{"index.html":{}}}],["checking",{"_index":848,"title":{},"body":{"index.html":{}}}],["checks",{"_index":600,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["choose",{"_index":817,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":824,"title":{},"body":{"index.html":{}}}],["claim",{"_index":934,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"additional-documentation/slf4ts-api.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"overview.html":{}}}],["classname",{"_index":185,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["clears",{"_index":366,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["client",{"_index":179,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"index.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["client.connect",{"_index":1098,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["client.keyspace",{"_index":1101,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["code",{"_index":830,"title":{},"body":{"index.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["collection",{"_index":811,"title":{},"body":{"index.html":{}}}],["commit",{"_index":863,"title":{},"body":{"index.html":{}}}],["common_metadata",{"_index":390,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["commonloggerdata",{"_index":137,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["commonloggerdata[0",{"_index":143,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["commonloggerdata[1",{"_index":144,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["commonloggerdata[2",{"_index":145,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["commonmetadata",{"_index":278,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["compatible",{"_index":814,"title":{},"body":{"index.html":{}}}],["completed",{"_index":487,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["completing",{"_index":331,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["compose",{"_index":850,"title":{},"body":{"index.html":{}}}],["compoundkey",{"_index":159,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["concat(...additionalarguments",{"_index":462,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["concat(this.bindings",{"_index":544,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["concrete",{"_index":818,"title":{},"body":{"index.html":{}}}],["conditionally",{"_index":367,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["conditions",{"_index":912,"title":{},"body":{"license.html":{}}}],["config",{"_index":101,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["configchanged",{"_index":427,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["configchanged(event",{"_index":647,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["configmapping",{"_index":581,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["configuration",{"_index":489,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"interfaces/LoggerImplementation.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["configurations",{"_index":617,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["configure",{"_index":156,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["configured",{"_index":499,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["connection",{"_index":944,"title":{},"body":{"license.html":{}}}],["console",{"_index":230,"title":{"additional-documentation/slf4ts-console.html":{}},"body":{"classes/ConsoleLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-console.html":{}}}],["console.[log",{"_index":244,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["console.log",{"_index":245,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["console.log('slf4ts",{"_index":402,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["console/lib/slf4ts/consoleloggerbinding.ts",{"_index":221,"title":{},"body":{"classes/ConsoleLoggerBinding.html":{},"coverage.html":{},"unit-test.html":{}}}],["console/lib/slf4ts/consoleloggerbinding.ts:17",{"_index":224,"title":{},"body":{"classes/ConsoleLoggerBinding.html":{}}}],["console/lib/slf4ts/consoleloggerbinding.ts:32",{"_index":225,"title":{},"body":{"classes/ConsoleLoggerBinding.html":{}}}],["console/lib/slf4ts/consoleloggerbinding.ts:36",{"_index":227,"title":{},"body":{"classes/ConsoleLoggerBinding.html":{}}}],["console/lib/slf4ts/consoleloggerbinding.ts:40",{"_index":228,"title":{},"body":{"classes/ConsoleLoggerBinding.html":{}}}],["console/lib/slf4ts/consoleloggerimplementation.ts",{"_index":229,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"coverage.html":{},"unit-test.html":{}}}],["console/lib/slf4ts/consoleloggerimplementation.ts:18",{"_index":232,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["console/lib/slf4ts/consoleloggerimplementation.ts:36",{"_index":235,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["console/lib/slf4ts/consoleloggerimplementation.ts:40",{"_index":246,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["console/lib/slf4ts/consoleloggerimplementation.ts:44",{"_index":248,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["console/lib/slf4ts/consoleloggerimplementation.ts:48",{"_index":249,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["console/lib/slf4ts/consoleloggerimplementation.ts:52",{"_index":247,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["console/lib/slf4ts/consoleloggerimplementation.ts:65",{"_index":238,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["console/test/slf4ts/consoleloggerimplementationtest.ts:xxx:xxx",{"_index":1109,"title":{},"body":{"additional-documentation/slf4ts-console.html":{}}}],["consoleloggerbinding",{"_index":220,"title":{"classes/ConsoleLoggerBinding.html":{}},"body":{"classes/ConsoleLoggerBinding.html":{},"coverage.html":{}}}],["consoleloggerimplementation",{"_index":226,"title":{"classes/ConsoleLoggerImplementation.html":{}},"body":{"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"coverage.html":{}}}],["consoleloggerimplementationtest.checkargumentpassing",{"_index":1108,"title":{},"body":{"additional-documentation/slf4ts-console.html":{}}}],["const",{"_index":44,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["constructor(additionalpaths",{"_index":568,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["constructor(c",{"_index":231,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["constructor(emitter",{"_index":178,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["constructor(name",{"_index":285,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["contactpoints",{"_index":1090,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["containing",{"_index":504,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["context",{"_index":1129,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["contract",{"_index":939,"title":{},"body":{"license.html":{}}}],["copies",{"_index":906,"title":{},"body":{"license.html":{}}}],["copy",{"_index":542,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"license.html":{}}}],["copyright",{"_index":883,"title":{},"body":{"license.html":{}}}],["couple",{"_index":1035,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["coverage",{"_index":770,"title":{"coverage.html":{}},"body":{"coverage.html":{},"unit-test.html":{}}}],["create",{"_index":1089,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["created",{"_index":1096,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["creates",{"_index":233,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{}}}],["creates/uses",{"_index":1092,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["current",{"_index":335,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["currentdir",{"_index":47,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["currently",{"_index":1134,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["custom",{"_index":1136,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["d",{"_index":872,"title":{},"body":{"index.html":{}}}],["daily",{"_index":1140,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["damages",{"_index":935,"title":{},"body":{"license.html":{}}}],["datastax",{"_index":1086,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["date",{"_index":273,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["date%.log",{"_index":1147,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["datepattern",{"_index":1148,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["dd",{"_index":1151,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["deal",{"_index":894,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":945,"title":{},"body":{"license.html":{}}}],["debug",{"_index":127,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["debug(...args",{"_index":296,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["default",{"_index":79,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-log4js.html":{}}}],["defaultloggerinstance",{"_index":275,"title":{"classes/DefaultLoggerInstance.html":{}},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"coverage.html":{}}}],["defaultloglevel",{"_index":582,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["defined",{"_index":25,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["dependencies",{"_index":823,"title":{},"body":{"index.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["dependency",{"_index":836,"title":{},"body":{"index.html":{}}}],["dependent",{"_index":858,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":608,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{},"index.html":{}}}],["depsrelease",{"_index":852,"title":{},"body":{"index.html":{}}}],["described",{"_index":240,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"index.html":{}}}],["destinationstream",{"_index":716,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["develop",{"_index":1023,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["development",{"_index":833,"title":{},"body":{"index.html":{}}}],["disable",{"_index":199,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"classes/LoggerConfigurationImpl.html":{}}}],["discovery",{"_index":1044,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["distribute",{"_index":902,"title":{},"body":{"license.html":{}}}],["docker",{"_index":849,"title":{},"body":{"index.html":{}}}],["docs",{"_index":855,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":771,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":1031,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["driver",{"_index":190,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"index.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["dummy",{"_index":689,"title":{},"body":{"classes/NullLoggerImplementation.html":{}}}],["during",{"_index":1043,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["each",{"_index":484,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["elasticsearch",{"_index":828,"title":{},"body":{"index.html":{}}}],["emitter",{"_index":183,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["emitter.keyspace",{"_index":197,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["emitter.on('log",{"_index":206,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["empty",{"_index":1041,"title":{},"body":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["encapsulates",{"_index":494,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["entire",{"_index":513,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["enum",{"_index":623,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["enumeration",{"_index":622,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":801,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":500,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["err",{"_index":764,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["error",{"_index":129,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["error());example",{"_index":1103,"title":{},"body":{"additional-documentation/slf4ts-console.html":{}}}],["error());license",{"_index":1085,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["error(...args",{"_index":298,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["errors",{"_index":330,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["eslint",{"_index":198,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"classes/LoggerConfigurationImpl.html":{}}}],["eslint/no",{"_index":203,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["eslint/strict",{"_index":631,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["event",{"_index":417,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"license.html":{}}}],["event.group",{"_index":419,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["event.name",{"_index":421,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["eventemitter",{"_index":180,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"classes/LoggerConfigurationImpl.html":{}}}],["events",{"_index":191,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"classes/LoggerConfigurationImpl.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["example",{"_index":13,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["examples",{"_index":829,"title":{},"body":{"index.html":{}}}],["except",{"_index":1133,"title":{},"body":{"additional-documentation/slf4ts-pino.html":{}}}],["excluded",{"_index":380,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["exist",{"_index":1034,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["existing",{"_index":838,"title":{},"body":{"index.html":{}}}],["exists",{"_index":534,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["express",{"_index":922,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":632,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["extra",{"_index":1080,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["facade",{"_index":805,"title":{},"body":{"index.html":{},"additional-documentation/slf4ts-api.html":{}}}],["false",{"_index":375,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["fields",{"_index":1081,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"unit-test.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["filename",{"_index":1112,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["files",{"_index":554,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"license.html":{}}}],["files.foreach((folder",{"_index":556,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["filter",{"_index":860,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":927,"title":{},"body":{"license.html":{}}}],["floating",{"_index":208,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["folder",{"_index":503,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{}}}],["following",{"_index":911,"title":{},"body":{"license.html":{}}}],["force",{"_index":1025,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["foreach((mainpath",{"_index":523,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["foreach((subfolder",{"_index":562,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["formerdata",{"_index":386,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["forwards",{"_index":242,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["found",{"_index":403,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["fr",{"_index":870,"title":{},"body":{"index.html":{}}}],["framework",{"_index":479,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/slf4ts-api.html":{}}}],["framework.any",{"_index":482,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["frameworks",{"_index":1036,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["free",{"_index":888,"title":{},"body":{"license.html":{}}}],["fs",{"_index":38,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["fs.existssync(packagejsonpath",{"_index":53,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["fs.existssync(path.join(modulefolder",{"_index":566,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["fs.existssync(rootpath",{"_index":553,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["fs.readdirsync(rootpath",{"_index":555,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["function",{"_index":207,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"interfaces/LoggerImplementation.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/slf4ts-api.html":{}}}],["function(bindings",{"_index":1047,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["function.executeuserentrypoint",{"_index":1125,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["function.module._load",{"_index":1123,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["functionality",{"_index":857,"title":{},"body":{"index.html":{}}}],["functions",{"_index":956,"title":{},"body":{"unit-test.html":{}}}],["furnished",{"_index":909,"title":{},"body":{"license.html":{}}}],["furtherinfo",{"_index":188,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["future",{"_index":317,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["g",{"_index":841,"title":{},"body":{"index.html":{}}}],["getallloggerbindings",{"_index":564,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["getallloggerbindings(modulefolders",{"_index":570,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["getallmodulefolders",{"_index":545,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["getallmodulefolders(additionalpaths",{"_index":572,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["getbindings",{"_index":543,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["getconfig",{"_index":583,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["getconfig(group",{"_index":593,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["getdefaultloggerbuilder",{"_index":69,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["getgroup",{"_index":280,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["getimpl",{"_index":281,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["getimplementation",{"_index":70,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["getimplementation(group",{"_index":86,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["getlogger",{"_index":358,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["getlogger(category",{"_index":470,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["getlogger(group",{"_index":649,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["getloggerimplementation",{"_index":21,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{},"additional-documentation/slf4ts-api.html":{}}}],["getloggerinstance",{"_index":71,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["getloggerinstance(group",{"_index":92,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["getloglevel",{"_index":282,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["getloglevel(group",{"_index":595,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["getmetadata",{"_index":283,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["getname",{"_index":284,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["gets",{"_index":236,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["getting",{"_index":803,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvendor",{"_index":22,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{},"additional-documentation/slf4ts-api.html":{}}}],["getversion",{"_index":23,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{},"additional-documentation/slf4ts-api.html":{}}}],["gh",{"_index":873,"title":{},"body":{"index.html":{}}}],["git",{"_index":861,"title":{},"body":{"index.html":{}}}],["given",{"_index":327,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{}}}],["global.console",{"_index":254,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["gonna",{"_index":315,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["granted",{"_index":887,"title":{},"body":{"license.html":{}}}],["group",{"_index":91,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["groupempty",{"_index":418,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["groupmatches",{"_index":422,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["group}.${name",{"_index":262,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["group}:${name",{"_index":160,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["handlelog",{"_index":177,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["handlelog(level",{"_index":184,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["hasconfig",{"_index":584,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["hasconfig(group",{"_index":598,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["hasgroupconfig",{"_index":430,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["hasnameconfig",{"_index":428,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["here",{"_index":157,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["hereby",{"_index":886,"title":{},"body":{"license.html":{}}}],["holders",{"_index":932,"title":{},"body":{"license.html":{}}}],["hostname",{"_index":1073,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["https://github.com/rstiller/slf4ts",{"_index":241,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["identifier",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["igenerate",{"_index":843,"title":{},"body":{"index.html":{}}}],["ignored",{"_index":609,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["iloggerinstance",{"_index":181,"title":{"interfaces/ILoggerInstance.html":{}},"body":{"classes/CassandraLogAdapter.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"coverage.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["impl",{"_index":279,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["implement",{"_index":1039,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["implementation",{"_index":10,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["implementation.it's",{"_index":1087,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["implementations",{"_index":1030,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["implements",{"_index":12,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["implied",{"_index":923,"title":{},"body":{"license.html":{}}}],["import",{"_index":35,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["included",{"_index":916,"title":{},"body":{"license.html":{}}}],["including",{"_index":897,"title":{},"body":{"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":1046,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{}}}],["info(...args",{"_index":306,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["informs",{"_index":492,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["init",{"_index":834,"title":{},"body":{"index.html":{}}}],["initial",{"_index":287,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["initialconfig",{"_index":341,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["initialize",{"_index":396,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["initialized",{"_index":393,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["inspired",{"_index":1017,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["instance",{"_index":146,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["instance.addcontext(key",{"_index":468,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["instance.clearcontext",{"_index":466,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["instance.configure(config",{"_index":768,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["instance.level",{"_index":464,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["instance.level(loglevelmapping[loglevel",{"_index":158,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["instance.log(...callarguments",{"_index":463,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["instance.log.apply(instance",{"_index":766,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["instance.setlevel(loglevelmapping[level",{"_index":688,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["instance.setlevel(loglevelmapping[loglevel",{"_index":686,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["instance[loglevelmapping[level]].apply(instance",{"_index":724,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["instance[logmethodid",{"_index":152,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{}}}],["instanceof",{"_index":194,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["instances",{"_index":356,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["instantiate",{"_index":372,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["interface",{"_index":324,"title":{"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"interfaces/LoggerImplementation.html":{}},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"coverage.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{}}}],["interfaces",{"_index":432,"title":{},"body":{"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"interfaces/LoggerImplementation.html":{},"overview.html":{},"additional-documentation/slf4ts-api.html":{}}}],["internal/main/run_main_module.js:17:47",{"_index":1128,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["internal/modules/cjs/loader.js:1000:32",{"_index":1122,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["internal/modules/cjs/loader.js:1151:30",{"_index":1118,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["internal/modules/cjs/loader.js:1171:10",{"_index":1120,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["internal/modules/cjs/loader.js:899:14",{"_index":1124,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["internal/modules/run_main.js:71:12",{"_index":1127,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["introduced",{"_index":837,"title":{},"body":{"index.html":{}}}],["invocation",{"_index":318,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["invoked",{"_index":483,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["invokes",{"_index":512,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["it's",{"_index":379,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["java",{"_index":1019,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["javascript",{"_index":831,"title":{},"body":{"index.html":{}}}],["keyspace",{"_index":1093,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["kind",{"_index":921,"title":{},"body":{"license.html":{}}}],["latest",{"_index":1068,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["length",{"_index":540,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["level",{"_index":142,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["level\":30",{"_index":1076,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["levels",{"_index":1137,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["liability",{"_index":936,"title":{},"body":{"license.html":{}}}],["liable",{"_index":933,"title":{},"body":{"license.html":{}}}],["lib",{"_index":827,"title":{},"body":{"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["libraries",{"_index":813,"title":{},"body":{"index.html":{},"additional-documentation/slf4ts-api.html":{}}}],["library",{"_index":819,"title":{},"body":{"index.html":{}}}],["license",{"_index":882,"title":{"license.html":{}},"body":{"license.html":{},"additional-documentation/slf4ts-console.html":{}}}],["limitation",{"_index":898,"title":{},"body":{"license.html":{}}}],["limited",{"_index":924,"title":{},"body":{"license.html":{}}}],["line",{"_index":201,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["lines",{"_index":957,"title":{},"body":{"unit-test.html":{}}}],["link",{"_index":257,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"index.html":{}}}],["list",{"_index":877,"title":{},"body":{"index.html":{}}}],["listener",{"_index":606,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["listeners",{"_index":615,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["loaded",{"_index":515,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["loading",{"_index":495,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["loads",{"_index":509,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["location",{"_index":498,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["log",{"_index":73,"title":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"index.html":{},"unit-test.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["log(...args",{"_index":94,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["log(loglevel",{"_index":308,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["log.getlogger(name",{"_index":687,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["log4js",{"_index":443,"title":{"additional-documentation/slf4ts-log4js.html":{}},"body":{"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-log4js.html":{}}}],["log4js/lib/slf4ts/log4jsloggerbinding.ts",{"_index":442,"title":{},"body":{"classes/Log4JSLoggerBinding.html":{},"coverage.html":{},"unit-test.html":{}}}],["log4js/lib/slf4ts/log4jsloggerbinding.ts:18",{"_index":444,"title":{},"body":{"classes/Log4JSLoggerBinding.html":{}}}],["log4js/lib/slf4ts/log4jsloggerbinding.ts:33",{"_index":445,"title":{},"body":{"classes/Log4JSLoggerBinding.html":{}}}],["log4js/lib/slf4ts/log4jsloggerbinding.ts:37",{"_index":447,"title":{},"body":{"classes/Log4JSLoggerBinding.html":{}}}],["log4js/lib/slf4ts/log4jsloggerbinding.ts:41",{"_index":448,"title":{},"body":{"classes/Log4JSLoggerBinding.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts",{"_index":449,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{},"coverage.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts:22",{"_index":451,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts:23",{"_index":450,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts:25",{"_index":455,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts:43",{"_index":453,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts:47",{"_index":456,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts:51",{"_index":458,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts:56",{"_index":459,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts:66",{"_index":457,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts:70",{"_index":452,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["log4js/lib/slf4ts/log4jsloggerimplementation.ts:74",{"_index":454,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["log4jsloggerbinding",{"_index":441,"title":{"classes/Log4JSLoggerBinding.html":{}},"body":{"classes/Log4JSLoggerBinding.html":{},"coverage.html":{}}}],["log4jsloggerimplementation",{"_index":446,"title":{"classes/Log4JSLoggerImplementation.html":{}},"body":{"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"coverage.html":{}}}],["logfilename",{"_index":1146,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["logger",{"_index":40,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["logger.createlogger(options",{"_index":168,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["logger.getgroup",{"_index":423,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["logger.getimpl().setconfig(event.config",{"_index":431,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["logger.getmetadata",{"_index":388,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["logger.getname",{"_index":425,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["logger.loggeroptions",{"_index":167,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["logger.resolvelevel('debug",{"_index":118,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["logger.resolvelevel('error",{"_index":124,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["logger.resolvelevel('info",{"_index":120,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["logger.resolvelevel('trace",{"_index":116,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["logger.resolvelevel('warn",{"_index":122,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["logger.setloglevel(...);license",{"_index":1102,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["logger.setloglevel(event.loglevel",{"_index":426,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["logger.setmetadata(loggerfactory.common_metadata",{"_index":389,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["logger_binding_additional_path",{"_index":502,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["logger_instance_cache",{"_index":395,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerbinding",{"_index":9,"title":{"interfaces/LoggerBinding.html":{}},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{},"coverage.html":{},"additional-documentation/slf4ts-api.html":{}}}],["loggerbindings",{"_index":323,"title":{"classes/LoggerBindings.html":{}},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"coverage.html":{},"additional-documentation/slf4ts-api.html":{}}}],["loggerbindings().getbindings",{"_index":398,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerbindings.foreach((binding",{"_index":528,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["loggerbuilder",{"_index":78,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/typealiases.html":{}}}],["loggerconfiguration",{"_index":112,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["loggerconfiguration.getconfig(group",{"_index":342,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerconfiguration.getloglevel(group",{"_index":170,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["loggerconfiguration.hasconfig(logger.getgroup",{"_index":429,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerconfiguration.onconfigchanged(loggerfactory.configchanged",{"_index":415,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerconfiguration.onloglevelchanged(loggerfactory.loglevelchanged",{"_index":414,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerconfiguration.setconfig(config",{"_index":1066,"title":{},"body":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["loggerconfiguration.setloglevel(loglevel.error",{"_index":1063,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["loggerconfiguration.setloglevel(loglevel.info",{"_index":1060,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["loggerconfiguration.setloglevel(loglevel.warn",{"_index":1062,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["loggerconfigurationimpl",{"_index":579,"title":{"classes/LoggerConfigurationImpl.html":{}},"body":{"classes/LoggerConfigurationImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggerfactory",{"_index":192,"title":{"classes/LoggerFactory.html":{}},"body":{"classes/CassandraLogAdapter.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"coverage.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["loggerfactory.common_metadata",{"_index":363,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerfactory.getlogger",{"_index":406,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["loggerfactory.getlogger(\"cassandra",{"_index":1100,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["loggerfactory.getlogger(\"my",{"_index":1052,"title":{},"body":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["loggerfactory.getlogger('cassandra",{"_index":196,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["loggerfactory.initialize",{"_index":360,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerfactory.initialized",{"_index":359,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerfactory.logger",{"_index":364,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerfactory.logger_instance_cache.clear",{"_index":376,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerfactory.logger_instance_cache.foreach((logger",{"_index":387,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerfactory.logger_instance_cache.get(compoundkey",{"_index":362,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerfactory.logger_instance_cache.has(compoundkey",{"_index":361,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerfactory.logger_instance_cache.set(compoundkey",{"_index":365,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerfactory.root_logger",{"_index":405,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerfactory.root_logger.info(message",{"_index":412,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loggerimplementation",{"_index":65,"title":{"interfaces/LoggerImplementation.html":{}},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"additional-documentation/slf4ts-api.html":{}}}],["loggername",{"_index":258,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["loggeroptions",{"_index":717,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["loggers",{"_index":67,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["logging",{"_index":332,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["logging.the",{"_index":816,"title":{},"body":{"index.html":{}}}],["loggingto",{"_index":1022,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["loglevel",{"_index":107,"title":{"additional-documentation/slf4ts-loglevel.html":{}},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-loglevel.html":{}}}],["loglevel.debug",{"_index":269,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loglevel.error",{"_index":352,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loglevel.info",{"_index":350,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loglevel.trace",{"_index":347,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loglevel.warn",{"_index":351,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerbinding.ts",{"_index":665,"title":{},"body":{"classes/LoglevelLoggerBinding.html":{},"coverage.html":{},"unit-test.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerbinding.ts:18",{"_index":666,"title":{},"body":{"classes/LoglevelLoggerBinding.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerbinding.ts:33",{"_index":667,"title":{},"body":{"classes/LoglevelLoggerBinding.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerbinding.ts:37",{"_index":669,"title":{},"body":{"classes/LoglevelLoggerBinding.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerbinding.ts:41",{"_index":670,"title":{},"body":{"classes/LoglevelLoggerBinding.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts",{"_index":671,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts:41",{"_index":673,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts:42",{"_index":672,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts:44",{"_index":677,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts:61",{"_index":675,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts:65",{"_index":678,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts:69",{"_index":680,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts:74",{"_index":681,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts:78",{"_index":679,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts:82",{"_index":674,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["loglevel/lib/slf4ts/loglevelloggerimplementation.ts:91",{"_index":676,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["loglevel[level",{"_index":265,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["loglevelchanged",{"_index":416,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["loglevelchanged(event",{"_index":653,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["logleveldesc",{"_index":682,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{},"miscellaneous/variables.html":{}}}],["loglevelloggerbinding",{"_index":664,"title":{"classes/LoglevelLoggerBinding.html":{}},"body":{"classes/LoglevelLoggerBinding.html":{},"coverage.html":{}}}],["loglevelloggerimplementation",{"_index":668,"title":{"classes/LoglevelLoggerImplementation.html":{}},"body":{"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"coverage.html":{}}}],["loglevelmapping",{"_index":113,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loglevelmapping[level",{"_index":171,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["loglevelmapping[loglevel",{"_index":465,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["loglevelmapping[loglevel.debug",{"_index":117,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["loglevelmapping[loglevel.error",{"_index":123,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["loglevelmapping[loglevel.info",{"_index":119,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["loglevelmapping[loglevel.trace",{"_index":115,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["loglevelmapping[loglevel.warn",{"_index":121,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["loglevelname",{"_index":264,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["loglevelname.tolowercase",{"_index":267,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["loglevelname].concat(additionalarguments",{"_index":274,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["logmethod",{"_index":151,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{}}}],["logmethod(...additionalarguments",{"_index":685,"title":{},"body":{"classes/LoglevelLoggerImplementation.html":{}}}],["logmethod.apply(instance",{"_index":153,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["logmethod.apply(this.console",{"_index":271,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["logmethodid",{"_index":125,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["logmethodmapping",{"_index":130,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logmethodmapping[level",{"_index":150,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{}}}],["logmethodmapping[loglevel.debug",{"_index":132,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{}}}],["logmethodmapping[loglevel.error",{"_index":135,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{}}}],["logmethodmapping[loglevel.info",{"_index":133,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{}}}],["logmethodmapping[loglevel.trace",{"_index":131,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{}}}],["logmethodmapping[loglevel.warn",{"_index":134,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{}}}],["logmethodname",{"_index":266,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["logs",{"_index":326,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["logstash",{"_index":1152,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["lvl",{"_index":762,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["m",{"_index":864,"title":{},"body":{"index.html":{}}}],["mainmodule",{"_index":519,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["make",{"_index":822,"title":{},"body":{"index.html":{}}}],["map",{"_index":36,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["matching",{"_index":61,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["meant",{"_index":1027,"title":{},"body":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["memberof",{"_index":253,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{}}}],["merchantability",{"_index":926,"title":{},"body":{"license.html":{}}}],["merge",{"_index":901,"title":{},"body":{"license.html":{}}}],["message",{"_index":187,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["messages",{"_index":329,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["meta",{"_index":756,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["metaarg",{"_index":753,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["metaargs",{"_index":749,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["metaargs.foreach((meta",{"_index":755,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["metaargs.length",{"_index":754,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["metadata",{"_index":111,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["method",{"_index":239,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["methods",{"_index":19,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["miscellaneous",{"_index":800,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":881,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["mm",{"_index":1150,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["modify",{"_index":900,"title":{},"body":{"license.html":{}}}],["module",{"_index":511,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"index.html":{}}}],["module._compile",{"_index":1117,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["module.load",{"_index":1121,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["modulefolders",{"_index":525,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["modulefolders.foreach((modulefolder",{"_index":565,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["modulefolders.push(absolutepath",{"_index":559,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["modulefolders.push(folder",{"_index":550,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["modulefolders.push(subfolder",{"_index":563,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["modulepath",{"_index":45,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["modules",{"_index":810,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{},"additional-documentation/slf4ts-api.html":{}}}],["modules.slf4ts",{"_index":809,"title":{},"body":{"index.html":{}}}],["mono",{"_index":807,"title":{},"body":{"index.html":{}}}],["msg",{"_index":763,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["msg\":\"test",{"_index":1077,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["multiple",{"_index":407,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["n",{"_index":409,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["name",{"_index":87,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["named",{"_index":505,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["nameempty",{"_index":420,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["namematches",{"_index":424,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["needs",{"_index":1038,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["new",{"_index":58,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"index.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["next",{"_index":200,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["node",{"_index":510,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["node.console",{"_index":223,"title":{},"body":{"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{}}}],["node_modules",{"_index":561,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["node_path",{"_index":496,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["nodejs",{"_index":806,"title":{},"body":{"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["noninfringement",{"_index":930,"title":{},"body":{"license.html":{}}}],["note",{"_index":382,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["nothing",{"_index":155,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["notice",{"_index":914,"title":{},"body":{"license.html":{}}}],["npm",{"_index":840,"title":{},"body":{"index.html":{}}}],["null",{"_index":193,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["nullloggerimplementation",{"_index":391,"title":{"classes/NullLoggerImplementation.html":{}},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"coverage.html":{}}}],["number",{"_index":114,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/variables.html":{}}}],["numeric",{"_index":1028,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["object",{"_index":314,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{}}}],["object.entries(metadata).foreach(([key",{"_index":467,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["object.module._extensions..js",{"_index":1119,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["objects",{"_index":1082,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["obtaining",{"_index":891,"title":{},"body":{"license.html":{}}}],["onconfigchanged",{"_index":585,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["onconfigchanged(callback",{"_index":603,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["onloglevelchanged",{"_index":586,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["onloglevelchanged(callback",{"_index":611,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["operation",{"_index":290,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["opt/slf4ts/packages/slf4ts",{"_index":958,"title":{},"body":{"unit-test.html":{}}}],["optional",{"_index":90,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["options",{"_index":166,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{}}}],["origin",{"_index":869,"title":{},"body":{"index.html":{}}}],["origin/gh",{"_index":879,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":941,"title":{},"body":{"license.html":{}}}],["out",{"_index":943,"title":{},"body":{"license.html":{},"additional-documentation/slf4ts-log4js.html":{}}}],["output",{"_index":1104,"title":{},"body":{"additional-documentation/slf4ts-console.html":{}}}],["overview",{"_index":946,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":480,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{}}}],["package",{"_index":859,"title":{},"body":{"index.html":{},"additional-documentation/slf4ts-api.html":{}}}],["package.json",{"_index":52,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["packagejson",{"_index":18,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["packagejsonpath",{"_index":51,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["packages",{"_index":853,"title":{},"body":{"index.html":{}}}],["packages/.../bunyanloggerimplementation.ts",{"_index":951,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["packages/.../log4jsloggerimplementation.ts",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../loggerbindings.ts",{"_index":950,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../loggerconfiguration.ts",{"_index":802,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["packages/.../loglevelloggerimplementation.ts",{"_index":952,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["packages/.../pinologgerimplementation.ts",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../winstonloggerimplementation.ts",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/slf4ts",{"_index":6,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["page",{"_index":1016,"title":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}},"body":{}}],["pages",{"_index":874,"title":{},"body":{"index.html":{}}}],["param",{"_index":251,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["part",{"_index":1083,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["particular",{"_index":928,"title":{},"body":{"license.html":{}}}],["party",{"_index":1139,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["passed",{"_index":237,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["path",{"_index":39,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["path.join(rootpath",{"_index":558,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["path.parse(module.filename",{"_index":46,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["path.resolve(modulepath.dir",{"_index":48,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["path.resolve(path.join(currentdir",{"_index":50,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["paths",{"_index":508,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["permission",{"_index":885,"title":{},"body":{"license.html":{}}}],["permit",{"_index":907,"title":{},"body":{"license.html":{}}}],["person",{"_index":890,"title":{},"body":{"license.html":{}}}],["persons",{"_index":908,"title":{},"body":{"license.html":{}}}],["pid",{"_index":1074,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["pino",{"_index":698,"title":{"additional-documentation/slf4ts-pino.html":{}},"body":{"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["pino(config",{"_index":726,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerbinding.ts",{"_index":697,"title":{},"body":{"classes/PinoLoggerBinding.html":{},"coverage.html":{},"unit-test.html":{}}}],["pino/lib/slf4ts/pinologgerbinding.ts:18",{"_index":699,"title":{},"body":{"classes/PinoLoggerBinding.html":{}}}],["pino/lib/slf4ts/pinologgerbinding.ts:33",{"_index":700,"title":{},"body":{"classes/PinoLoggerBinding.html":{}}}],["pino/lib/slf4ts/pinologgerbinding.ts:37",{"_index":702,"title":{},"body":{"classes/PinoLoggerBinding.html":{}}}],["pino/lib/slf4ts/pinologgerbinding.ts:41",{"_index":703,"title":{},"body":{"classes/PinoLoggerBinding.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts",{"_index":704,"title":{},"body":{"classes/PinoLoggerImplementation.html":{},"coverage.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:32",{"_index":707,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:33",{"_index":706,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:34",{"_index":705,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:36",{"_index":711,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:69",{"_index":709,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:73",{"_index":712,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:77",{"_index":714,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:82",{"_index":715,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:88",{"_index":713,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:92",{"_index":708,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pino/lib/slf4ts/pinologgerimplementation.ts:99",{"_index":710,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["pinologgerbinding",{"_index":696,"title":{"classes/PinoLoggerBinding.html":{}},"body":{"classes/PinoLoggerBinding.html":{},"coverage.html":{}}}],["pinologgerimplementation",{"_index":701,"title":{"classes/PinoLoggerImplementation.html":{}},"body":{"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"coverage.html":{}}}],["pnpm",{"_index":842,"title":{},"body":{"index.html":{}}}],["popular",{"_index":1018,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["portions",{"_index":918,"title":{},"body":{"license.html":{}}}],["postprocessor",{"_index":1065,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["pre",{"_index":1095,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["present",{"_index":602,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-log4js.html":{}}}],["prints",{"_index":1071,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["private",{"_index":16,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["process",{"_index":520,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["process.env",{"_index":517,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["process.mainmodule",{"_index":521,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["process.mainmodule.paths",{"_index":522,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["processed",{"_index":333,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{}}}],["project",{"_index":832,"title":{},"body":{"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["promise",{"_index":97,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["promise((resolve",{"_index":148,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["promises",{"_index":209,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["properties",{"_index":15,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["protected",{"_index":176,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["provided",{"_index":919,"title":{},"body":{"license.html":{}}}],["prune",{"_index":876,"title":{},"body":{"index.html":{}}}],["public",{"_index":20,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{}}}],["publish",{"_index":854,"title":{},"body":{"index.html":{},"license.html":{}}}],["publishdocslicense",{"_index":880,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":929,"title":{},"body":{"license.html":{}}}],["push",{"_index":868,"title":{},"body":{"index.html":{}}}],["re",{"_index":371,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["readonly",{"_index":17,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["register",{"_index":532,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["registerbinding",{"_index":533,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["registerbinding(binding",{"_index":575,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["registerfunc",{"_index":529,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["registerfunc(this",{"_index":531,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["registers",{"_index":605,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["registration",{"_index":514,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["reinit",{"_index":369,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["reject",{"_index":149,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["reject(err",{"_index":765,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["remove",{"_index":460,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{}}}],["removealllisteners",{"_index":587,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["removed",{"_index":610,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["removes",{"_index":614,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["report",{"_index":844,"title":{},"body":{"index.html":{}}}],["repository",{"_index":808,"title":{},"body":{"index.html":{}}}],["representing",{"_index":325,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["require(packagejsonpath",{"_index":55,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["require.main.require(binding",{"_index":530,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["reset",{"_index":374,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["reset(reinit",{"_index":655,"title":{},"body":{"classes/LoggerFactory.html":{}}}],["resets",{"_index":368,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["resolve",{"_index":154,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["restriction",{"_index":896,"title":{},"body":{"license.html":{}}}],["result",{"_index":60,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["results",{"_index":62,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["return",{"_index":57,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["returned",{"_index":597,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["returns",{"_index":30,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["reusable",{"_index":1024,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["rights",{"_index":899,"title":{},"body":{"license.html":{}}}],["rm",{"_index":851,"title":{},"body":{"index.html":{}}}],["root",{"_index":263,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["root_logger",{"_index":392,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["root_logger.info(\"test",{"_index":1084,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["root_logger.setmetadata",{"_index":1069,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["rootlogger",{"_index":161,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["rootlogger.child(metadata",{"_index":164,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["rootloggers",{"_index":68,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["rootpath",{"_index":552,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["rootpaths",{"_index":546,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["rootpaths.concat(additionalpaths).foreach((rootpath",{"_index":548,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["rotate",{"_index":1141,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["run",{"_index":845,"title":{},"body":{"index.html":{}}}],["runmain",{"_index":1126,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["s",{"_index":1088,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["sample",{"_index":1045,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["search",{"_index":507,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["sell",{"_index":905,"title":{},"body":{"license.html":{}}}],["set",{"_index":256,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-log4js.html":{}}}],["setconfig",{"_index":74,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerConfigurationImpl.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["setconfig(config",{"_index":98,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["setdefaultloglevel",{"_index":588,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["setdefaultloglevel(defaultloglevel",{"_index":619,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["setloggerbuilder",{"_index":75,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["setloggerbuilder(builder",{"_index":103,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["setloglevel",{"_index":76,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["setloglevel(loglevel",{"_index":106,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["setmetadata",{"_index":77,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["setmetadata(commonmetadata",{"_index":311,"title":{},"body":{"classes/DefaultLoggerInstance.html":{}}}],["setmetadata(metadata",{"_index":109,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["sets",{"_index":313,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["shall",{"_index":915,"title":{},"body":{"license.html":{}}}],["shared",{"_index":383,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["silly",{"_index":747,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["simple",{"_index":222,"title":{},"body":{"classes/ConsoleLoggerBinding.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{}}}],["single",{"_index":1042,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["slf",{"_index":205,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["slf.handlelog(level",{"_index":210,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["slf4j",{"_index":1020,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["slf4ts",{"_index":41,"title":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["software",{"_index":892,"title":{},"body":{"license.html":{}}}],["somefile.log",{"_index":1144,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["something",{"_index":1072,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["something(value",{"_index":1053,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["specific",{"_index":491,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"interfaces/LoggerImplementation.html":{}}}],["specified",{"_index":490,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"interfaces/LoggerImplementation.html":{}}}],["stack",{"_index":757,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["stack\":\"error",{"_index":1130,"title":{},"body":{"additional-documentation/slf4ts-pino.html":{}}}],["standard",{"_index":277,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["started",{"_index":804,"title":{"index.html":{},"license.html":{}},"body":{}}],["statement",{"_index":334,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{}}}],["statements",{"_index":773,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["static",{"_index":357,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["status",{"_index":825,"title":{},"body":{"index.html":{}}}],["stdout",{"_index":1111,"title":{},"body":{"additional-documentation/slf4ts-log4js.html":{}}}],["stream",{"_index":725,"title":{},"body":{"classes/PinoLoggerImplementation.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["subject",{"_index":910,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":903,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":917,"title":{},"body":{"license.html":{}}}],["support/register",{"_index":37,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["supported",{"_index":1135,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["t",{"_index":99,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["table",{"_index":799,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":798,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tag",{"_index":866,"title":{},"body":{"index.html":{}}}],["template",{"_index":488,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"interfaces/LoggerImplementation.html":{}}}],["test",{"_index":954,"title":{"unit-test.html":{}},"body":{"unit-test.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{}}}],["testvalue",{"_index":1056,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["thecorresponding",{"_index":821,"title":{},"body":{"index.html":{}}}],["third",{"_index":1138,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["this.bindings.filter((b",{"_index":535,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["this.bindings.push(binding",{"_index":541,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["this.builder",{"_index":165,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["this.builder(compoundkey",{"_index":471,"title":{},"body":{"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{}}}],["this.commonmetadata",{"_index":340,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.configmapping.clear",{"_index":640,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.configmapping.get",{"_index":635,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.configmapping.get(`${group",{"_index":634,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.configmapping.get(`${group}:${name",{"_index":633,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.configmapping.has(compoundkey",{"_index":641,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.configmapping.set(compoundkey",{"_index":629,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.console",{"_index":255,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["this.console.log",{"_index":268,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["this.defaultloglevel",{"_index":626,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.events.emit('changed:config",{"_index":630,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.events.emit('changed:log",{"_index":628,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.events.on('changed:config",{"_index":637,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.events.on('changed:log",{"_index":636,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.events.removealllisteners",{"_index":638,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.getallloggerbindings(modulefolders",{"_index":527,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["this.getallmodulefolders(additionalpaths",{"_index":526,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["this.getdefaultloggerbuilder",{"_index":81,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["this.getloggerinstance(group",{"_index":147,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["this.group",{"_index":338,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.impl",{"_index":336,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.impl.getimplementation(this.group",{"_index":353,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.impl.setconfig(initialconfig",{"_index":344,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.impl.setloggerbuilder(builder",{"_index":343,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.impl.setloglevel(loglevel",{"_index":345,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.impl.setmetadata(commonmetadata",{"_index":346,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.log",{"_index":195,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["this.log.apply(this",{"_index":349,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.log.debug(...args",{"_index":215,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["this.log.error(...args",{"_index":219,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["this.log.info(...args",{"_index":216,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["this.log.warn(...args",{"_index":218,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["this.loggers.get(compoundkey",{"_index":169,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["this.loggers.set(compoundkey",{"_index":163,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["this.loglevel",{"_index":339,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.loglevelmapping.clear",{"_index":639,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.loglevelmapping.get(compoundkey",{"_index":625,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.loglevelmapping.has(compoundkey",{"_index":624,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.loglevelmapping.set(compoundkey",{"_index":627,"title":{},"body":{"classes/LoggerConfigurationImpl.html":{}}}],["this.name",{"_index":337,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.name].concat(...arguments).concat(this.commonmetadata",{"_index":348,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["this.packagejson",{"_index":54,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["this.packagejson.version",{"_index":59,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{}}}],["this.rootloggers.get(compoundkey",{"_index":162,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["this.rootloggers.set(compoundkey",{"_index":172,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{}}}],["this.visitnodemodules(path.join(absolutepath",{"_index":560,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["this.visitnodemodules(rootpath).foreach((folder",{"_index":549,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["time",{"_index":1078,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-pino.html":{}}}],["tort",{"_index":940,"title":{},"body":{"license.html":{}}}],["trace",{"_index":126,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/slf4ts-api.html":{}}}],["trace(...args",{"_index":319,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["transports",{"_index":1064,"title":{},"body":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["true",{"_index":49,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/WinstonLoggerBinding.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["try",{"_index":1057,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/BunyanLoggerBinding.html":{},"classes/BunyanLoggerImplementation.html":{},"classes/CassandraLogAdapter.html":{},"classes/ConsoleLoggerBinding.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerBinding.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerBinding.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerBinding.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-log4js.html":{}}}],["type\":\"error",{"_index":1131,"title":{},"body":{"additional-documentation/slf4ts-pino.html":{}}}],["typealiases",{"_index":948,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":720,"title":{},"body":{"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["typescript",{"_index":202,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"classes/LoggerConfigurationImpl.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{}}}],["undefined",{"_index":186,"title":{},"body":{"classes/CassandraLogAdapter.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["underlying",{"_index":291,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["unit",{"_index":953,"title":{"unit-test.html":{}},"body":{"unit-test.html":{}}}],["update",{"_index":835,"title":{},"body":{"index.html":{}}}],["updated",{"_index":839,"title":{},"body":{"index.html":{}}}],["updates",{"_index":381,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["usage",{"_index":1050,"title":{},"body":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["usageof",{"_index":1026,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["use",{"_index":815,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{}}}],["used",{"_index":354,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["using",{"_index":328,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["usual",{"_index":1097,"title":{},"body":{"additional-documentation/slf4ts-cassandra-log-adapter.html":{},"additional-documentation/slf4ts-log4js.html":{}}}],["util",{"_index":250,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["util.inspect(meta",{"_index":758,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["util.inspect(new",{"_index":272,"title":{},"body":{"classes/ConsoleLoggerImplementation.html":{}}}],["v\":0",{"_index":1079,"title":{},"body":{"additional-documentation/slf4ts-bunyan.html":{}}}],["v\":1",{"_index":1132,"title":{},"body":{"additional-documentation/slf4ts-pino.html":{}}}],["value",{"_index":80,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/slf4ts-api.html":{}}}],["variable",{"_index":501,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"coverage.html":{}}}],["variables",{"_index":1012,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendor",{"_index":475,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["vendorequals",{"_index":536,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["verbose",{"_index":214,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["version",{"_index":477,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-bunyan.html":{},"additional-documentation/slf4ts-console.html":{},"additional-documentation/slf4ts-log4js.html":{},"additional-documentation/slf4ts-loglevel.html":{},"additional-documentation/slf4ts-pino.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["versionequals",{"_index":538,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["visitnodemodules",{"_index":551,"title":{},"body":{"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"interfaces/LoggerImplementation.html":{}}}],["visitnodemodules(rootpath",{"_index":577,"title":{},"body":{"classes/LoggerBindings.html":{}}}],["void",{"_index":102,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/ConsoleLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"interfaces/LoggerBinding.html":{},"classes/LoggerBindings.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"interfaces/LoggerImplementation.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"additional-documentation/slf4ts-api.html":{}}}],["warn",{"_index":128,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerConfigurationImpl.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/NullLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/slf4ts-api.html":{}}}],["warn(...args",{"_index":321,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["warning",{"_index":217,"title":{},"body":{"classes/CassandraLogAdapter.html":{}}}],["warranties",{"_index":925,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":920,"title":{},"body":{"license.html":{}}}],["whether",{"_index":937,"title":{},"body":{"license.html":{}}}],["wide",{"_index":378,"title":{},"body":{"classes/DefaultLoggerInstance.html":{},"interfaces/ILoggerInstance.html":{},"classes/LoggerFactory.html":{},"classes/NullLoggerImplementation.html":{}}}],["winston",{"_index":729,"title":{"additional-documentation/slf4ts-winston.html":{}},"body":{"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"index.html":{},"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["winston.createlogger",{"_index":769,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston.log.apply(winston",{"_index":767,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston.logger",{"_index":740,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston.transports.console",{"_index":1142,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["winston.transports.dailyrotatefile",{"_index":1145,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["winston.transports.file",{"_index":1143,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}],["winston/lib/slf4ts/winstonloggerbinding.ts",{"_index":728,"title":{},"body":{"classes/WinstonLoggerBinding.html":{},"coverage.html":{},"unit-test.html":{}}}],["winston/lib/slf4ts/winstonloggerbinding.ts:18",{"_index":730,"title":{},"body":{"classes/WinstonLoggerBinding.html":{}}}],["winston/lib/slf4ts/winstonloggerbinding.ts:33",{"_index":731,"title":{},"body":{"classes/WinstonLoggerBinding.html":{}}}],["winston/lib/slf4ts/winstonloggerbinding.ts:37",{"_index":733,"title":{},"body":{"classes/WinstonLoggerBinding.html":{}}}],["winston/lib/slf4ts/winstonloggerbinding.ts:41",{"_index":734,"title":{},"body":{"classes/WinstonLoggerBinding.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts",{"_index":735,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{},"coverage.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts:103",{"_index":741,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts:23",{"_index":737,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts:24",{"_index":736,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts:26",{"_index":742,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts:75",{"_index":739,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts:79",{"_index":743,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts:87",{"_index":745,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts:91",{"_index":746,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts:95",{"_index":744,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winston/lib/slf4ts/winstonloggerimplementation.ts:99",{"_index":738,"title":{},"body":{"classes/WinstonLoggerImplementation.html":{}}}],["winstonloggerbinding",{"_index":727,"title":{"classes/WinstonLoggerBinding.html":{}},"body":{"classes/WinstonLoggerBinding.html":{},"coverage.html":{}}}],["winstonloggerimplementation",{"_index":732,"title":{"classes/WinstonLoggerImplementation.html":{}},"body":{"classes/WinstonLoggerBinding.html":{},"classes/WinstonLoggerImplementation.html":{},"coverage.html":{}}}],["within",{"_index":1061,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["without",{"_index":895,"title":{},"body":{"license.html":{},"additional-documentation/slf4ts-api.html":{}}}],["work",{"_index":1032,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["worktree",{"_index":875,"title":{},"body":{"index.html":{}}}],["write",{"_index":1037,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["x",{"_index":1051,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["x\");license",{"_index":1067,"title":{},"body":{"additional-documentation/slf4ts-api.html":{},"additional-documentation/slf4ts-winston.html":{}}}],["x.log.debug(`a",{"_index":1054,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["x.log.error('error",{"_index":1059,"title":{},"body":{"additional-documentation/slf4ts-api.html":{}}}],["x.y.z",{"_index":865,"title":{},"body":{"index.html":{}}}],["yes",{"_index":105,"title":{},"body":{"classes/BunyanLoggerImplementation.html":{},"classes/Log4JSLoggerImplementation.html":{},"classes/LoggerFactory.html":{},"classes/LoglevelLoggerImplementation.html":{},"classes/PinoLoggerImplementation.html":{},"classes/WinstonLoggerImplementation.html":{}}}],["yyyy",{"_index":1149,"title":{},"body":{"additional-documentation/slf4ts-winston.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BunyanLoggerBinding.html":{"url":"classes/BunyanLoggerBinding.html","title":"class - BunyanLoggerBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BunyanLoggerBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerBinding.ts\n        \n\n            \n                Description\n            \n            \n                LoggerBinding implementation for Bunyan.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerBinding\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                packageJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLoggerImplementation\n                            \n                            \n                                    Public\n                                getVendor\n                            \n                            \n                                    Public\n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerBinding.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            packageJson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerBinding.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLoggerImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerImplementation()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerBinding.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BunyanLoggerImplementation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVendor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVendor()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerBinding.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVersion()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerBinding.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport * as Logger from 'bunyan'\nimport { LoggerBinding } from 'slf4ts-api'\n\nimport { BunyanLoggerImplementation } from './BunyanLoggerImplementation'\n\n/**\n * LoggerBinding implementation for Bunyan.\n *\n * @export\n * @class BunyanLoggerBinding\n * @implements {LoggerBinding}\n */\nexport class BunyanLoggerBinding implements LoggerBinding {\n  private readonly packageJson: any;\n\n  public constructor () {\n    const modulePath = path.parse(module.filename)\n    let currentDir = path.resolve(modulePath.dir)\n    while (true) {\n      currentDir = path.resolve(path.join(currentDir, '..'))\n      const packageJsonPath = path.resolve(path.join(currentDir, 'package.json'))\n      if (fs.existsSync(packageJsonPath)) {\n        this.packageJson = require(packageJsonPath)\n        break\n      }\n    }\n  }\n\n  public getLoggerImplementation (): BunyanLoggerImplementation {\n    return new BunyanLoggerImplementation()\n  }\n\n  public getVendor (): string {\n    return 'bunyan'\n  }\n\n  public getVersion (): string {\n    return this.packageJson.version\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BunyanLoggerImplementation.html":{"url":"classes/BunyanLoggerImplementation.html","title":"class - BunyanLoggerImplementation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BunyanLoggerImplementation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts\n        \n\n            \n                Description\n            \n            \n                The actual bunyan logger implementation.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerImplementation\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                builder\n                            \n                            \n                                    Private\n                                    Readonly\n                                loggers\n                            \n                            \n                                    Private\n                                    Readonly\n                                rootLoggers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDefaultLoggerBuilder\n                            \n                            \n                                    Public\n                                getImplementation\n                            \n                            \n                                    Private\n                                getLoggerInstance\n                            \n                            \n                                    Public\n                                    Async\n                                log\n                            \n                            \n                                    Public\n                                setConfig\n                            \n                            \n                                    Public\n                                setLoggerBuilder\n                            \n                            \n                                    Public\n                                setLogLevel\n                            \n                            \n                                    Public\n                                setMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            builder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerBuilder\n\n                        \n                    \n                    \n                        \n                            Default value : this.getDefaultLoggerBuilder()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            loggers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            rootLoggers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:38\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDefaultLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultLoggerBuilder()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LoggerBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImplementation(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Logger\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLoggerInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerInstance(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Logger\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfig(config: T, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLoggerBuilder(builder?: LoggerBuilder)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builder\n                                    \n                                                LoggerBuilder\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: LogLevel, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMetadata(metadata: any, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as Logger from 'bunyan'\nimport {\n  LoggerImplementation,\n  LogLevel,\n  LoggerBuilder,\n  LoggerConfiguration\n} from 'slf4ts-api'\n\nconst LogLevelMapping: number[] = []\n\nLogLevelMapping[LogLevel.TRACE] = Logger.resolveLevel('trace')\nLogLevelMapping[LogLevel.DEBUG] = Logger.resolveLevel('debug')\nLogLevelMapping[LogLevel.INFO] = Logger.resolveLevel('info')\nLogLevelMapping[LogLevel.WARN] = Logger.resolveLevel('warn')\nLogLevelMapping[LogLevel.ERROR] = Logger.resolveLevel('error')\n\ntype LogMethodId = 'trace' | 'debug' | 'info' | 'warn' | 'error'\n\nconst LogMethodMapping: LogMethodId[] = []\n\nLogMethodMapping[LogLevel.TRACE] = 'trace'\nLogMethodMapping[LogLevel.DEBUG] = 'debug'\nLogMethodMapping[LogLevel.INFO] = 'info'\nLogMethodMapping[LogLevel.WARN] = 'warn'\nLogMethodMapping[LogLevel.ERROR] = 'error'\n\n/**\n * The actual bunyan logger implementation.\n *\n * @export\n * @class BunyanLoggerImplementation\n * @implements {LoggerImplementation}\n */\nexport class BunyanLoggerImplementation implements LoggerImplementation {\n  private readonly loggers: Map = new Map();\n  private readonly rootLoggers: Map = new Map();\n  private builder: LoggerBuilder = this.getDefaultLoggerBuilder()\n\n  public async log (...args: any[]): Promise {\n    const additionalArguments = [...args]\n    const commonLoggerData = additionalArguments.splice(0, 3)\n    additionalArguments.splice(additionalArguments.length - 1, 1)\n    const level: number = commonLoggerData[0]\n    const group: string = commonLoggerData[1]\n    const name: string = commonLoggerData[2]\n    const instance = this.getLoggerInstance(group, name)\n\n    return new Promise((resolve, reject) => {\n      const logMethodId: LogMethodId = LogMethodMapping[level]\n      const logMethod = instance[logMethodId]\n      logMethod.apply(instance, additionalArguments)\n      resolve()\n    })\n  }\n\n  public getImplementation (group: string, name: string): Logger {\n    return this.getLoggerInstance(group, name)\n  }\n\n  public setConfig(config: T, group: string, name: string): void {\n    // nothing to configure here\n  }\n\n  public setLogLevel (logLevel: LogLevel, group: string, name: string): void {\n    const instance = this.getLoggerInstance(group, name)\n    instance.level(LogLevelMapping[logLevel])\n  }\n\n  public setMetadata (metadata: any, group: string, name: string): void {\n    const compoundKey = `${group}:${name}`\n    const rootLogger: Logger = this.rootLoggers.get(compoundKey)\n    this.loggers.set(compoundKey, rootLogger.child(metadata))\n  }\n\n  public setLoggerBuilder (builder?: LoggerBuilder): void {\n    this.builder = builder ?? this.getDefaultLoggerBuilder()\n  }\n\n  private getDefaultLoggerBuilder (): LoggerBuilder {\n    return (options: Logger.LoggerOptions) => Logger.createLogger(options)\n  }\n\n  private getLoggerInstance (\n    group: string,\n    name: string\n  ): Logger {\n    const compoundKey = `${group}:${name}`\n    let instance: Logger = this.loggers.get(compoundKey)\n\n    if (!instance) {\n      const level = LoggerConfiguration.getLogLevel(group, name)\n      instance = this.builder({\n        name: compoundKey,\n        level: LogLevelMapping[level]\n      })\n      this.rootLoggers.set(compoundKey, instance)\n      this.loggers.set(compoundKey, instance)\n    }\n\n    return instance\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CassandraLogAdapter.html":{"url":"classes/CassandraLogAdapter.html","title":"class - CassandraLogAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CassandraLogAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-cassandra-log-adapter/lib/slf4ts/CassandraLogAdapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                handleLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(emitter: Client | EventEmitter, log: ILoggerInstance)\n                    \n                \n                        \n                            \n                                Defined in packages/slf4ts-cassandra-log-adapter/lib/slf4ts/CassandraLogAdapter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emitter\n                                                  \n                                                        \n                                                                    Client | EventEmitter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        log\n                                                  \n                                                        \n                                                                        ILoggerInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            log\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILoggerInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-cassandra-log-adapter/lib/slf4ts/CassandraLogAdapter.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            handleLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleLog(level: string, className: string | undefined, message: string, furtherInfo: any | undefined)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-cassandra-log-adapter/lib/slf4ts/CassandraLogAdapter.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    className\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    furtherInfo\n                                    \n                                            any | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport { Client } from 'cassandra-driver'\nimport { EventEmitter } from 'events'\nimport { ILoggerInstance, LoggerFactory } from 'slf4ts-api'\n\nexport class CassandraLogAdapter {\n  private readonly log: ILoggerInstance;\n\n  public constructor (emitter: Client | EventEmitter, log: ILoggerInstance = null) {\n    if (log === null) {\n      if (emitter instanceof Client) {\n        this.log = LoggerFactory.getLogger('cassandra', emitter.keyspace)\n      } else {\n        this.log = LoggerFactory.getLogger('cassandra')\n      }\n    } else {\n      this.log = log\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const slf = this\n    emitter.on('log', function (level: any, className: any, message: any, furtherInfo: any) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      slf.handleLog(level, className, message, furtherInfo)\n    })\n  }\n\n  protected async handleLog (\n    level: string,\n    className: string | undefined,\n    message: string,\n    furtherInfo: any | undefined): Promise {\n    const args: any[] = []\n    if (className) {\n      args.push(`${className} - ${message}`)\n    } else {\n      args.push(message)\n    }\n    if (furtherInfo) {\n      args.push(furtherInfo)\n    }\n\n    /* eslint-disable @typescript-eslint/no-floating-promises */\n    if (level === 'verbose') {\n      this.log.debug(...args)\n    } else if (level === 'info') {\n      this.log.info(...args)\n    } else if (level === 'warning') {\n      this.log.warn(...args)\n    } else if (level === 'error') {\n      this.log.error(...args)\n    } else {\n      this.log.info(...args)\n    }\n    /* eslint-disable @typescript-eslint/no-floating-promises */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleLoggerBinding.html":{"url":"classes/ConsoleLoggerBinding.html","title":"class - ConsoleLoggerBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleLoggerBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-console/lib/slf4ts/ConsoleLoggerBinding.ts\n        \n\n            \n                Description\n            \n            \n                A simple LoggerBinding implementation for Node.Console.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerBinding\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                packageJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLoggerImplementation\n                            \n                            \n                                    Public\n                                getVendor\n                            \n                            \n                                    Public\n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerBinding.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            packageJson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerBinding.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLoggerImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerImplementation()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerBinding.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ConsoleLoggerImplementation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVendor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVendor()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerBinding.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVersion()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerBinding.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport { LoggerBinding } from 'slf4ts-api'\n\nimport { ConsoleLoggerImplementation } from './ConsoleLoggerImplementation'\n\n/**\n * A simple LoggerBinding implementation for Node.Console.\n *\n * @export\n * @class ConsoleLoggerBinding\n * @implements {LoggerBinding}\n */\nexport class ConsoleLoggerBinding implements LoggerBinding {\n  private readonly packageJson: any;\n\n  public constructor () {\n    const modulePath = path.parse(module.filename)\n    let currentDir = path.resolve(modulePath.dir)\n    while (true) {\n      currentDir = path.resolve(path.join(currentDir, '..'))\n      const packageJsonPath = path.resolve(path.join(currentDir, 'package.json'))\n      if (fs.existsSync(packageJsonPath)) {\n        this.packageJson = require(packageJsonPath)\n        break\n      }\n    }\n  }\n\n  public getLoggerImplementation (): ConsoleLoggerImplementation {\n    return new ConsoleLoggerImplementation()\n  }\n\n  public getVendor (): string {\n    return 'Node.Console'\n  }\n\n  public getVersion (): string {\n    return this.packageJson.version\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleLoggerImplementation.html":{"url":"classes/ConsoleLoggerImplementation.html","title":"class - ConsoleLoggerImplementation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleLoggerImplementation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts\n        \n\n            \n                Description\n            \n            \n                The actual console logger implementation.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerImplementation\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getImplementation\n                            \n                            \n                                    Public\n                                    Async\n                                log\n                            \n                            \n                                    Public\n                                setConfig\n                            \n                            \n                                    Public\n                                setLoggerBuilder\n                            \n                            \n                                    Public\n                                setLogLevel\n                            \n                            \n                                    Public\n                                setMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(c: Console)\n                    \n                \n                        \n                            \n                                Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts:18\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConsoleLoggerImplementation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        c\n                                                  \n                                                        \n                                                                    Console\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Node.Console implementation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            console\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Console\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImplementation(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts:36\n                \n            \n\n\n            \n                \n                    Gets the console instance passed to the constructor.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Console\n\n                    \n                    \n                        the console implementation passed to the constructor.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts:65\n                \n            \n\n\n            \n                \n                    Log method as described in https://github.com/rstiller/slf4ts.\nThis method forwards the arguments to 'console.[log-level]' or 'console.log' method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfig(config: T, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLoggerBuilder(builder: LoggerBuilder)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builder\n                                    \n                                                LoggerBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: LogLevel, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMetadata(metadata: any, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport {\n  LoggerImplementation,\n  LogLevel,\n  LoggerBuilder\n} from 'slf4ts-api'\nimport * as util from 'util'\n\n/**\n * The actual console logger implementation.\n *\n * @export\n * @class ConsoleLoggerImplementation\n * @implements {LoggerImplementation}\n */\nexport class ConsoleLoggerImplementation implements LoggerImplementation {\n  private readonly console: Console;\n\n  /**\n     * Creates an instance of ConsoleLoggerImplementation.\n     *\n     * @param {Console} [c=global.console] The Node.Console implementation.\n     * @memberof ConsoleLoggerImplementation\n     */\n  public constructor (c: Console = global.console) {\n    this.console = c\n  }\n\n  /**\n   * Gets the console instance passed to the constructor.\n   *\n   * @returns {Console} the console implementation passed to the constructor.\n   * @memberof ConsoleLoggerImplementation\n   */\n  public getImplementation (group: string, name: string): Console {\n    return this.console\n  }\n\n  public setConfig(config: T, group: string, name: string): void {\n    // no config for console ...\n  }\n\n  public setLogLevel (logLevel: LogLevel, group: string, name: string): void {\n    // nothing to set here ...\n  }\n\n  public setMetadata (metadata: any, group: string, name: string): void {\n    // nothing to set here ...\n  }\n\n  public setLoggerBuilder (builder: LoggerBuilder): void {\n    // nothing to set here ...\n  }\n\n  /**\n     * Log method as described in {@link https://github.com/rstiller/slf4ts}.\n     *\n     * This method forwards the arguments to 'console.[log-level]' or 'console.log' method.\n     *\n     * @param {...any[]} args\n     * @returns {Promise}\n     * @memberof ConsoleLoggerImplementation\n     */\n  public async log (...args: any[]): Promise {\n    let loggerName = ''\n    const level: number = arguments[0]\n    const group: string = arguments[1]\n    const name: string = arguments[2]\n\n    if (group && name) {\n      loggerName = `${group}.${name}`\n    } else if (group) {\n      loggerName = group\n    } else if (name) {\n      loggerName = name\n    } else {\n      loggerName = 'ROOT'\n    }\n\n    const logLevelName = LogLevel[level] ? LogLevel[level] : ''\n    const logMethodName = logLevelName.toLowerCase()\n\n    let logMethod: (...args: any[]) => void = this.console.log\n    if (level !== LogLevel.DEBUG &&\n            logMethodName in this.console &&\n            (this.console as any)[logMethodName] instanceof Function) {\n      logMethod = (this.console as any)[logMethodName]\n    }\n\n    const additionalArguments: any[] = [...arguments]\n    additionalArguments.splice(0, 3)\n    logMethod.apply(this.console, [util.inspect(new Date()), loggerName, logLevelName].concat(additionalArguments))\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultLoggerInstance.html":{"url":"classes/DefaultLoggerInstance.html","title":"class - DefaultLoggerInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultLoggerInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts\n        \n\n            \n                Description\n            \n            \n                The standard logger instance implementation.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ILoggerInstance\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commonMetadata\n                            \n                            \n                                    Private\n                                    Readonly\n                                group\n                            \n                            \n                                    Private\n                                    Readonly\n                                impl\n                            \n                            \n                                    Private\n                                logLevel\n                            \n                            \n                                    Private\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                debug\n                            \n                            \n                                    Public\n                                    Async\n                                error\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                    Public\n                                getImpl\n                            \n                            \n                                    Public\n                                getImplementation\n                            \n                            \n                                    Public\n                                getLogLevel\n                            \n                            \n                                    Public\n                                getMetadata\n                            \n                            \n                                    Public\n                                getName\n                            \n                            \n                                    Public\n                                    Async\n                                info\n                            \n                            \n                                    Private\n                                    Async\n                                log\n                            \n                            \n                                    Public\n                                setLogLevel\n                            \n                            \n                                    Public\n                                setMetadata\n                            \n                            \n                                    Public\n                                    Async\n                                trace\n                            \n                            \n                                    Public\n                                    Async\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(name: string, group: string, logLevel: LogLevel, commonMetadata: any, impl: LoggerImplementation, builder: LoggerBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:87\n                            \n                        \n\n                \n                    \n                            Creates an instance of DefaultLoggerInstance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The name of the logger instance.\n\n                                                        \n                                                \n                                                \n                                                        group\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The group of the logger instance.\n\n                                                        \n                                                \n                                                \n                                                        logLevel\n                                                  \n                                                        \n                                                                        LogLevel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The initial log-level of the logger instance.\n\n                                                        \n                                                \n                                                \n                                                        commonMetadata\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The metadata added automatically to every log operation.\n\n                                                        \n                                                \n                                                \n                                                        impl\n                                                  \n                                                        \n                                                                        LoggerImplementation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The underlying logger implementation.\n\n                                                        \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        LoggerBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            commonMetadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            impl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerImplementation\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logLevel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:84\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroup()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImpl()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LoggerImplementation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImplementation()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogLevel()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LogLevel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMetadata()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getName()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            info\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    info(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(logLevel: LogLevel, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMetadata(commonMetadata: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:148\n                \n            \n\n\n            \n                \n                    Sets the metadata object that is gonna be assigned to every future invocation of any log method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    commonMetadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a metadata object - can be undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            trace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trace(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport { LoggerBindings, LoggerImplementation, LoggerBuilder } from './LoggerBindings'\nimport { LoggerConfiguration, LogLevel } from './LoggerConfiguration'\n\n/**\n * Interface representing a logger instance.\n *\n * @export\n * @interface ILoggerInstance\n */\nexport interface ILoggerInstance {\n  /**\n     * Logs the given message using TRACE log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  trace(...args: any[]): Promise\n  /**\n     * Logs the given message using DEBUG log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  debug(...args: any[]): Promise\n  /**\n     * Logs the given message using INFO log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  info(...args: any[]): Promise\n  /**\n     * Logs the given message using WARN log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  warn(...args: any[]): Promise\n  /**\n     * Logs the given message using ERROR log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  error(...args: any[]): Promise\n  /**\n     * Gets the current log-level.\n     *\n     * @returns {LogLevel} The log-level.\n     * @memberof ILoggerInstance\n     */\n  getLogLevel(): LogLevel\n  /**\n     * Sets the metadata assigned to every future invocation of any of the log-methods.\n     *\n     * @param {*} metadata metadata object - can be undefined or null.\n     * @memberof ILoggerInstance\n     */\n  setMetadata(metadata: any): void\n  /**\n     * Gets the underlying implementation of the logger.\n     *\n     * @memberof ILoggerInstance\n     */\n  getImplementation(): T\n}\n\n/**\n * The standard logger instance implementation.\n *\n * @export\n * @class DefaultLoggerInstance\n * @implements {ILoggerInstance}\n */\nexport class DefaultLoggerInstance implements ILoggerInstance {\n  private readonly impl: LoggerImplementation;\n  private readonly name: string;\n  private readonly group: string;\n  private commonMetadata: any;\n  private logLevel: LogLevel;\n\n  /**\n     * Creates an instance of DefaultLoggerInstance.\n     *\n     * @param {string} name The name of the logger instance.\n     * @param {string} group The group of the logger instance.\n     * @param {LogLevel} logLevel The initial log-level of the logger instance.\n     * @param {commonMetadata} commonMetadata The metadata added automatically to every log operation.\n     * @param {LoggerImplementation} impl The underlying logger implementation.\n     * @memberof DefaultLoggerInstance\n     */\n  public constructor (\n    name: string,\n    group: string,\n    logLevel: LogLevel,\n    commonMetadata: any,\n    impl: LoggerImplementation,\n    builder: LoggerBuilder) {\n    this.impl = impl\n    this.name = name\n    this.group = group\n    this.logLevel = logLevel\n    this.commonMetadata = commonMetadata\n\n    const initialConfig = LoggerConfiguration.getConfig(group, name)\n    this.impl.setLoggerBuilder(builder)\n    this.impl.setConfig(initialConfig, group, name)\n  }\n\n  public getLogLevel (): LogLevel {\n    return this.logLevel\n  }\n\n  public setLogLevel (logLevel: LogLevel): void {\n    this.logLevel = logLevel\n    this.impl.setLogLevel(logLevel, this.group, this.name)\n  }\n\n  public getName (): string {\n    return this.name\n  }\n\n  public getGroup (): string {\n    return this.group\n  }\n\n  public getImpl (): LoggerImplementation {\n    return this.impl\n  }\n\n  public getMetadata (): any {\n    return this.commonMetadata\n  }\n\n  /**\n     * Sets the metadata object that is gonna be assigned to every future invocation of any log method.\n     *\n     * @param {*} commonMetadata a metadata object - can be undefined or null.\n     * @memberof DefaultLoggerInstance\n     */\n  public setMetadata (commonMetadata: any): void {\n    this.commonMetadata = commonMetadata\n    this.impl.setMetadata(commonMetadata, this.group, this.name)\n  }\n\n  public async trace (...args: any[]): Promise {\n    const metadata = [LogLevel.TRACE, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async debug (...args: any[]): Promise {\n    const metadata = [LogLevel.DEBUG, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async info (...args: any[]): Promise {\n    const metadata = [LogLevel.INFO, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async warn (...args: any[]): Promise {\n    const metadata = [LogLevel.WARN, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async error (...args: any[]): Promise {\n    const metadata = [LogLevel.ERROR, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public getImplementation (): T {\n    return this.impl.getImplementation(this.group, this.name)\n  }\n\n  private async log (logLevel: LogLevel, ...args: any[]): Promise {\n    if (logLevel  {\n  public async log (...args: any[]): Promise {\n    return null\n  }\n\n  public getImplementation (group: string, name: string): null {\n    return null\n  }\n\n  public setConfig(config: T, group: string, name: string): void {\n    // nothing\n  }\n\n  public setLogLevel (logLevel: LogLevel, group: string, name: string): void {\n    // nothing\n  }\n\n  public setMetadata (metadata: any, group: string, name: string): void {\n    // nothing\n  }\n\n  public setLoggerBuilder (builder: LoggerBuilder): void {\n    // nothing\n  }\n}\n\n/**\n * Used to instance an cache logger instances.\n *\n * @export\n * @class LoggerFactory\n */\nexport class LoggerFactory {\n  /**\n     * Gets a logger from cache or instances a new logger instance with the given group and name.\n     *\n     * @static\n     * @param {string} [group=\"\"] The group of the logger instance\n     * @param {string} [name=\"\"] The name of the logger instance.\n     * @returns {ILoggerInstance}\n     * @memberof LoggerFactory\n     */\n  public static getLogger(\n    group = '',\n    name = '',\n    builder?: LoggerBuilder\n  ): ILoggerInstance {\n    if (!LoggerFactory.INITIALIZED) {\n      LoggerFactory.INITIALIZED = true\n      LoggerFactory.initialize()\n    }\n\n    const compoundKey = `${group}:${name}`\n    if (LoggerFactory.LOGGER_INSTANCE_CACHE.has(compoundKey)) {\n      return LoggerFactory.LOGGER_INSTANCE_CACHE.get(compoundKey) as ILoggerInstance\n    }\n\n    const instance = new DefaultLoggerInstance(\n      name,\n      group,\n      LoggerConfiguration.getLogLevel(group, name),\n      LoggerFactory.COMMON_METADATA,\n      LoggerFactory.LOGGER as LoggerImplementation,\n      builder)\n    LoggerFactory.LOGGER_INSTANCE_CACHE.set(compoundKey, instance)\n    return instance\n  }\n\n  /**\n     * Clears the logger cache and conditionally resets the logger implementation.\n     *\n     * @static\n     * @param [reinit] Causes the logger implementation to re-instantiate the logger binding if set to true.\n     * @memberof LoggerFactory\n     */\n  public static reset (reinit = false): void {\n    LoggerFactory.LOGGER_INSTANCE_CACHE.clear()\n    if (reinit) {\n      LoggerFactory.INITIALIZED = false\n    }\n  }\n\n  /**\n     * Gets the application-wide metadata object.\n     *\n     * @static\n     * @memberof LoggerFactory\n     */\n  public static getMetadata (): any {\n    return LoggerFactory.COMMON_METADATA\n  }\n\n  /**\n     * Sets the application-wide metadata object for logger instances.\n     *\n     * Every new logger will get the application-wide metadata object set.\n     *\n     * Every logger instance that sets it's own metadata object will be excluded from\n     * future updates of the application-wide metadata object.\n     *\n     * Note that this object is shared. Any changes to it will affect all logger instances\n     * using it.\n     *\n     * @static\n     * @param {*} metadata a metadata object - can be undefined or null.\n     * @memberof LoggerFactory\n     */\n  public static setMetadata (metadata: any): void {\n    const formerData = LoggerFactory.COMMON_METADATA\n    LoggerFactory.COMMON_METADATA = metadata\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      if (logger.getMetadata() === formerData) {\n        logger.setMetadata(LoggerFactory.COMMON_METADATA)\n      }\n    })\n  }\n\n  private static COMMON_METADATA: any = undefined;\n  private static LOGGER: LoggerImplementation = new NullLoggerImplementation();\n  private static ROOT_LOGGER: DefaultLoggerInstance;\n  private static INITIALIZED: boolean = false;\n  private static readonly LOGGER_INSTANCE_CACHE: Map> = new Map();\n\n  private static initialize(): void {\n    const BINDINGS = new LoggerBindings().getBindings()\n    const BINDING = BINDINGS[0]\n    if (BINDINGS.length === 0) {\n      console.log('SLF4TS: No Logger Binding found')\n      return\n    }\n    LoggerFactory.LOGGER = BINDING.getLoggerImplementation()\n    LoggerFactory.ROOT_LOGGER = LoggerFactory.getLogger() as DefaultLoggerInstance\n\n    if (BINDINGS.length > 1) {\n      let message = 'multiple bindings found:'\n      BINDINGS.forEach((binding) => {\n        message += `\\n  ${binding.getVendor()} - ${binding.getVersion()}`\n      })\n      message += `\\n  using ${BINDING.getVendor()} - ${BINDING.getVersion()}`\n      LoggerFactory.ROOT_LOGGER.info(message)\n        .catch(console.error)\n    }\n\n    LoggerConfiguration.onLogLevelChanged(LoggerFactory.logLevelChanged)\n    LoggerConfiguration.onConfigChanged(LoggerFactory.configChanged)\n  }\n\n  private static logLevelChanged (event: any): void {\n    const groupEmpty = event.group === ''\n    const nameEmpty = event.name === ''\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      const groupMatches = logger.getGroup() === event.group\n      const nameMatches = logger.getName() === event.name\n      if ((groupEmpty && nameEmpty) || (groupMatches && nameEmpty) || (groupMatches && nameMatches)) {\n        logger.setLogLevel(event.logLevel)\n      }\n    })\n  }\n\n  private static configChanged (event: any): void {\n    const groupEmpty = event.group === ''\n    const nameEmpty = event.name === ''\n\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      const hasNameConfig = LoggerConfiguration.hasConfig(logger.getGroup(), logger.getName())\n      const hasGroupConfig = LoggerConfiguration.hasConfig(logger.getGroup())\n      const groupMatches = logger.getGroup() === event.group\n      const nameMatches = logger.getName() === event.name\n\n      if ((groupEmpty && nameEmpty && !hasGroupConfig && !hasNameConfig) ||\n                (nameEmpty && groupMatches && !hasNameConfig) ||\n                (groupMatches && nameMatches)) {\n        logger.getImpl().setConfig(event.config, logger.getGroup(), logger.getName())\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILoggerInstance.html":{"url":"interfaces/ILoggerInstance.html","title":"interface - ILoggerInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILoggerInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing a logger instance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    getImplementation\n                                \n                                \n                                    getLogLevel\n                                \n                                \n                                    info\n                                \n                                \n                                    setMetadata\n                                \n                                \n                                    trace\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:28\n                \n            \n\n\n            \n                \n                    Logs the given message using DEBUG log-level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise completing when the logging-implementation processed the log statement.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:52\n                \n            \n\n\n            \n                \n                    Logs the given message using ERROR log-level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise completing when the logging-implementation processed the log statement.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImplementation\n                        \n                        \n                    \n                \n            \n            \n                \ngetImplementation()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:72\n                \n            \n\n\n            \n                \n                    Gets the underlying implementation of the logger.\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogLevel()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:59\n                \n            \n\n\n            \n                \n                    Gets the current log-level.\n\n\n                    \n                    \n                    \n                        Returns :         LogLevel\n\n                    \n                    \n                        The log-level.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:36\n                \n            \n\n\n            \n                \n                    Logs the given message using INFO log-level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise completing when the logging-implementation processed the log statement.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \nsetMetadata(metadata: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:66\n                \n            \n\n\n            \n                \n                    Sets the metadata assigned to every future invocation of any of the log-methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        metadata object - can be undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trace\n                        \n                        \n                    \n                \n            \n            \n                \ntrace(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:20\n                \n            \n\n\n            \n                \n                    Logs the given message using TRACE log-level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise completing when the logging-implementation processed the log statement.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:44\n                \n            \n\n\n            \n                \n                    Logs the given message using WARN log-level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise completing when the logging-implementation processed the log statement.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport { LoggerBindings, LoggerImplementation, LoggerBuilder } from './LoggerBindings'\nimport { LoggerConfiguration, LogLevel } from './LoggerConfiguration'\n\n/**\n * Interface representing a logger instance.\n *\n * @export\n * @interface ILoggerInstance\n */\nexport interface ILoggerInstance {\n  /**\n     * Logs the given message using TRACE log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  trace(...args: any[]): Promise\n  /**\n     * Logs the given message using DEBUG log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  debug(...args: any[]): Promise\n  /**\n     * Logs the given message using INFO log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  info(...args: any[]): Promise\n  /**\n     * Logs the given message using WARN log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  warn(...args: any[]): Promise\n  /**\n     * Logs the given message using ERROR log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  error(...args: any[]): Promise\n  /**\n     * Gets the current log-level.\n     *\n     * @returns {LogLevel} The log-level.\n     * @memberof ILoggerInstance\n     */\n  getLogLevel(): LogLevel\n  /**\n     * Sets the metadata assigned to every future invocation of any of the log-methods.\n     *\n     * @param {*} metadata metadata object - can be undefined or null.\n     * @memberof ILoggerInstance\n     */\n  setMetadata(metadata: any): void\n  /**\n     * Gets the underlying implementation of the logger.\n     *\n     * @memberof ILoggerInstance\n     */\n  getImplementation(): T\n}\n\n/**\n * The standard logger instance implementation.\n *\n * @export\n * @class DefaultLoggerInstance\n * @implements {ILoggerInstance}\n */\nexport class DefaultLoggerInstance implements ILoggerInstance {\n  private readonly impl: LoggerImplementation;\n  private readonly name: string;\n  private readonly group: string;\n  private commonMetadata: any;\n  private logLevel: LogLevel;\n\n  /**\n     * Creates an instance of DefaultLoggerInstance.\n     *\n     * @param {string} name The name of the logger instance.\n     * @param {string} group The group of the logger instance.\n     * @param {LogLevel} logLevel The initial log-level of the logger instance.\n     * @param {commonMetadata} commonMetadata The metadata added automatically to every log operation.\n     * @param {LoggerImplementation} impl The underlying logger implementation.\n     * @memberof DefaultLoggerInstance\n     */\n  public constructor (\n    name: string,\n    group: string,\n    logLevel: LogLevel,\n    commonMetadata: any,\n    impl: LoggerImplementation,\n    builder: LoggerBuilder) {\n    this.impl = impl\n    this.name = name\n    this.group = group\n    this.logLevel = logLevel\n    this.commonMetadata = commonMetadata\n\n    const initialConfig = LoggerConfiguration.getConfig(group, name)\n    this.impl.setLoggerBuilder(builder)\n    this.impl.setConfig(initialConfig, group, name)\n  }\n\n  public getLogLevel (): LogLevel {\n    return this.logLevel\n  }\n\n  public setLogLevel (logLevel: LogLevel): void {\n    this.logLevel = logLevel\n    this.impl.setLogLevel(logLevel, this.group, this.name)\n  }\n\n  public getName (): string {\n    return this.name\n  }\n\n  public getGroup (): string {\n    return this.group\n  }\n\n  public getImpl (): LoggerImplementation {\n    return this.impl\n  }\n\n  public getMetadata (): any {\n    return this.commonMetadata\n  }\n\n  /**\n     * Sets the metadata object that is gonna be assigned to every future invocation of any log method.\n     *\n     * @param {*} commonMetadata a metadata object - can be undefined or null.\n     * @memberof DefaultLoggerInstance\n     */\n  public setMetadata (commonMetadata: any): void {\n    this.commonMetadata = commonMetadata\n    this.impl.setMetadata(commonMetadata, this.group, this.name)\n  }\n\n  public async trace (...args: any[]): Promise {\n    const metadata = [LogLevel.TRACE, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async debug (...args: any[]): Promise {\n    const metadata = [LogLevel.DEBUG, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async info (...args: any[]): Promise {\n    const metadata = [LogLevel.INFO, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async warn (...args: any[]): Promise {\n    const metadata = [LogLevel.WARN, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async error (...args: any[]): Promise {\n    const metadata = [LogLevel.ERROR, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public getImplementation (): T {\n    return this.impl.getImplementation(this.group, this.name)\n  }\n\n  private async log (logLevel: LogLevel, ...args: any[]): Promise {\n    if (logLevel  {\n  public async log (...args: any[]): Promise {\n    return null\n  }\n\n  public getImplementation (group: string, name: string): null {\n    return null\n  }\n\n  public setConfig(config: T, group: string, name: string): void {\n    // nothing\n  }\n\n  public setLogLevel (logLevel: LogLevel, group: string, name: string): void {\n    // nothing\n  }\n\n  public setMetadata (metadata: any, group: string, name: string): void {\n    // nothing\n  }\n\n  public setLoggerBuilder (builder: LoggerBuilder): void {\n    // nothing\n  }\n}\n\n/**\n * Used to instance an cache logger instances.\n *\n * @export\n * @class LoggerFactory\n */\nexport class LoggerFactory {\n  /**\n     * Gets a logger from cache or instances a new logger instance with the given group and name.\n     *\n     * @static\n     * @param {string} [group=\"\"] The group of the logger instance\n     * @param {string} [name=\"\"] The name of the logger instance.\n     * @returns {ILoggerInstance}\n     * @memberof LoggerFactory\n     */\n  public static getLogger(\n    group = '',\n    name = '',\n    builder?: LoggerBuilder\n  ): ILoggerInstance {\n    if (!LoggerFactory.INITIALIZED) {\n      LoggerFactory.INITIALIZED = true\n      LoggerFactory.initialize()\n    }\n\n    const compoundKey = `${group}:${name}`\n    if (LoggerFactory.LOGGER_INSTANCE_CACHE.has(compoundKey)) {\n      return LoggerFactory.LOGGER_INSTANCE_CACHE.get(compoundKey) as ILoggerInstance\n    }\n\n    const instance = new DefaultLoggerInstance(\n      name,\n      group,\n      LoggerConfiguration.getLogLevel(group, name),\n      LoggerFactory.COMMON_METADATA,\n      LoggerFactory.LOGGER as LoggerImplementation,\n      builder)\n    LoggerFactory.LOGGER_INSTANCE_CACHE.set(compoundKey, instance)\n    return instance\n  }\n\n  /**\n     * Clears the logger cache and conditionally resets the logger implementation.\n     *\n     * @static\n     * @param [reinit] Causes the logger implementation to re-instantiate the logger binding if set to true.\n     * @memberof LoggerFactory\n     */\n  public static reset (reinit = false): void {\n    LoggerFactory.LOGGER_INSTANCE_CACHE.clear()\n    if (reinit) {\n      LoggerFactory.INITIALIZED = false\n    }\n  }\n\n  /**\n     * Gets the application-wide metadata object.\n     *\n     * @static\n     * @memberof LoggerFactory\n     */\n  public static getMetadata (): any {\n    return LoggerFactory.COMMON_METADATA\n  }\n\n  /**\n     * Sets the application-wide metadata object for logger instances.\n     *\n     * Every new logger will get the application-wide metadata object set.\n     *\n     * Every logger instance that sets it's own metadata object will be excluded from\n     * future updates of the application-wide metadata object.\n     *\n     * Note that this object is shared. Any changes to it will affect all logger instances\n     * using it.\n     *\n     * @static\n     * @param {*} metadata a metadata object - can be undefined or null.\n     * @memberof LoggerFactory\n     */\n  public static setMetadata (metadata: any): void {\n    const formerData = LoggerFactory.COMMON_METADATA\n    LoggerFactory.COMMON_METADATA = metadata\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      if (logger.getMetadata() === formerData) {\n        logger.setMetadata(LoggerFactory.COMMON_METADATA)\n      }\n    })\n  }\n\n  private static COMMON_METADATA: any = undefined;\n  private static LOGGER: LoggerImplementation = new NullLoggerImplementation();\n  private static ROOT_LOGGER: DefaultLoggerInstance;\n  private static INITIALIZED: boolean = false;\n  private static readonly LOGGER_INSTANCE_CACHE: Map> = new Map();\n\n  private static initialize(): void {\n    const BINDINGS = new LoggerBindings().getBindings()\n    const BINDING = BINDINGS[0]\n    if (BINDINGS.length === 0) {\n      console.log('SLF4TS: No Logger Binding found')\n      return\n    }\n    LoggerFactory.LOGGER = BINDING.getLoggerImplementation()\n    LoggerFactory.ROOT_LOGGER = LoggerFactory.getLogger() as DefaultLoggerInstance\n\n    if (BINDINGS.length > 1) {\n      let message = 'multiple bindings found:'\n      BINDINGS.forEach((binding) => {\n        message += `\\n  ${binding.getVendor()} - ${binding.getVersion()}`\n      })\n      message += `\\n  using ${BINDING.getVendor()} - ${BINDING.getVersion()}`\n      LoggerFactory.ROOT_LOGGER.info(message)\n        .catch(console.error)\n    }\n\n    LoggerConfiguration.onLogLevelChanged(LoggerFactory.logLevelChanged)\n    LoggerConfiguration.onConfigChanged(LoggerFactory.configChanged)\n  }\n\n  private static logLevelChanged (event: any): void {\n    const groupEmpty = event.group === ''\n    const nameEmpty = event.name === ''\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      const groupMatches = logger.getGroup() === event.group\n      const nameMatches = logger.getName() === event.name\n      if ((groupEmpty && nameEmpty) || (groupMatches && nameEmpty) || (groupMatches && nameMatches)) {\n        logger.setLogLevel(event.logLevel)\n      }\n    })\n  }\n\n  private static configChanged (event: any): void {\n    const groupEmpty = event.group === ''\n    const nameEmpty = event.name === ''\n\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      const hasNameConfig = LoggerConfiguration.hasConfig(logger.getGroup(), logger.getName())\n      const hasGroupConfig = LoggerConfiguration.hasConfig(logger.getGroup())\n      const groupMatches = logger.getGroup() === event.group\n      const nameMatches = logger.getName() === event.name\n\n      if ((groupEmpty && nameEmpty && !hasGroupConfig && !hasNameConfig) ||\n                (nameEmpty && groupMatches && !hasNameConfig) ||\n                (groupMatches && nameMatches)) {\n        logger.getImpl().setConfig(event.config, logger.getGroup(), logger.getName())\n      }\n    })\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Log4JSLoggerBinding.html":{"url":"classes/Log4JSLoggerBinding.html","title":"class - Log4JSLoggerBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Log4JSLoggerBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerBinding.ts\n        \n\n            \n                Description\n            \n            \n                LoggerBinding implementation for Log4JS.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerBinding\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                packageJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLoggerImplementation\n                            \n                            \n                                    Public\n                                getVendor\n                            \n                            \n                                    Public\n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerBinding.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            packageJson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerBinding.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLoggerImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerImplementation()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerBinding.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Log4JSLoggerImplementation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVendor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVendor()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerBinding.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVersion()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerBinding.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport { Logger } from 'log4js'\nimport { LoggerBinding } from 'slf4ts-api'\n\nimport { Log4JSLoggerImplementation } from './Log4JSLoggerImplementation'\n\n/**\n * LoggerBinding implementation for Log4JS.\n *\n * @export\n * @class Log4JSLoggerBinding\n * @implements {LoggerBinding}\n */\nexport class Log4JSLoggerBinding implements LoggerBinding {\n  private readonly packageJson: any;\n\n  public constructor () {\n    const modulePath = path.parse(module.filename)\n    let currentDir = path.resolve(modulePath.dir)\n    while (true) {\n      currentDir = path.resolve(path.join(currentDir, '..'))\n      const packageJsonPath = path.resolve(path.join(currentDir, 'package.json'))\n      if (fs.existsSync(packageJsonPath)) {\n        this.packageJson = require(packageJsonPath)\n        break\n      }\n    }\n  }\n\n  public getLoggerImplementation (): Log4JSLoggerImplementation {\n    return new Log4JSLoggerImplementation()\n  }\n\n  public getVendor (): string {\n    return 'log4js'\n  }\n\n  public getVersion (): string {\n    return this.packageJson.version\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Log4JSLoggerImplementation.html":{"url":"classes/Log4JSLoggerImplementation.html","title":"class - Log4JSLoggerImplementation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Log4JSLoggerImplementation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts\n        \n\n            \n                Description\n            \n            \n                The actual log4js logger implementation.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerImplementation\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                builder\n                            \n                            \n                                    Private\n                                    Readonly\n                                loggers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDefaultLoggerBuilder\n                            \n                            \n                                    Public\n                                getImplementation\n                            \n                            \n                                    Private\n                                getLoggerInstance\n                            \n                            \n                                    Public\n                                    Async\n                                log\n                            \n                            \n                                    Public\n                                setConfig\n                            \n                            \n                                    Public\n                                setLoggerBuilder\n                            \n                            \n                                    Public\n                                setLogLevel\n                            \n                            \n                                    Public\n                                setMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            builder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerBuilder\n\n                        \n                    \n                    \n                        \n                            Default value : this.getDefaultLoggerBuilder()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            loggers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDefaultLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultLoggerBuilder()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LoggerBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImplementation(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLoggerInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerInstance(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Logger\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfig(config: T, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLoggerBuilder(builder?: LoggerBuilder)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builder\n                                    \n                                                LoggerBuilder\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: LogLevel, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMetadata(metadata: any, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport { LoggerImplementation, LogLevel, LoggerBuilder } from 'slf4ts-api'\nimport { getLogger, Logger } from 'log4js'\n\nconst LogLevelMapping: string[] = []\n\nLogLevelMapping[LogLevel.TRACE] = 'TRACE'\nLogLevelMapping[LogLevel.DEBUG] = 'DEBUG'\nLogLevelMapping[LogLevel.INFO] = 'INFO'\nLogLevelMapping[LogLevel.WARN] = 'WARN'\nLogLevelMapping[LogLevel.ERROR] = 'ERROR'\n\n/**\n * The actual log4js logger implementation.\n *\n * @export\n * @class Log4JSLoggerImplementation\n * @implements {LoggerImplementation}\n */\nexport class Log4JSLoggerImplementation implements LoggerImplementation {\n  private readonly loggers: Map = new Map();\n  private builder: LoggerBuilder = this.getDefaultLoggerBuilder()\n\n  public async log (...args: any[]): Promise {\n    const additionalArguments = [...arguments]\n    const commonLoggerData = additionalArguments.splice(0, 3)\n    // remove metadata\n    additionalArguments.splice(additionalArguments.length - 1, 1)\n    const level: number = commonLoggerData[0]\n    const group: string = commonLoggerData[1]\n    const name: string = commonLoggerData[2]\n    const instance = this.getLoggerInstance(group, name)\n    const callArguments: any[] = [LogLevelMapping[level]]\n      .concat(...additionalArguments)\n\n    return new Promise((resolve, reject) => {\n      instance.log(...callArguments)\n      resolve()\n    })\n  }\n\n  public getImplementation (group: string, name: string): any {\n    return this.getLoggerInstance(group, name)\n  }\n\n  public setConfig(config: T, group: string, name: string): void {\n    // nothing to configure here\n  }\n\n  public setLogLevel (logLevel: LogLevel, group: string, name: string): void {\n    const instance = this.getLoggerInstance(group, name)\n    instance.level = LogLevelMapping[logLevel]\n  }\n\n  public setMetadata (metadata: any, group: string, name: string): void {\n    const instance = this.getLoggerInstance(group, name)\n    instance.clearContext()\n    if (metadata) {\n      Object.entries(metadata).forEach(([key, value]) => {\n        instance.addContext(key, value)\n      })\n    }\n  }\n\n  public setLoggerBuilder (builder?: LoggerBuilder): void {\n    this.builder = builder ?? this.getDefaultLoggerBuilder()\n  }\n\n  private getDefaultLoggerBuilder (): LoggerBuilder {\n    return (category: string) => getLogger(category)\n  }\n\n  private getLoggerInstance (group: string, name: string): Logger {\n    const compoundKey = `${group}:${name}`\n    let instance: Logger = this.loggers.get(compoundKey)\n\n    if (!instance) {\n      instance = this.builder(compoundKey)\n      this.loggers.set(compoundKey, instance)\n    }\n\n    return instance\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerBinding.html":{"url":"interfaces/LoggerBinding.html","title":"interface - LoggerBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggerBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts\n        \n\n            \n                Description\n            \n            \n                A metadata object for a binding.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getLoggerImplementation\n                                \n                                \n                                    getVendor\n                                \n                                \n                                    getVersion\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggerImplementation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggerImplementation()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:94\n                \n            \n\n\n            \n                \n                    Gets the logger implementation.\n\n\n                    \n                    \n                    \n                        Returns :         LoggerImplementation\n\n                    \n                    \n                        The logger implementation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVendor\n                        \n                        \n                    \n                \n            \n            \n                \ngetVendor()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:101\n                \n            \n\n\n            \n                \n                    Gets the vendor string.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The vendor name.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVersion\n                        \n                        \n                    \n                \n            \n            \n                \ngetVersion()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:108\n                \n            \n\n\n            \n                \n                    Gets the version string.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The version number.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as fs from 'fs'\nimport * as path from 'path'\n\nimport { LogLevel } from './LoggerConfiguration'\n\n/**\n * Builds the instance of the underlying logger framework.\n */\nexport type LoggerBuilder = (...args: P) => T\n\n/**\n * The bridge to the underlying logging-framework.any[]\n *\n * @export\n * @interface LoggerImplementation\n */\nexport interface LoggerImplementation {\n\n  /**\n     * Invoked for each call to a logging method of a logger instance.\n     *\n     * @param {...any[]} args array with log-level, group, name and all arguments passed to the logging function.\n     * @returns A Promise completed when the log statement was processed by the underlying logging-framework.\n     * @memberof LoggerImplementation\n     */\n  log(...args: any[]): Promise\n\n  /**\n     * Gets the underlying implementation of the logger.\n     *\n     * @template T Type of logger instance.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  getImplementation(group: string, name: string): T\n\n  /**\n     * Sets the configuration for the specified logger instance.\n     *\n     * @template T Type of config object\n     * @param {T} config The implementation-specific configuration.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  setConfig(config: T, group: string, name: string): void\n\n  /**\n     * Informs the logger implementation of the log-level change.\n     *\n     * @param {LogLevel} logLevel The new log level.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  setLogLevel(logLevel: LogLevel, group: string, name: string): void\n\n  /**\n     * Informs the logger implementation of the metadata change.\n     *\n     * @param {any} metadata The new metadata.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  setMetadata(metadata: any, group: string, name: string): void\n\n  /**\n   * Sets the logger builder instance\n   *\n   * @param {LoggerBuilder} builder\n   * @memberof LoggerImplementation\n   */\n  setLoggerBuilder(builder: LoggerBuilder): void\n\n}\n\n/**\n * A metadata object for a binding.\n *\n * @export\n * @interface LoggerBinding\n */\nexport interface LoggerBinding {\n  /**\n     * Gets the logger implementation.\n     *\n     * @returns {LoggerImplementation} The logger implementation.\n     * @memberof LoggerBinding\n     */\n  getLoggerImplementation(): LoggerImplementation\n  /**\n     * Gets the vendor string.\n     *\n     * @returns {string} The vendor name.\n     * @memberof LoggerBinding\n     */\n  getVendor(): string\n  /**\n     * Gets the version string.\n     *\n     * @returns {string} The version number.\n     * @memberof LoggerBinding\n     */\n  getVersion(): string\n}\n\n/**\n * Encapsulates the loading of logger bindings from NODE_PATH.\n *\n * Additionally the location of other logging-framework bindings can\n * be configured using the environment variable 'LOGGER_BINDING_ADDITIONAL_PATH'.\n *\n * For each folder - containing a file named '.slf4ts-binding' in 'NODE_PATH',\n * 'LOGGER_BINDING_ADDITIONAL_PATH' or the additional search paths given to\n * LoggerBindings - LoggerBindings loads the node-module and invokes the function\n * that is the default export of the entire module for registration.\n *\n * @export\n * @class LoggerBindings\n */\nexport class LoggerBindings {\n  /**\n     * Array of loaded bindings.\n     *\n     * @private\n     * @type {LoggerBinding[]}\n     * @memberof LoggerBindings\n     */\n  private readonly bindings: LoggerBinding[] = [];\n\n  /**\n     * Creates an instance of LoggerBindings.\n     *\n     * @param {string[]} [additionalPaths=[]] A string array with additional paths to search bindings.\n     * @memberof LoggerBindings\n     */\n  public constructor (additionalPaths: string[] = []) {\n    if ('LOGGER_BINDING_ADDITIONAL_PATH' in process.env) {\n      additionalPaths.push(process.env.LOGGER_BINDING_ADDITIONAL_PATH)\n    }\n    if ('mainModule' in process && 'paths' in process.mainModule) {\n      process.mainModule.paths\n        .forEach((mainPath) => additionalPaths.push(mainPath))\n    }\n\n    const moduleFolders: string[] = this.getAllModuleFolders(additionalPaths)\n    const loggerBindings: string[] = this.getAllLoggerBindings(moduleFolders)\n\n    loggerBindings.forEach((binding) => {\n      const registerFunc = require.main.require(binding)\n      registerFunc(this)\n    })\n  }\n\n  /**\n     * Used to register a logging-framework binding.\n     *\n     * @param {LoggerBinding} binding The LoggerBinding to register.\n     * @returns\n     * @memberof LoggerBindings\n     */\n  public registerBinding (binding: LoggerBinding): void {\n    const exists = this.bindings.filter((b) => {\n      const vendorEquals = b.getVendor() === binding.getVendor()\n      const versionEquals = b.getVersion() === binding.getVersion()\n      return vendorEquals && versionEquals\n    }).length > 0\n\n    if (exists) {\n      return\n    }\n\n    this.bindings.push(binding)\n  }\n\n  /**\n     * Gets a copy of all {@link LoggerBinding}\n     *\n     * @returns {LoggerBinding[]}\n     * @memberof LoggerBindings\n     */\n  public getBindings (): LoggerBinding[] {\n    return [].concat(this.bindings)\n  }\n\n  private getAllModuleFolders (additionalPaths: string[]): string[] {\n    const rootPaths: string[] = (module as any).paths\n    const moduleFolders: string[] = []\n\n    rootPaths.concat(additionalPaths).forEach((rootPath) =>\n      this.visitNodeModules(rootPath).forEach((folder) => moduleFolders.push(folder)))\n\n    return moduleFolders\n  }\n\n  private visitNodeModules (rootPath: string): string[] {\n    const moduleFolders: string[] = []\n\n    if (fs.existsSync(rootPath)) {\n      const files = fs.readdirSync(rootPath)\n      files.forEach((folder) => {\n        const absolutePath = path.join(rootPath, folder)\n        moduleFolders.push(absolutePath)\n        this.visitNodeModules(path.join(absolutePath, 'node_modules'))\n          .forEach((subfolder) => moduleFolders.push(subfolder))\n      })\n    }\n\n    return moduleFolders\n  }\n\n  private getAllLoggerBindings (moduleFolders: string[]): string[] {\n    const bindings: string[] = []\n\n    moduleFolders.forEach((moduleFolder) => {\n      if (fs.existsSync(path.join(moduleFolder, '.slf4ts-binding'))) {\n        bindings.push(path.basename(moduleFolder))\n      }\n    })\n\n    return bindings\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerBindings.html":{"url":"classes/LoggerBindings.html","title":"class - LoggerBindings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerBindings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts\n        \n\n            \n                Description\n            \n            \n                Encapsulates the loading of logger bindings from NODE_PATH.\nAdditionally the location of other logging-framework bindings can\nbe configured using the environment variable 'LOGGER_BINDING_ADDITIONAL_PATH'.\nFor each folder - containing a file named '.slf4ts-binding' in 'NODE_PATH',\n'LOGGER_BINDING_ADDITIONAL_PATH' or the additional search paths given to\nLoggerBindings - LoggerBindings loads the node-module and invokes the function\nthat is the default export of the entire module for registration.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bindings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllLoggerBindings\n                            \n                            \n                                    Private\n                                getAllModuleFolders\n                            \n                            \n                                    Public\n                                getBindings\n                            \n                            \n                                    Public\n                                registerBinding\n                            \n                            \n                                    Private\n                                visitNodeModules\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(additionalPaths: string[])\n                    \n                \n                        \n                            \n                                Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:133\n                            \n                        \n\n                \n                    \n                            Creates an instance of LoggerBindings.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        additionalPaths\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A string array with additional paths to search bindings.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bindings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerBinding[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:133\n                            \n                        \n\n                \n                    \n                        Array of loaded bindings.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAllLoggerBindings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllLoggerBindings(moduleFolders: string[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleFolders\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAllModuleFolders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModuleFolders(additionalPaths: string[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    additionalPaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBindings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBindings()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:186\n                \n            \n\n\n            \n                \n                    Gets a copy of all LoggerBinding\n\n\n                    \n                    \n                    \n                        Returns :         LoggerBinding[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerBinding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerBinding(binding: LoggerBinding)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:166\n                \n            \n\n\n            \n                \n                    Used to register a logging-framework binding.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    binding\n                                    \n                                                LoggerBinding\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The LoggerBinding to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            visitNodeModules\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    visitNodeModules(rootPath: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rootPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as fs from 'fs'\nimport * as path from 'path'\n\nimport { LogLevel } from './LoggerConfiguration'\n\n/**\n * Builds the instance of the underlying logger framework.\n */\nexport type LoggerBuilder = (...args: P) => T\n\n/**\n * The bridge to the underlying logging-framework.any[]\n *\n * @export\n * @interface LoggerImplementation\n */\nexport interface LoggerImplementation {\n\n  /**\n     * Invoked for each call to a logging method of a logger instance.\n     *\n     * @param {...any[]} args array with log-level, group, name and all arguments passed to the logging function.\n     * @returns A Promise completed when the log statement was processed by the underlying logging-framework.\n     * @memberof LoggerImplementation\n     */\n  log(...args: any[]): Promise\n\n  /**\n     * Gets the underlying implementation of the logger.\n     *\n     * @template T Type of logger instance.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  getImplementation(group: string, name: string): T\n\n  /**\n     * Sets the configuration for the specified logger instance.\n     *\n     * @template T Type of config object\n     * @param {T} config The implementation-specific configuration.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  setConfig(config: T, group: string, name: string): void\n\n  /**\n     * Informs the logger implementation of the log-level change.\n     *\n     * @param {LogLevel} logLevel The new log level.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  setLogLevel(logLevel: LogLevel, group: string, name: string): void\n\n  /**\n     * Informs the logger implementation of the metadata change.\n     *\n     * @param {any} metadata The new metadata.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  setMetadata(metadata: any, group: string, name: string): void\n\n  /**\n   * Sets the logger builder instance\n   *\n   * @param {LoggerBuilder} builder\n   * @memberof LoggerImplementation\n   */\n  setLoggerBuilder(builder: LoggerBuilder): void\n\n}\n\n/**\n * A metadata object for a binding.\n *\n * @export\n * @interface LoggerBinding\n */\nexport interface LoggerBinding {\n  /**\n     * Gets the logger implementation.\n     *\n     * @returns {LoggerImplementation} The logger implementation.\n     * @memberof LoggerBinding\n     */\n  getLoggerImplementation(): LoggerImplementation\n  /**\n     * Gets the vendor string.\n     *\n     * @returns {string} The vendor name.\n     * @memberof LoggerBinding\n     */\n  getVendor(): string\n  /**\n     * Gets the version string.\n     *\n     * @returns {string} The version number.\n     * @memberof LoggerBinding\n     */\n  getVersion(): string\n}\n\n/**\n * Encapsulates the loading of logger bindings from NODE_PATH.\n *\n * Additionally the location of other logging-framework bindings can\n * be configured using the environment variable 'LOGGER_BINDING_ADDITIONAL_PATH'.\n *\n * For each folder - containing a file named '.slf4ts-binding' in 'NODE_PATH',\n * 'LOGGER_BINDING_ADDITIONAL_PATH' or the additional search paths given to\n * LoggerBindings - LoggerBindings loads the node-module and invokes the function\n * that is the default export of the entire module for registration.\n *\n * @export\n * @class LoggerBindings\n */\nexport class LoggerBindings {\n  /**\n     * Array of loaded bindings.\n     *\n     * @private\n     * @type {LoggerBinding[]}\n     * @memberof LoggerBindings\n     */\n  private readonly bindings: LoggerBinding[] = [];\n\n  /**\n     * Creates an instance of LoggerBindings.\n     *\n     * @param {string[]} [additionalPaths=[]] A string array with additional paths to search bindings.\n     * @memberof LoggerBindings\n     */\n  public constructor (additionalPaths: string[] = []) {\n    if ('LOGGER_BINDING_ADDITIONAL_PATH' in process.env) {\n      additionalPaths.push(process.env.LOGGER_BINDING_ADDITIONAL_PATH)\n    }\n    if ('mainModule' in process && 'paths' in process.mainModule) {\n      process.mainModule.paths\n        .forEach((mainPath) => additionalPaths.push(mainPath))\n    }\n\n    const moduleFolders: string[] = this.getAllModuleFolders(additionalPaths)\n    const loggerBindings: string[] = this.getAllLoggerBindings(moduleFolders)\n\n    loggerBindings.forEach((binding) => {\n      const registerFunc = require.main.require(binding)\n      registerFunc(this)\n    })\n  }\n\n  /**\n     * Used to register a logging-framework binding.\n     *\n     * @param {LoggerBinding} binding The LoggerBinding to register.\n     * @returns\n     * @memberof LoggerBindings\n     */\n  public registerBinding (binding: LoggerBinding): void {\n    const exists = this.bindings.filter((b) => {\n      const vendorEquals = b.getVendor() === binding.getVendor()\n      const versionEquals = b.getVersion() === binding.getVersion()\n      return vendorEquals && versionEquals\n    }).length > 0\n\n    if (exists) {\n      return\n    }\n\n    this.bindings.push(binding)\n  }\n\n  /**\n     * Gets a copy of all {@link LoggerBinding}\n     *\n     * @returns {LoggerBinding[]}\n     * @memberof LoggerBindings\n     */\n  public getBindings (): LoggerBinding[] {\n    return [].concat(this.bindings)\n  }\n\n  private getAllModuleFolders (additionalPaths: string[]): string[] {\n    const rootPaths: string[] = (module as any).paths\n    const moduleFolders: string[] = []\n\n    rootPaths.concat(additionalPaths).forEach((rootPath) =>\n      this.visitNodeModules(rootPath).forEach((folder) => moduleFolders.push(folder)))\n\n    return moduleFolders\n  }\n\n  private visitNodeModules (rootPath: string): string[] {\n    const moduleFolders: string[] = []\n\n    if (fs.existsSync(rootPath)) {\n      const files = fs.readdirSync(rootPath)\n      files.forEach((folder) => {\n        const absolutePath = path.join(rootPath, folder)\n        moduleFolders.push(absolutePath)\n        this.visitNodeModules(path.join(absolutePath, 'node_modules'))\n          .forEach((subfolder) => moduleFolders.push(subfolder))\n      })\n    }\n\n    return moduleFolders\n  }\n\n  private getAllLoggerBindings (moduleFolders: string[]): string[] {\n    const bindings: string[] = []\n\n    moduleFolders.forEach((moduleFolder) => {\n      if (fs.existsSync(path.join(moduleFolder, '.slf4ts-binding'))) {\n        bindings.push(path.basename(moduleFolder))\n      }\n    })\n\n    return bindings\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerConfigurationImpl.html":{"url":"classes/LoggerConfigurationImpl.html","title":"class - LoggerConfigurationImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerConfigurationImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                configMapping\n                            \n                            \n                                    Private\n                                defaultLogLevel\n                            \n                            \n                                    Private\n                                    Readonly\n                                events\n                            \n                            \n                                    Private\n                                    Readonly\n                                logLevelMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getConfig\n                            \n                            \n                                    Public\n                                getLogLevel\n                            \n                            \n                                    Public\n                                hasConfig\n                            \n                            \n                                    Public\n                                onConfigChanged\n                            \n                            \n                                    Public\n                                onLogLevelChanged\n                            \n                            \n                                    Public\n                                removeAllListeners\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setConfig\n                            \n                            \n                                    Public\n                                setDefaultLogLevel\n                            \n                            \n                                    Public\n                                setLogLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            configMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultLogLevel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogLevel\n\n                        \n                    \n                    \n                        \n                            Default value : LogLevel.INFO\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logLevelMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:108\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Set the implementation-specific config for the given group and name.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The group of the logger instance.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The name of the logger instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogLevel(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:41\n                \n            \n\n\n            \n                \n                    Gets the log-level for the given group and name.\nIf no log-level is found for the given group and name the default log-level is returned.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The group of the logger.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The name of the logger.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LogLevel\n\n                    \n                    \n                        the log-level for the logger.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasConfig(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:172\n                \n            \n\n\n            \n                \n                    Checks if the config for a certain logger is present.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The group of the logger instance.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The name of the logger instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onConfigChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onConfigChanged(callback: (args: any[]) => void, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:137\n                \n            \n\n\n            \n                \n                    Registers a new listener for configuration changes.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The listener callback.\n\n                                    \n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        (Deprecated - Ignored and will be removed) The group of the logger instance.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        (Deprecated - Ignored and will be removed) The name of the logger instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoggerConfigurationImpl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLogLevelChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLogLevelChanged(callback: (args: any[]) => void, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:124\n                \n            \n\n\n            \n                \n                    Registers a new listener for log-level changes.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The listener callback.\n\n                                    \n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        (Deprecated - Ignored and will be removed) The group of the logger instance.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        (Deprecated - Ignored and will be removed) The name of the logger instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoggerConfigurationImpl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeAllListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllListeners()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:147\n                \n            \n\n\n            \n                \n                    Removes all listeners.\n\n\n                    \n                        Returns :         LoggerConfigurationImpl\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:157\n                \n            \n\n\n            \n                \n                    Removes all listeners, clears all log-level configurations and sets the default-log-level to INFO.\n\n\n                    \n                        Returns :         LoggerConfigurationImpl\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfig(config: T, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:89\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Set the implementation-specific config for the given group and name.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The implementation-specific config for the specified logger.\n\n                                    \n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The group of the logger instance.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The name of the logger instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoggerConfigurationImpl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultLogLevel(defaultLogLevel: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:57\n                \n            \n\n\n            \n                \n                    Sets the default log-level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    defaultLogLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoggerConfigurationImpl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: LogLevel, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts:70\n                \n            \n\n\n            \n                \n                    Set the log-level for the given group and name.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The new log-level.\n\n                                    \n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The group of the logger instance.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The name of the logger instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoggerConfigurationImpl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport { EventEmitter } from 'events'\n\n/**\n * LogLevel enumeration.\n *\n * @export\n * @enum {number}\n */\nexport enum LogLevel {\n  ERROR = 0,\n  WARN,\n  INFO,\n  DEBUG,\n  TRACE,\n}\n\n/**\n *\n *\n * @export\n * @class LoggerConfigurationImpl\n */\nexport class LoggerConfigurationImpl {\n  private readonly events: EventEmitter = new EventEmitter();\n  private readonly logLevelMapping: Map = new Map();\n  private readonly configMapping: Map = new Map();\n  private defaultLogLevel: LogLevel = LogLevel.INFO;\n\n  /**\n     * Gets the log-level for the given group and name.\n     *\n     * If no log-level is found for the given group and name the default log-level is returned.\n     *\n     * @param {string} [group=\"\"] The group of the logger.\n     * @param {string} [name=\"\"] The name of the logger.\n     * @returns {LogLevel} the log-level for the logger.\n     * @memberof LoggerConfigurationImpl\n     */\n  public getLogLevel (group = '', name = ''): LogLevel {\n    const compoundKey = `${group}:${name}`\n\n    if (this.logLevelMapping.has(compoundKey)) {\n      return this.logLevelMapping.get(compoundKey)\n    }\n\n    return this.defaultLogLevel\n  }\n\n  /**\n     * Sets the default log-level.\n     *\n     * @param {LogLevel} defaultLogLevel\n     * @memberof LoggerConfigurationImpl\n     */\n  public setDefaultLogLevel (defaultLogLevel: LogLevel): LoggerConfigurationImpl {\n    this.defaultLogLevel = defaultLogLevel\n    return this\n  }\n\n  /**\n     * Set the log-level for the given group and name.\n     *\n     * @param {LogLevel} logLevel The new log-level.\n     * @param {string} [group=\"\"] The group of the logger instance.\n     * @param {string} [name=\"\"] The name of the logger instance.\n     * @memberof LoggerConfigurationImpl\n     */\n  public setLogLevel (logLevel: LogLevel, group = '', name = ''): LoggerConfigurationImpl {\n    const event = { group, logLevel, name }\n    const compoundKey = `${group}:${name}`\n\n    this.logLevelMapping.set(compoundKey, logLevel)\n    this.events.emit('changed:log-level', event)\n\n    return this\n  }\n\n  /**\n     * Set the implementation-specific config for the given group and name.\n     *\n     * @template T Type of config.\n     * @param {T} config The implementation-specific config for the specified logger.\n     * @param {string} [group=\"\"] The group of the logger instance.\n     * @param {string} [name=\"\"] The name of the logger instance.\n     * @memberof LoggerConfigurationImpl\n     */\n  public setConfig(config: T, group = '', name = ''): LoggerConfigurationImpl {\n    const event = { group, config, name }\n    const compoundKey = `${group}:${name}`\n\n    this.configMapping.set(compoundKey, config)\n    this.events.emit('changed:config', event)\n\n    return this\n  }\n\n  /**\n     * Set the implementation-specific config for the given group and name.\n     *\n     * @template T Type of config.\n     * @param {T} config The implementation-specific config for the specified logger.\n     * @param {string} [group=\"\"] The group of the logger instance.\n     * @param {string} [name=\"\"] The name of the logger instance.\n     * @memberof LoggerConfigurationImpl\n     */\n  public getConfig(group = '', name = ''): T {\n    /* eslint-disable @typescript-eslint/strict-boolean-expressions */\n    return this.configMapping.get(`${group}:${name}`) ||\n           this.configMapping.get(`${group}:`) ||\n           this.configMapping.get(':')\n    /* eslint-disable @typescript-eslint/strict-boolean-expressions */\n  }\n\n  /**\n     * Registers a new listener for log-level changes.\n     *\n     * @param {(...args: any[]) => void} callback The listener callback.\n     * @param {string} [group=\"\"] (Deprecated - Ignored and will be removed) The group of the logger instance.\n     * @param {string} [name=\"\"] (Deprecated - Ignored and will be removed) The name of the logger instance.\n     * @memberof LoggerConfigurationImpl\n     */\n  public onLogLevelChanged (callback: (...args: any[]) => void, group = '', name = ''): LoggerConfigurationImpl {\n    this.events.on('changed:log-level', callback)\n    return this\n  }\n\n  /**\n     * Registers a new listener for configuration changes.\n     *\n     * @param {(...args: any[]) => void} callback The listener callback.\n     * @param {string} [group=\"\"] (Deprecated - Ignored and will be removed) The group of the logger instance.\n     * @param {string} [name=\"\"] (Deprecated - Ignored and will be removed) The name of the logger instance.\n     * @memberof LoggerConfigurationImpl\n     */\n  public onConfigChanged (callback: (...args: any[]) => void, group = '', name = ''): LoggerConfigurationImpl {\n    this.events.on('changed:config', callback)\n    return this\n  }\n\n  /**\n     * Removes all listeners.\n     *\n     * @memberof LoggerConfigurationImpl\n     */\n  public removeAllListeners (): LoggerConfigurationImpl {\n    this.events.removeAllListeners()\n    return this\n  }\n\n  /**\n     * Removes all listeners, clears all log-level configurations and sets the default-log-level to INFO.\n     *\n     * @memberof LoggerConfigurationImpl\n     */\n  public reset (): LoggerConfigurationImpl {\n    this.events.removeAllListeners()\n    this.logLevelMapping.clear()\n    this.configMapping.clear()\n    this.defaultLogLevel = LogLevel.INFO\n    return this\n  }\n\n  /**\n     * Checks if the config for a certain logger is present.\n     *\n     * @param {string} [group=\"\"] The group of the logger instance.\n     * @param {string} [name=\"\"] The name of the logger instance.\n     * @memberof LoggerConfigurationImpl\n     */\n  public hasConfig (group = '', name = ''): boolean {\n    const compoundKey = `${group}:${name}`\n    return this.configMapping.has(compoundKey)\n  }\n}\n\n/**\n * Default configuration instance\n */\nexport const LoggerConfiguration = new LoggerConfigurationImpl()\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerFactory.html":{"url":"classes/LoggerFactory.html","title":"class - LoggerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts\n        \n\n            \n                Description\n            \n            \n                Used to instance an cache logger instances.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                COMMON_METADATA\n                            \n                            \n                                    Private\n                                    Static\n                                INITIALIZED\n                            \n                            \n                                    Private\n                                    Static\n                                LOGGER\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                LOGGER_INSTANCE_CACHE\n                            \n                            \n                                    Private\n                                    Static\n                                ROOT_LOGGER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                configChanged\n                            \n                            \n                                    Static\n                                getLogger\n                            \n                            \n                                    Static\n                                getMetadata\n                            \n                            \n                                    Private\n                                    Static\n                                initialize\n                            \n                            \n                                    Private\n                                    Static\n                                logLevelChanged\n                            \n                            \n                                    Static\n                                reset\n                            \n                            \n                                    Static\n                                setMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            COMMON_METADATA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:313\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            INITIALIZED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:316\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerImplementation\n\n                        \n                    \n                    \n                        \n                            Default value : new NullLoggerImplementation()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:314\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            LOGGER_INSTANCE_CACHE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:317\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            ROOT_LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DefaultLoggerInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:315\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            configChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:355\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getLogger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogger(group: string, name: string, builder?: LoggerBuilder)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:238\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                    \n                \n            \n\n            \n                \n                    Gets a logger from cache or instances a new logger instance with the given group and name.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The group of the logger instance\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The name of the logger instance.\n\n                                    \n                                \n                                \n                                    builder\n                                    \n                                                LoggerBuilder\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ILoggerInstance\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMetadata()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:284\n                \n            \n\n\n            \n                \n                    Gets the application-wide metadata object.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:319\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            logLevelChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logLevelChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:343\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset(reinit)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:271\n                \n            \n\n\n            \n                \n                    Clears the logger cache and conditionally resets the logger implementation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    reinit\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Causes the logger implementation to re-instantiate the logger binding if set to true.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMetadata(metadata: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:303\n                \n            \n\n\n            \n                \n                    Sets the application-wide metadata object for logger instances.\nEvery new logger will get the application-wide metadata object set.\nEvery logger instance that sets it's own metadata object will be excluded from\nfuture updates of the application-wide metadata object.\nNote that this object is shared. Any changes to it will affect all logger instances\nusing it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a metadata object - can be undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport { LoggerBindings, LoggerImplementation, LoggerBuilder } from './LoggerBindings'\nimport { LoggerConfiguration, LogLevel } from './LoggerConfiguration'\n\n/**\n * Interface representing a logger instance.\n *\n * @export\n * @interface ILoggerInstance\n */\nexport interface ILoggerInstance {\n  /**\n     * Logs the given message using TRACE log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  trace(...args: any[]): Promise\n  /**\n     * Logs the given message using DEBUG log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  debug(...args: any[]): Promise\n  /**\n     * Logs the given message using INFO log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  info(...args: any[]): Promise\n  /**\n     * Logs the given message using WARN log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  warn(...args: any[]): Promise\n  /**\n     * Logs the given message using ERROR log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  error(...args: any[]): Promise\n  /**\n     * Gets the current log-level.\n     *\n     * @returns {LogLevel} The log-level.\n     * @memberof ILoggerInstance\n     */\n  getLogLevel(): LogLevel\n  /**\n     * Sets the metadata assigned to every future invocation of any of the log-methods.\n     *\n     * @param {*} metadata metadata object - can be undefined or null.\n     * @memberof ILoggerInstance\n     */\n  setMetadata(metadata: any): void\n  /**\n     * Gets the underlying implementation of the logger.\n     *\n     * @memberof ILoggerInstance\n     */\n  getImplementation(): T\n}\n\n/**\n * The standard logger instance implementation.\n *\n * @export\n * @class DefaultLoggerInstance\n * @implements {ILoggerInstance}\n */\nexport class DefaultLoggerInstance implements ILoggerInstance {\n  private readonly impl: LoggerImplementation;\n  private readonly name: string;\n  private readonly group: string;\n  private commonMetadata: any;\n  private logLevel: LogLevel;\n\n  /**\n     * Creates an instance of DefaultLoggerInstance.\n     *\n     * @param {string} name The name of the logger instance.\n     * @param {string} group The group of the logger instance.\n     * @param {LogLevel} logLevel The initial log-level of the logger instance.\n     * @param {commonMetadata} commonMetadata The metadata added automatically to every log operation.\n     * @param {LoggerImplementation} impl The underlying logger implementation.\n     * @memberof DefaultLoggerInstance\n     */\n  public constructor (\n    name: string,\n    group: string,\n    logLevel: LogLevel,\n    commonMetadata: any,\n    impl: LoggerImplementation,\n    builder: LoggerBuilder) {\n    this.impl = impl\n    this.name = name\n    this.group = group\n    this.logLevel = logLevel\n    this.commonMetadata = commonMetadata\n\n    const initialConfig = LoggerConfiguration.getConfig(group, name)\n    this.impl.setLoggerBuilder(builder)\n    this.impl.setConfig(initialConfig, group, name)\n  }\n\n  public getLogLevel (): LogLevel {\n    return this.logLevel\n  }\n\n  public setLogLevel (logLevel: LogLevel): void {\n    this.logLevel = logLevel\n    this.impl.setLogLevel(logLevel, this.group, this.name)\n  }\n\n  public getName (): string {\n    return this.name\n  }\n\n  public getGroup (): string {\n    return this.group\n  }\n\n  public getImpl (): LoggerImplementation {\n    return this.impl\n  }\n\n  public getMetadata (): any {\n    return this.commonMetadata\n  }\n\n  /**\n     * Sets the metadata object that is gonna be assigned to every future invocation of any log method.\n     *\n     * @param {*} commonMetadata a metadata object - can be undefined or null.\n     * @memberof DefaultLoggerInstance\n     */\n  public setMetadata (commonMetadata: any): void {\n    this.commonMetadata = commonMetadata\n    this.impl.setMetadata(commonMetadata, this.group, this.name)\n  }\n\n  public async trace (...args: any[]): Promise {\n    const metadata = [LogLevel.TRACE, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async debug (...args: any[]): Promise {\n    const metadata = [LogLevel.DEBUG, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async info (...args: any[]): Promise {\n    const metadata = [LogLevel.INFO, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async warn (...args: any[]): Promise {\n    const metadata = [LogLevel.WARN, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async error (...args: any[]): Promise {\n    const metadata = [LogLevel.ERROR, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public getImplementation (): T {\n    return this.impl.getImplementation(this.group, this.name)\n  }\n\n  private async log (logLevel: LogLevel, ...args: any[]): Promise {\n    if (logLevel  {\n  public async log (...args: any[]): Promise {\n    return null\n  }\n\n  public getImplementation (group: string, name: string): null {\n    return null\n  }\n\n  public setConfig(config: T, group: string, name: string): void {\n    // nothing\n  }\n\n  public setLogLevel (logLevel: LogLevel, group: string, name: string): void {\n    // nothing\n  }\n\n  public setMetadata (metadata: any, group: string, name: string): void {\n    // nothing\n  }\n\n  public setLoggerBuilder (builder: LoggerBuilder): void {\n    // nothing\n  }\n}\n\n/**\n * Used to instance an cache logger instances.\n *\n * @export\n * @class LoggerFactory\n */\nexport class LoggerFactory {\n  /**\n     * Gets a logger from cache or instances a new logger instance with the given group and name.\n     *\n     * @static\n     * @param {string} [group=\"\"] The group of the logger instance\n     * @param {string} [name=\"\"] The name of the logger instance.\n     * @returns {ILoggerInstance}\n     * @memberof LoggerFactory\n     */\n  public static getLogger(\n    group = '',\n    name = '',\n    builder?: LoggerBuilder\n  ): ILoggerInstance {\n    if (!LoggerFactory.INITIALIZED) {\n      LoggerFactory.INITIALIZED = true\n      LoggerFactory.initialize()\n    }\n\n    const compoundKey = `${group}:${name}`\n    if (LoggerFactory.LOGGER_INSTANCE_CACHE.has(compoundKey)) {\n      return LoggerFactory.LOGGER_INSTANCE_CACHE.get(compoundKey) as ILoggerInstance\n    }\n\n    const instance = new DefaultLoggerInstance(\n      name,\n      group,\n      LoggerConfiguration.getLogLevel(group, name),\n      LoggerFactory.COMMON_METADATA,\n      LoggerFactory.LOGGER as LoggerImplementation,\n      builder)\n    LoggerFactory.LOGGER_INSTANCE_CACHE.set(compoundKey, instance)\n    return instance\n  }\n\n  /**\n     * Clears the logger cache and conditionally resets the logger implementation.\n     *\n     * @static\n     * @param [reinit] Causes the logger implementation to re-instantiate the logger binding if set to true.\n     * @memberof LoggerFactory\n     */\n  public static reset (reinit = false): void {\n    LoggerFactory.LOGGER_INSTANCE_CACHE.clear()\n    if (reinit) {\n      LoggerFactory.INITIALIZED = false\n    }\n  }\n\n  /**\n     * Gets the application-wide metadata object.\n     *\n     * @static\n     * @memberof LoggerFactory\n     */\n  public static getMetadata (): any {\n    return LoggerFactory.COMMON_METADATA\n  }\n\n  /**\n     * Sets the application-wide metadata object for logger instances.\n     *\n     * Every new logger will get the application-wide metadata object set.\n     *\n     * Every logger instance that sets it's own metadata object will be excluded from\n     * future updates of the application-wide metadata object.\n     *\n     * Note that this object is shared. Any changes to it will affect all logger instances\n     * using it.\n     *\n     * @static\n     * @param {*} metadata a metadata object - can be undefined or null.\n     * @memberof LoggerFactory\n     */\n  public static setMetadata (metadata: any): void {\n    const formerData = LoggerFactory.COMMON_METADATA\n    LoggerFactory.COMMON_METADATA = metadata\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      if (logger.getMetadata() === formerData) {\n        logger.setMetadata(LoggerFactory.COMMON_METADATA)\n      }\n    })\n  }\n\n  private static COMMON_METADATA: any = undefined;\n  private static LOGGER: LoggerImplementation = new NullLoggerImplementation();\n  private static ROOT_LOGGER: DefaultLoggerInstance;\n  private static INITIALIZED: boolean = false;\n  private static readonly LOGGER_INSTANCE_CACHE: Map> = new Map();\n\n  private static initialize(): void {\n    const BINDINGS = new LoggerBindings().getBindings()\n    const BINDING = BINDINGS[0]\n    if (BINDINGS.length === 0) {\n      console.log('SLF4TS: No Logger Binding found')\n      return\n    }\n    LoggerFactory.LOGGER = BINDING.getLoggerImplementation()\n    LoggerFactory.ROOT_LOGGER = LoggerFactory.getLogger() as DefaultLoggerInstance\n\n    if (BINDINGS.length > 1) {\n      let message = 'multiple bindings found:'\n      BINDINGS.forEach((binding) => {\n        message += `\\n  ${binding.getVendor()} - ${binding.getVersion()}`\n      })\n      message += `\\n  using ${BINDING.getVendor()} - ${BINDING.getVersion()}`\n      LoggerFactory.ROOT_LOGGER.info(message)\n        .catch(console.error)\n    }\n\n    LoggerConfiguration.onLogLevelChanged(LoggerFactory.logLevelChanged)\n    LoggerConfiguration.onConfigChanged(LoggerFactory.configChanged)\n  }\n\n  private static logLevelChanged (event: any): void {\n    const groupEmpty = event.group === ''\n    const nameEmpty = event.name === ''\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      const groupMatches = logger.getGroup() === event.group\n      const nameMatches = logger.getName() === event.name\n      if ((groupEmpty && nameEmpty) || (groupMatches && nameEmpty) || (groupMatches && nameMatches)) {\n        logger.setLogLevel(event.logLevel)\n      }\n    })\n  }\n\n  private static configChanged (event: any): void {\n    const groupEmpty = event.group === ''\n    const nameEmpty = event.name === ''\n\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      const hasNameConfig = LoggerConfiguration.hasConfig(logger.getGroup(), logger.getName())\n      const hasGroupConfig = LoggerConfiguration.hasConfig(logger.getGroup())\n      const groupMatches = logger.getGroup() === event.group\n      const nameMatches = logger.getName() === event.name\n\n      if ((groupEmpty && nameEmpty && !hasGroupConfig && !hasNameConfig) ||\n                (nameEmpty && groupMatches && !hasNameConfig) ||\n                (groupMatches && nameMatches)) {\n        logger.getImpl().setConfig(event.config, logger.getGroup(), logger.getName())\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerImplementation.html":{"url":"interfaces/LoggerImplementation.html","title":"interface - LoggerImplementation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggerImplementation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts\n        \n\n            \n                Description\n            \n            \n                The bridge to the underlying logging-framework.any[]\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getImplementation\n                                \n                                \n                                    log\n                                \n                                \n                                    setConfig\n                                \n                                \n                                    setLoggerBuilder\n                                \n                                \n                                    setLogLevel\n                                \n                                \n                                    setMetadata\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImplementation\n                        \n                        \n                    \n                \n            \n            \n                \ngetImplementation(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:38\n                \n            \n\n\n            \n                \n                    Gets the underlying implementation of the logger.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The group of the logger.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the logger.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:28\n                \n            \n\n\n            \n                \n                    Invoked for each call to a logging method of a logger instance.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        array with log-level, group, name and all arguments passed to the logging function.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise completed when the log statement was processed by the underlying logging-framework.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: T, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sets the configuration for the specified logger instance.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The implementation-specific configuration.\n\n                                    \n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The group of the logger.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the logger.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoggerBuilder(builder: LoggerBuilder)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:77\n                \n            \n\n\n            \n                \n                    Sets the logger builder instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builder\n                                    \n                                                LoggerBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \nsetLogLevel(logLevel: LogLevel, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:59\n                \n            \n\n\n            \n                \n                    Informs the logger implementation of the log-level change.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new log level.\n\n                                    \n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The group of the logger.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the logger.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \nsetMetadata(metadata: any, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts:69\n                \n            \n\n\n            \n                \n                    Informs the logger implementation of the metadata change.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new metadata.\n\n                                    \n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The group of the logger.\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the logger.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as fs from 'fs'\nimport * as path from 'path'\n\nimport { LogLevel } from './LoggerConfiguration'\n\n/**\n * Builds the instance of the underlying logger framework.\n */\nexport type LoggerBuilder = (...args: P) => T\n\n/**\n * The bridge to the underlying logging-framework.any[]\n *\n * @export\n * @interface LoggerImplementation\n */\nexport interface LoggerImplementation {\n\n  /**\n     * Invoked for each call to a logging method of a logger instance.\n     *\n     * @param {...any[]} args array with log-level, group, name and all arguments passed to the logging function.\n     * @returns A Promise completed when the log statement was processed by the underlying logging-framework.\n     * @memberof LoggerImplementation\n     */\n  log(...args: any[]): Promise\n\n  /**\n     * Gets the underlying implementation of the logger.\n     *\n     * @template T Type of logger instance.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  getImplementation(group: string, name: string): T\n\n  /**\n     * Sets the configuration for the specified logger instance.\n     *\n     * @template T Type of config object\n     * @param {T} config The implementation-specific configuration.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  setConfig(config: T, group: string, name: string): void\n\n  /**\n     * Informs the logger implementation of the log-level change.\n     *\n     * @param {LogLevel} logLevel The new log level.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  setLogLevel(logLevel: LogLevel, group: string, name: string): void\n\n  /**\n     * Informs the logger implementation of the metadata change.\n     *\n     * @param {any} metadata The new metadata.\n     * @param {string} group The group of the logger.\n     * @param {string} name The name of the logger.\n     * @memberof LoggerImplementation\n     */\n  setMetadata(metadata: any, group: string, name: string): void\n\n  /**\n   * Sets the logger builder instance\n   *\n   * @param {LoggerBuilder} builder\n   * @memberof LoggerImplementation\n   */\n  setLoggerBuilder(builder: LoggerBuilder): void\n\n}\n\n/**\n * A metadata object for a binding.\n *\n * @export\n * @interface LoggerBinding\n */\nexport interface LoggerBinding {\n  /**\n     * Gets the logger implementation.\n     *\n     * @returns {LoggerImplementation} The logger implementation.\n     * @memberof LoggerBinding\n     */\n  getLoggerImplementation(): LoggerImplementation\n  /**\n     * Gets the vendor string.\n     *\n     * @returns {string} The vendor name.\n     * @memberof LoggerBinding\n     */\n  getVendor(): string\n  /**\n     * Gets the version string.\n     *\n     * @returns {string} The version number.\n     * @memberof LoggerBinding\n     */\n  getVersion(): string\n}\n\n/**\n * Encapsulates the loading of logger bindings from NODE_PATH.\n *\n * Additionally the location of other logging-framework bindings can\n * be configured using the environment variable 'LOGGER_BINDING_ADDITIONAL_PATH'.\n *\n * For each folder - containing a file named '.slf4ts-binding' in 'NODE_PATH',\n * 'LOGGER_BINDING_ADDITIONAL_PATH' or the additional search paths given to\n * LoggerBindings - LoggerBindings loads the node-module and invokes the function\n * that is the default export of the entire module for registration.\n *\n * @export\n * @class LoggerBindings\n */\nexport class LoggerBindings {\n  /**\n     * Array of loaded bindings.\n     *\n     * @private\n     * @type {LoggerBinding[]}\n     * @memberof LoggerBindings\n     */\n  private readonly bindings: LoggerBinding[] = [];\n\n  /**\n     * Creates an instance of LoggerBindings.\n     *\n     * @param {string[]} [additionalPaths=[]] A string array with additional paths to search bindings.\n     * @memberof LoggerBindings\n     */\n  public constructor (additionalPaths: string[] = []) {\n    if ('LOGGER_BINDING_ADDITIONAL_PATH' in process.env) {\n      additionalPaths.push(process.env.LOGGER_BINDING_ADDITIONAL_PATH)\n    }\n    if ('mainModule' in process && 'paths' in process.mainModule) {\n      process.mainModule.paths\n        .forEach((mainPath) => additionalPaths.push(mainPath))\n    }\n\n    const moduleFolders: string[] = this.getAllModuleFolders(additionalPaths)\n    const loggerBindings: string[] = this.getAllLoggerBindings(moduleFolders)\n\n    loggerBindings.forEach((binding) => {\n      const registerFunc = require.main.require(binding)\n      registerFunc(this)\n    })\n  }\n\n  /**\n     * Used to register a logging-framework binding.\n     *\n     * @param {LoggerBinding} binding The LoggerBinding to register.\n     * @returns\n     * @memberof LoggerBindings\n     */\n  public registerBinding (binding: LoggerBinding): void {\n    const exists = this.bindings.filter((b) => {\n      const vendorEquals = b.getVendor() === binding.getVendor()\n      const versionEquals = b.getVersion() === binding.getVersion()\n      return vendorEquals && versionEquals\n    }).length > 0\n\n    if (exists) {\n      return\n    }\n\n    this.bindings.push(binding)\n  }\n\n  /**\n     * Gets a copy of all {@link LoggerBinding}\n     *\n     * @returns {LoggerBinding[]}\n     * @memberof LoggerBindings\n     */\n  public getBindings (): LoggerBinding[] {\n    return [].concat(this.bindings)\n  }\n\n  private getAllModuleFolders (additionalPaths: string[]): string[] {\n    const rootPaths: string[] = (module as any).paths\n    const moduleFolders: string[] = []\n\n    rootPaths.concat(additionalPaths).forEach((rootPath) =>\n      this.visitNodeModules(rootPath).forEach((folder) => moduleFolders.push(folder)))\n\n    return moduleFolders\n  }\n\n  private visitNodeModules (rootPath: string): string[] {\n    const moduleFolders: string[] = []\n\n    if (fs.existsSync(rootPath)) {\n      const files = fs.readdirSync(rootPath)\n      files.forEach((folder) => {\n        const absolutePath = path.join(rootPath, folder)\n        moduleFolders.push(absolutePath)\n        this.visitNodeModules(path.join(absolutePath, 'node_modules'))\n          .forEach((subfolder) => moduleFolders.push(subfolder))\n      })\n    }\n\n    return moduleFolders\n  }\n\n  private getAllLoggerBindings (moduleFolders: string[]): string[] {\n    const bindings: string[] = []\n\n    moduleFolders.forEach((moduleFolder) => {\n      if (fs.existsSync(path.join(moduleFolder, '.slf4ts-binding'))) {\n        bindings.push(path.basename(moduleFolder))\n      }\n    })\n\n    return bindings\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoglevelLoggerBinding.html":{"url":"classes/LoglevelLoggerBinding.html","title":"class - LoglevelLoggerBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoglevelLoggerBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerBinding.ts\n        \n\n            \n                Description\n            \n            \n                LoggerBinding implementation for Loglevel.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerBinding\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                packageJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLoggerImplementation\n                            \n                            \n                                    Public\n                                getVendor\n                            \n                            \n                                    Public\n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerBinding.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            packageJson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerBinding.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLoggerImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerImplementation()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerBinding.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LoglevelLoggerImplementation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVendor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVendor()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerBinding.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVersion()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerBinding.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport { Logger } from 'loglevel'\nimport { LoggerBinding } from 'slf4ts-api'\n\nimport { LoglevelLoggerImplementation } from './LoglevelLoggerImplementation'\n\n/**\n * LoggerBinding implementation for Loglevel.\n *\n * @export\n * @class LoglevelLoggerBinding\n * @implements {LoggerBinding}\n */\nexport class LoglevelLoggerBinding implements LoggerBinding {\n  private readonly packageJson: any;\n\n  public constructor () {\n    const modulePath = path.parse(module.filename)\n    let currentDir = path.resolve(modulePath.dir)\n    while (true) {\n      currentDir = path.resolve(path.join(currentDir, '..'))\n      const packageJsonPath = path.resolve(path.join(currentDir, 'package.json'))\n      if (fs.existsSync(packageJsonPath)) {\n        this.packageJson = require(packageJsonPath)\n        break\n      }\n    }\n  }\n\n  public getLoggerImplementation (): LoglevelLoggerImplementation {\n    return new LoglevelLoggerImplementation()\n  }\n\n  public getVendor (): string {\n    return 'loglevel'\n  }\n\n  public getVersion (): string {\n    return this.packageJson.version\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoglevelLoggerImplementation.html":{"url":"classes/LoglevelLoggerImplementation.html","title":"class - LoglevelLoggerImplementation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoglevelLoggerImplementation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts\n        \n\n            \n                Description\n            \n            \n                The actual loglevel logger implementation.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerImplementation\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                builder\n                            \n                            \n                                    Private\n                                    Readonly\n                                loggers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDefaultLoggerBuilder\n                            \n                            \n                                    Public\n                                getImplementation\n                            \n                            \n                                    Private\n                                getLoggerInstance\n                            \n                            \n                                    Public\n                                    Async\n                                log\n                            \n                            \n                                    Public\n                                setConfig\n                            \n                            \n                                    Public\n                                setLoggerBuilder\n                            \n                            \n                                    Public\n                                setLogLevel\n                            \n                            \n                                    Public\n                                setMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            builder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerBuilder\n\n                        \n                    \n                    \n                        \n                            Default value : this.getDefaultLoggerBuilder()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            loggers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDefaultLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultLoggerBuilder()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LoggerBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImplementation(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Logger\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLoggerInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerInstance(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Logger\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfig(config: T, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts:65\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLoggerBuilder(builder?: LoggerBuilder)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builder\n                                    \n                                                LoggerBuilder\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: LogLevel, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMetadata(metadata: any, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as log from 'loglevel'\nimport {\n  Logger,\n  LogLevelDesc\n} from 'loglevel'\nimport {\n  LoggerImplementation,\n  LogLevel,\n  LoggerBuilder,\n  LoggerConfiguration\n} from 'slf4ts-api'\n\nconst LogLevelMapping: LogLevelDesc[] = []\n\nLogLevelMapping[LogLevel.TRACE] = 'trace'\nLogLevelMapping[LogLevel.DEBUG] = 'debug'\nLogLevelMapping[LogLevel.INFO] = 'info'\nLogLevelMapping[LogLevel.WARN] = 'warn'\nLogLevelMapping[LogLevel.ERROR] = 'error'\n\ntype LogMethodId = 'trace' | 'debug' | 'info' | 'warn' | 'error'\n\nconst LogMethodMapping: LogMethodId[] = []\n\nLogMethodMapping[LogLevel.TRACE] = 'trace'\nLogMethodMapping[LogLevel.DEBUG] = 'debug'\nLogMethodMapping[LogLevel.INFO] = 'info'\nLogMethodMapping[LogLevel.WARN] = 'warn'\nLogMethodMapping[LogLevel.ERROR] = 'error'\n\n/**\n * The actual loglevel logger implementation.\n *\n * @export\n * @class LoglevelLoggerImplementation\n * @implements {LoggerImplementation}\n */\nexport class LoglevelLoggerImplementation implements LoggerImplementation {\n  private readonly loggers: Map = new Map();\n  private builder: LoggerBuilder = this.getDefaultLoggerBuilder()\n\n  public async log (...args: any[]): Promise {\n    const additionalArguments = [...args]\n    const commonLoggerData = additionalArguments.splice(0, 3)\n    const level: number = commonLoggerData[0]\n    const group: string = commonLoggerData[1]\n    const name: string = commonLoggerData[2]\n    const instance = this.getLoggerInstance(group, name)\n\n    if (!additionalArguments[additionalArguments.length - 1]) {\n      additionalArguments.pop()\n    }\n\n    const logMethodId: LogMethodId = LogMethodMapping[level]\n    const logMethod = instance[logMethodId]\n    logMethod(...additionalArguments)\n  }\n\n  public getImplementation (group: string, name: string): Logger {\n    return this.getLoggerInstance(group, name)\n  }\n\n  public setConfig(config: T, group: string, name: string): void {\n    // nothing to configure here\n  }\n\n  public setLogLevel (logLevel: LogLevel, group: string, name: string): void {\n    const instance = this.getLoggerInstance(group, name)\n    instance.setLevel(LogLevelMapping[logLevel])\n  }\n\n  public setMetadata (metadata: any, group: string, name: string): void {\n    // nothing to do here\n  }\n\n  public setLoggerBuilder (builder?: LoggerBuilder): void {\n    this.builder = builder ?? this.getDefaultLoggerBuilder()\n  }\n\n  private getDefaultLoggerBuilder (): LoggerBuilder {\n    return (name: string) => {\n      if (name === ':') {\n        return log\n      }\n      return log.getLogger(name)\n    }\n  }\n\n  private getLoggerInstance (\n    group: string,\n    name: string\n  ): Logger {\n    const compoundKey = `${group}:${name}`\n    let instance: Logger = this.loggers.get(compoundKey)\n\n    if (!instance) {\n      const level = LoggerConfiguration.getLogLevel(group, name)\n      instance = this.builder(compoundKey)\n      instance.setLevel(LogLevelMapping[level])\n      this.loggers.set(compoundKey, instance)\n    }\n\n    return instance\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NullLoggerImplementation.html":{"url":"classes/NullLoggerImplementation.html","title":"class - NullLoggerImplementation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NullLoggerImplementation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts\n        \n\n            \n                Description\n            \n            \n                Default/ Dummy logger implementation - does nothing.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerImplementation\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getImplementation\n                            \n                            \n                                    Public\n                                    Async\n                                log\n                            \n                            \n                                    Public\n                                setConfig\n                            \n                            \n                                    Public\n                                setLoggerBuilder\n                            \n                            \n                                    Public\n                                setLogLevel\n                            \n                            \n                                    Public\n                                setMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImplementation(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfig(config: T, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:205\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLoggerBuilder(builder: LoggerBuilder)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builder\n                                    \n                                                LoggerBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: LogLevel, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMetadata(metadata: any, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport { LoggerBindings, LoggerImplementation, LoggerBuilder } from './LoggerBindings'\nimport { LoggerConfiguration, LogLevel } from './LoggerConfiguration'\n\n/**\n * Interface representing a logger instance.\n *\n * @export\n * @interface ILoggerInstance\n */\nexport interface ILoggerInstance {\n  /**\n     * Logs the given message using TRACE log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  trace(...args: any[]): Promise\n  /**\n     * Logs the given message using DEBUG log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  debug(...args: any[]): Promise\n  /**\n     * Logs the given message using INFO log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  info(...args: any[]): Promise\n  /**\n     * Logs the given message using WARN log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  warn(...args: any[]): Promise\n  /**\n     * Logs the given message using ERROR log-level.\n     *\n     * @param {...args: any[]} [args] messages, metadata and errors to log.\n     * @returns {Promise} A promise completing when the logging-implementation processed the log statement.\n     * @memberof ILoggerInstance\n     */\n  error(...args: any[]): Promise\n  /**\n     * Gets the current log-level.\n     *\n     * @returns {LogLevel} The log-level.\n     * @memberof ILoggerInstance\n     */\n  getLogLevel(): LogLevel\n  /**\n     * Sets the metadata assigned to every future invocation of any of the log-methods.\n     *\n     * @param {*} metadata metadata object - can be undefined or null.\n     * @memberof ILoggerInstance\n     */\n  setMetadata(metadata: any): void\n  /**\n     * Gets the underlying implementation of the logger.\n     *\n     * @memberof ILoggerInstance\n     */\n  getImplementation(): T\n}\n\n/**\n * The standard logger instance implementation.\n *\n * @export\n * @class DefaultLoggerInstance\n * @implements {ILoggerInstance}\n */\nexport class DefaultLoggerInstance implements ILoggerInstance {\n  private readonly impl: LoggerImplementation;\n  private readonly name: string;\n  private readonly group: string;\n  private commonMetadata: any;\n  private logLevel: LogLevel;\n\n  /**\n     * Creates an instance of DefaultLoggerInstance.\n     *\n     * @param {string} name The name of the logger instance.\n     * @param {string} group The group of the logger instance.\n     * @param {LogLevel} logLevel The initial log-level of the logger instance.\n     * @param {commonMetadata} commonMetadata The metadata added automatically to every log operation.\n     * @param {LoggerImplementation} impl The underlying logger implementation.\n     * @memberof DefaultLoggerInstance\n     */\n  public constructor (\n    name: string,\n    group: string,\n    logLevel: LogLevel,\n    commonMetadata: any,\n    impl: LoggerImplementation,\n    builder: LoggerBuilder) {\n    this.impl = impl\n    this.name = name\n    this.group = group\n    this.logLevel = logLevel\n    this.commonMetadata = commonMetadata\n\n    const initialConfig = LoggerConfiguration.getConfig(group, name)\n    this.impl.setLoggerBuilder(builder)\n    this.impl.setConfig(initialConfig, group, name)\n  }\n\n  public getLogLevel (): LogLevel {\n    return this.logLevel\n  }\n\n  public setLogLevel (logLevel: LogLevel): void {\n    this.logLevel = logLevel\n    this.impl.setLogLevel(logLevel, this.group, this.name)\n  }\n\n  public getName (): string {\n    return this.name\n  }\n\n  public getGroup (): string {\n    return this.group\n  }\n\n  public getImpl (): LoggerImplementation {\n    return this.impl\n  }\n\n  public getMetadata (): any {\n    return this.commonMetadata\n  }\n\n  /**\n     * Sets the metadata object that is gonna be assigned to every future invocation of any log method.\n     *\n     * @param {*} commonMetadata a metadata object - can be undefined or null.\n     * @memberof DefaultLoggerInstance\n     */\n  public setMetadata (commonMetadata: any): void {\n    this.commonMetadata = commonMetadata\n    this.impl.setMetadata(commonMetadata, this.group, this.name)\n  }\n\n  public async trace (...args: any[]): Promise {\n    const metadata = [LogLevel.TRACE, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async debug (...args: any[]): Promise {\n    const metadata = [LogLevel.DEBUG, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async info (...args: any[]): Promise {\n    const metadata = [LogLevel.INFO, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async warn (...args: any[]): Promise {\n    const metadata = [LogLevel.WARN, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public async error (...args: any[]): Promise {\n    const metadata = [LogLevel.ERROR, this.group, this.name].concat(...arguments).concat(this.commonMetadata)\n    return this.log.apply(this, metadata)\n  }\n\n  public getImplementation (): T {\n    return this.impl.getImplementation(this.group, this.name)\n  }\n\n  private async log (logLevel: LogLevel, ...args: any[]): Promise {\n    if (logLevel  {\n  public async log (...args: any[]): Promise {\n    return null\n  }\n\n  public getImplementation (group: string, name: string): null {\n    return null\n  }\n\n  public setConfig(config: T, group: string, name: string): void {\n    // nothing\n  }\n\n  public setLogLevel (logLevel: LogLevel, group: string, name: string): void {\n    // nothing\n  }\n\n  public setMetadata (metadata: any, group: string, name: string): void {\n    // nothing\n  }\n\n  public setLoggerBuilder (builder: LoggerBuilder): void {\n    // nothing\n  }\n}\n\n/**\n * Used to instance an cache logger instances.\n *\n * @export\n * @class LoggerFactory\n */\nexport class LoggerFactory {\n  /**\n     * Gets a logger from cache or instances a new logger instance with the given group and name.\n     *\n     * @static\n     * @param {string} [group=\"\"] The group of the logger instance\n     * @param {string} [name=\"\"] The name of the logger instance.\n     * @returns {ILoggerInstance}\n     * @memberof LoggerFactory\n     */\n  public static getLogger(\n    group = '',\n    name = '',\n    builder?: LoggerBuilder\n  ): ILoggerInstance {\n    if (!LoggerFactory.INITIALIZED) {\n      LoggerFactory.INITIALIZED = true\n      LoggerFactory.initialize()\n    }\n\n    const compoundKey = `${group}:${name}`\n    if (LoggerFactory.LOGGER_INSTANCE_CACHE.has(compoundKey)) {\n      return LoggerFactory.LOGGER_INSTANCE_CACHE.get(compoundKey) as ILoggerInstance\n    }\n\n    const instance = new DefaultLoggerInstance(\n      name,\n      group,\n      LoggerConfiguration.getLogLevel(group, name),\n      LoggerFactory.COMMON_METADATA,\n      LoggerFactory.LOGGER as LoggerImplementation,\n      builder)\n    LoggerFactory.LOGGER_INSTANCE_CACHE.set(compoundKey, instance)\n    return instance\n  }\n\n  /**\n     * Clears the logger cache and conditionally resets the logger implementation.\n     *\n     * @static\n     * @param [reinit] Causes the logger implementation to re-instantiate the logger binding if set to true.\n     * @memberof LoggerFactory\n     */\n  public static reset (reinit = false): void {\n    LoggerFactory.LOGGER_INSTANCE_CACHE.clear()\n    if (reinit) {\n      LoggerFactory.INITIALIZED = false\n    }\n  }\n\n  /**\n     * Gets the application-wide metadata object.\n     *\n     * @static\n     * @memberof LoggerFactory\n     */\n  public static getMetadata (): any {\n    return LoggerFactory.COMMON_METADATA\n  }\n\n  /**\n     * Sets the application-wide metadata object for logger instances.\n     *\n     * Every new logger will get the application-wide metadata object set.\n     *\n     * Every logger instance that sets it's own metadata object will be excluded from\n     * future updates of the application-wide metadata object.\n     *\n     * Note that this object is shared. Any changes to it will affect all logger instances\n     * using it.\n     *\n     * @static\n     * @param {*} metadata a metadata object - can be undefined or null.\n     * @memberof LoggerFactory\n     */\n  public static setMetadata (metadata: any): void {\n    const formerData = LoggerFactory.COMMON_METADATA\n    LoggerFactory.COMMON_METADATA = metadata\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      if (logger.getMetadata() === formerData) {\n        logger.setMetadata(LoggerFactory.COMMON_METADATA)\n      }\n    })\n  }\n\n  private static COMMON_METADATA: any = undefined;\n  private static LOGGER: LoggerImplementation = new NullLoggerImplementation();\n  private static ROOT_LOGGER: DefaultLoggerInstance;\n  private static INITIALIZED: boolean = false;\n  private static readonly LOGGER_INSTANCE_CACHE: Map> = new Map();\n\n  private static initialize(): void {\n    const BINDINGS = new LoggerBindings().getBindings()\n    const BINDING = BINDINGS[0]\n    if (BINDINGS.length === 0) {\n      console.log('SLF4TS: No Logger Binding found')\n      return\n    }\n    LoggerFactory.LOGGER = BINDING.getLoggerImplementation()\n    LoggerFactory.ROOT_LOGGER = LoggerFactory.getLogger() as DefaultLoggerInstance\n\n    if (BINDINGS.length > 1) {\n      let message = 'multiple bindings found:'\n      BINDINGS.forEach((binding) => {\n        message += `\\n  ${binding.getVendor()} - ${binding.getVersion()}`\n      })\n      message += `\\n  using ${BINDING.getVendor()} - ${BINDING.getVersion()}`\n      LoggerFactory.ROOT_LOGGER.info(message)\n        .catch(console.error)\n    }\n\n    LoggerConfiguration.onLogLevelChanged(LoggerFactory.logLevelChanged)\n    LoggerConfiguration.onConfigChanged(LoggerFactory.configChanged)\n  }\n\n  private static logLevelChanged (event: any): void {\n    const groupEmpty = event.group === ''\n    const nameEmpty = event.name === ''\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      const groupMatches = logger.getGroup() === event.group\n      const nameMatches = logger.getName() === event.name\n      if ((groupEmpty && nameEmpty) || (groupMatches && nameEmpty) || (groupMatches && nameMatches)) {\n        logger.setLogLevel(event.logLevel)\n      }\n    })\n  }\n\n  private static configChanged (event: any): void {\n    const groupEmpty = event.group === ''\n    const nameEmpty = event.name === ''\n\n    LoggerFactory.LOGGER_INSTANCE_CACHE.forEach((logger, compoundKey) => {\n      const hasNameConfig = LoggerConfiguration.hasConfig(logger.getGroup(), logger.getName())\n      const hasGroupConfig = LoggerConfiguration.hasConfig(logger.getGroup())\n      const groupMatches = logger.getGroup() === event.group\n      const nameMatches = logger.getName() === event.name\n\n      if ((groupEmpty && nameEmpty && !hasGroupConfig && !hasNameConfig) ||\n                (nameEmpty && groupMatches && !hasNameConfig) ||\n                (groupMatches && nameMatches)) {\n        logger.getImpl().setConfig(event.config, logger.getGroup(), logger.getName())\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PinoLoggerBinding.html":{"url":"classes/PinoLoggerBinding.html","title":"class - PinoLoggerBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PinoLoggerBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-pino/lib/slf4ts/PinoLoggerBinding.ts\n        \n\n            \n                Description\n            \n            \n                LoggerBinding implementation for Pino.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerBinding\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                packageJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLoggerImplementation\n                            \n                            \n                                    Public\n                                getVendor\n                            \n                            \n                                    Public\n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerBinding.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            packageJson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerBinding.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLoggerImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerImplementation()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerBinding.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PinoLoggerImplementation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVendor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVendor()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerBinding.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVersion()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerBinding.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport { Logger } from 'pino'\nimport { LoggerBinding } from 'slf4ts-api'\n\nimport { PinoLoggerImplementation } from './PinoLoggerImplementation'\n\n/**\n * LoggerBinding implementation for Pino.\n *\n * @export\n * @class PinoLoggerBinding\n * @implements {LoggerBinding}\n */\nexport class PinoLoggerBinding implements LoggerBinding {\n  private readonly packageJson: any;\n\n  public constructor () {\n    const modulePath = path.parse(module.filename)\n    let currentDir = path.resolve(modulePath.dir)\n    while (true) {\n      currentDir = path.resolve(path.join(currentDir, '..'))\n      const packageJsonPath = path.resolve(path.join(currentDir, 'package.json'))\n      if (fs.existsSync(packageJsonPath)) {\n        this.packageJson = require(packageJsonPath)\n        break\n      }\n    }\n  }\n\n  public getLoggerImplementation (): PinoLoggerImplementation {\n    return new PinoLoggerImplementation()\n  }\n\n  public getVendor (): string {\n    return 'pino'\n  }\n\n  public getVersion (): string {\n    return this.packageJson.version\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PinoLoggerImplementation.html":{"url":"classes/PinoLoggerImplementation.html","title":"class - PinoLoggerImplementation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PinoLoggerImplementation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts\n        \n\n            \n                Description\n            \n            \n                The actual pino logger implementation.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerImplementation\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                builder\n                            \n                            \n                                    Private\n                                    Readonly\n                                loggers\n                            \n                            \n                                    Private\n                                    Readonly\n                                rootLoggers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDefaultLoggerBuilder\n                            \n                            \n                                    Public\n                                getImplementation\n                            \n                            \n                                    Private\n                                getLoggerInstance\n                            \n                            \n                                    Public\n                                    Async\n                                log\n                            \n                            \n                                    Public\n                                setConfig\n                            \n                            \n                                    Public\n                                setLoggerBuilder\n                            \n                            \n                                    Public\n                                setLogLevel\n                            \n                            \n                                    Public\n                                setMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            builder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerBuilder\n\n                        \n                    \n                    \n                        \n                            Default value : this.getDefaultLoggerBuilder()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            loggers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            rootLoggers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDefaultLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultLoggerBuilder()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LoggerBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImplementation(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Logger\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLoggerInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerInstance(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Logger\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfig(config: T, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:73\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLoggerBuilder(builder?: LoggerBuilder)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builder\n                                    \n                                                LoggerBuilder\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: LogLevel, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMetadata(metadata: any, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as pino from 'pino'\nimport {\n  DestinationStream,\n  Logger,\n  LoggerOptions\n} from 'pino'\nimport {\n  LoggerImplementation,\n  LogLevel,\n  LoggerBuilder,\n  LoggerConfiguration\n} from 'slf4ts-api'\n\nconst LogLevelMapping: string[] = []\n\nLogLevelMapping[LogLevel.TRACE] = 'trace'\nLogLevelMapping[LogLevel.DEBUG] = 'debug'\nLogLevelMapping[LogLevel.INFO] = 'info'\nLogLevelMapping[LogLevel.WARN] = 'warn'\nLogLevelMapping[LogLevel.ERROR] = 'error'\n\n/**\n * The actual pino logger implementation.\n *\n * @export\n * @class PinoLoggerImplementation\n * @implements {LoggerImplementation}\n */\nexport class PinoLoggerImplementation implements LoggerImplementation {\n  private readonly rootLoggers: Map = new Map();\n  private readonly loggers: Map = new Map();\n  private builder: LoggerBuilder = this.getDefaultLoggerBuilder()\n\n  public async log (...args: any[]): Promise {\n    const additionalArguments = [...arguments]\n    const commonLoggerData = additionalArguments.splice(0, 3)\n    additionalArguments.splice(additionalArguments.length - 1, 1)\n    const level: number = commonLoggerData[0]\n    const group: string = commonLoggerData[1]\n    const name: string = commonLoggerData[2]\n    const instance = this.getLoggerInstance(group, name)\n\n    return new Promise((resolve, reject) => {\n      const callArguments: any[] = []\n      let error: Error = null\n      let message: string = null\n      additionalArguments.forEach((arg) => {\n        if (arg instanceof Error) {\n          error = arg\n        } else if (!message && typeof arg === 'string') {\n          message = arg\n        } else {\n          callArguments.push(arg)\n        }\n      })\n\n      callArguments.unshift(message)\n      if (error) {\n        callArguments.unshift(error)\n      }\n\n      instance[LogLevelMapping[level]].apply(instance, callArguments)\n      resolve()\n    })\n  }\n\n  public getImplementation (group: string, name: string): Logger {\n    return this.getLoggerInstance(group, name)\n  }\n\n  public setConfig(config: T, group: string, name: string): void {\n    // nothing to configure here\n  }\n\n  public setLogLevel (logLevel: LogLevel, group: string, name: string): void {\n    const instance = this.getLoggerInstance(group, name)\n    instance.level = LogLevelMapping[logLevel]\n  }\n\n  public setMetadata (metadata: any, group: string, name: string): void {\n    const compoundKey = `${group}:${name}`\n    const rootLogger: Logger = this.rootLoggers.get(compoundKey)\n    this.loggers.set(compoundKey, rootLogger.child(metadata))\n  }\n\n  public setLoggerBuilder (builder?: LoggerBuilder): void {\n    this.builder = builder ?? this.getDefaultLoggerBuilder()\n  }\n\n  private getDefaultLoggerBuilder (): LoggerBuilder {\n    return (\n      config: LoggerOptions | DestinationStream,\n      stream?: DestinationStream\n    ) => pino(config as LoggerOptions, stream)\n  }\n\n  private getLoggerInstance (\n    group: string,\n    name: string\n  ): Logger {\n    const compoundKey = `${group}:${name}`\n    let instance: Logger = this.loggers.get(compoundKey)\n\n    if (!instance) {\n      const level = LoggerConfiguration.getLogLevel(group, name)\n      instance = this.builder({\n        name: compoundKey,\n        level: LogLevelMapping[level]\n      })\n      this.rootLoggers.set(compoundKey, instance)\n      this.loggers.set(compoundKey, instance)\n    }\n\n    return instance\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WinstonLoggerBinding.html":{"url":"classes/WinstonLoggerBinding.html","title":"class - WinstonLoggerBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WinstonLoggerBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-winston/lib/slf4ts/WinstonLoggerBinding.ts\n        \n\n            \n                Description\n            \n            \n                LoggerBinding implementation for Winston.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerBinding\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                packageJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLoggerImplementation\n                            \n                            \n                                    Public\n                                getVendor\n                            \n                            \n                                    Public\n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerBinding.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            packageJson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerBinding.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLoggerImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerImplementation()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerBinding.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         WinstonLoggerImplementation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVendor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVendor()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerBinding.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVersion()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerBinding.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport * as winston from 'winston'\nimport { LoggerBinding } from 'slf4ts-api'\n\nimport { WinstonLoggerImplementation } from './WinstonLoggerImplementation'\n\n/**\n * LoggerBinding implementation for Winston.\n *\n * @export\n * @class WinstonLoggerBinding\n * @implements {LoggerBinding}\n */\nexport class WinstonLoggerBinding implements LoggerBinding {\n  private readonly packageJson: any;\n\n  public constructor () {\n    const modulePath = path.parse(module.filename)\n    let currentDir = path.resolve(modulePath.dir)\n    while (true) {\n      currentDir = path.resolve(path.join(currentDir, '..'))\n      const packageJsonPath = path.resolve(path.join(currentDir, 'package.json'))\n      if (fs.existsSync(packageJsonPath)) {\n        this.packageJson = require(packageJsonPath)\n        break\n      }\n    }\n  }\n\n  public getLoggerImplementation (): WinstonLoggerImplementation {\n    return new WinstonLoggerImplementation()\n  }\n\n  public getVendor (): string {\n    return 'Winston'\n  }\n\n  public getVersion (): string {\n    return this.packageJson.version\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WinstonLoggerImplementation.html":{"url":"classes/WinstonLoggerImplementation.html","title":"class - WinstonLoggerImplementation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WinstonLoggerImplementation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts\n        \n\n            \n                Description\n            \n            \n                The actual winston logger implementation.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LoggerImplementation\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                builder\n                            \n                            \n                                    Private\n                                    Readonly\n                                loggers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDefaultLoggerBuilder\n                            \n                            \n                                    Public\n                                getImplementation\n                            \n                            \n                                    Private\n                                getLoggerInstance\n                            \n                            \n                                    Public\n                                    Async\n                                log\n                            \n                            \n                                    Public\n                                setConfig\n                            \n                            \n                                    Public\n                                setLoggerBuilder\n                            \n                            \n                                    Public\n                                setLogLevel\n                            \n                            \n                                    Public\n                                setMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            builder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerBuilder\n\n                        \n                    \n                    \n                        \n                            Default value : this.getDefaultLoggerBuilder()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            loggers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDefaultLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultLoggerBuilder()\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LoggerBuilder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImplementation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImplementation(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     winston.Logger\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLoggerInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggerInstance(group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     winston.Logger\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfig(config: T, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts:79\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLoggerBuilder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLoggerBuilder(builder?: LoggerBuilder)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builder\n                                    \n                                                LoggerBuilder\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: LogLevel, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMetadata(metadata: any, group: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'source-map-support/register'\n\nimport { LoggerImplementation, LogLevel, LoggerBuilder } from 'slf4ts-api'\nimport * as util from 'util'\nimport * as winston from 'winston'\n\nconst LogLevelMapping: string[] = []\n\nLogLevelMapping[LogLevel.TRACE] = 'silly'\nLogLevelMapping[LogLevel.DEBUG] = 'debug'\nLogLevelMapping[LogLevel.INFO] = 'info'\nLogLevelMapping[LogLevel.WARN] = 'warn'\nLogLevelMapping[LogLevel.ERROR] = 'error'\n\n/**\n * The actual winston logger implementation.\n *\n * @export\n * @class WinstonLoggerImplementation\n * @implements {LoggerImplementation}\n */\nexport class WinstonLoggerImplementation implements LoggerImplementation {\n  private readonly loggers: Map = new Map();\n  private builder: LoggerBuilder = this.getDefaultLoggerBuilder()\n\n  public async log (...args: any[]): Promise {\n    const level: number = arguments[0]\n    const group: string = arguments[1]\n    const name: string = arguments[2]\n    const instance = this.getLoggerInstance(group, name)\n\n    return new Promise((resolve, reject) => {\n      const additionalArguments = [...arguments]\n      additionalArguments.splice(0, 3)\n\n      let callArguments: any[] = [LogLevelMapping[level]]\n      callArguments = callArguments.concat(...additionalArguments)\n      const metaArgs = callArguments.splice(2, callArguments.length - 2)\n      let metaArg: any\n      if (metaArgs && metaArgs.length > 0) {\n        metaArg = {}\n        metaArgs.forEach((meta) => {\n          if (meta) {\n            if (meta instanceof Error) {\n              metaArg = { ...metaArg, stack: util.inspect(meta) }\n            } else if (typeof meta === 'string') {\n              callArguments = callArguments.concat(meta)\n            } else {\n              metaArg = { ...metaArg, ...meta }\n            }\n          }\n        })\n      }\n      if (metaArg) {\n        callArguments = callArguments.concat(metaArg)\n      }\n      /* callArguments = callArguments.concat((err?: any, lvl?: string, msg?: string, meta?: any) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve();\n                }\n            }); */\n\n      if (instance) {\n        instance.log.apply(instance, callArguments)\n      } else {\n        winston.log.apply(winston, callArguments)\n      }\n\n      resolve()\n    })\n  }\n\n  public getImplementation (group: string, name: string): winston.Logger {\n    return this.getLoggerInstance(group, name)\n  }\n\n  public setConfig(config: T, group: string, name: string): void {\n    const instance = this.getLoggerInstance(group, name)\n\n    if (instance) {\n      instance.configure(config)\n    }\n  }\n\n  public setLogLevel (logLevel: LogLevel, group: string, name: string): void {\n    // nothing to set here ...\n  }\n\n  public setMetadata (metadata: any, group: string, name: string): void {\n    // nothing to set here ...\n  }\n\n  public setLoggerBuilder (builder?: LoggerBuilder): void {\n    this.builder = builder ?? this.getDefaultLoggerBuilder()\n  }\n\n  private getDefaultLoggerBuilder (): LoggerBuilder {\n    return () => winston.createLogger()\n  }\n\n  private getLoggerInstance (group: string, name: string): winston.Logger {\n    const compoundKey = `${group}:${name}`\n    let instance: winston.Logger = this.loggers.get(compoundKey)\n\n    if (!instance) {\n      instance = this.builder()\n      this.loggers.set(compoundKey, instance)\n    }\n\n    return instance\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts\n            \n            class\n            LoggerBindings\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts\n            \n            interface\n            LoggerBinding\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts\n            \n            interface\n            LoggerImplementation\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts\n            \n            class\n            LoggerConfigurationImpl\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts\n            \n            variable\n            LoggerConfiguration\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts\n            \n            class\n            DefaultLoggerInstance\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts\n            \n            class\n            LoggerFactory\n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts\n            \n            class\n            NullLoggerImplementation\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts\n            \n            interface\n            ILoggerInstance\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerBinding.ts\n            \n            class\n            BunyanLoggerBinding\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts\n            \n            class\n            BunyanLoggerImplementation\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts\n            \n            variable\n            LogLevelMapping\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts\n            \n            variable\n            LogMethodMapping\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/slf4ts-cassandra-log-adapter/lib/slf4ts/CassandraLogAdapter.ts\n            \n            class\n            CassandraLogAdapter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/slf4ts-console/lib/slf4ts/ConsoleLoggerBinding.ts\n            \n            class\n            ConsoleLoggerBinding\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts\n            \n            class\n            ConsoleLoggerImplementation\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerBinding.ts\n            \n            class\n            Log4JSLoggerBinding\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts\n            \n            class\n            Log4JSLoggerImplementation\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts\n            \n            variable\n            LogLevelMapping\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerBinding.ts\n            \n            class\n            LoglevelLoggerBinding\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts\n            \n            class\n            LoglevelLoggerImplementation\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts\n            \n            variable\n            LogLevelMapping\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts\n            \n            variable\n            LogMethodMapping\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/slf4ts-pino/lib/slf4ts/PinoLoggerBinding.ts\n            \n            class\n            PinoLoggerBinding\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts\n            \n            class\n            PinoLoggerImplementation\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts\n            \n            variable\n            LogLevelMapping\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/slf4ts-winston/lib/slf4ts/WinstonLoggerBinding.ts\n            \n            class\n            WinstonLoggerBinding\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts\n            \n            class\n            WinstonLoggerImplementation\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts\n            \n            variable\n            LogLevelMapping\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogLevel   (packages/.../LoggerConfiguration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            LogLevel enumeration.\n\n                        \n                    \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 TRACE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nslf4ts\nSimple Logging Facade for NodeJS\n\n    \n        \n    \n\n\nThis is the mono-repository for the slf4ts modules.slf4ts modules are a collection of modules abstracting logging for nodejs libraries.  \nCompatible libraries use the slf4ts-api module to get a Logger instance and do the logging.The application, that use these libraries, choose a concrete logging library alongside thecorresponding slf4ts logger binding module to make their dependencies use the chosen logging library.\nModules\n\n\n\nModule\nDescription\nStatus\nLink\n\n\n\n\n\nslf4ts-api\nAPI / interface module\n\n\n  \n\n\nBindings\n\n\n\n\n\n\nslf4ts-bunyan\nBunyan Logger Binding\n\nbunyan\n  \n\n\nslf4ts-console\nConsole Logger Binding\n\nnodejs console\n  \n\n\nslf4ts-log4js\nlog4js Logger Binding\n\nlog4js\n  \n\n\nslf4ts-loglevel\nloglevel Logger Binding\n\nloglevel\n  \n\n\nslf4ts-pino\npino Logger Binding\n\npino\n  \n\n\nslf4ts-winston\nWinston Logger Binding\n\nwinston\n  \n\n\nAdapter\n\n\n\n\n\n\nslf4ts-cassandra-log-adapter\nLog adapter for cassandra nodejs client lib\n\ncassandra-driver\n  \n\n\nslf4ts-elasticsearch-log-adapter\nLog adapter for elasticsearch nodejs client lib\ndeprecated\nelasticsearch\n  \n\n\n\nExamples\nCode examples for javascript and typescript are in the examples folder.  \nproject development\ninit / update project (if a new dependency is introduced or an existing is updated):  \nnpm i -g pnpm\npnpm igenerate dependency report:  \n# run 'pnpm run build' before checking dependencies\ndocker-compose run --rm depsrelease packages / publish docs:  \n# check functionality\npnpm i\npnpm run build\n\n# public packages\n# change version in every dependent package\npnpm i\npnpm publish --filter slf4ts-api\ngit add .\ngit commit -m \"publish version x.y.z of slf4ts-api\"\ngit tag slf4ts-api@x.y.z\ngit push\ngit push origin slf4ts-api@x.y.z\n\n# publish docs\nrm -fr docs/\ngit branch -D gh-pages\ngit worktree prune\ngit worktree list\ngit worktree add -b gh-pages docs origin/gh-pages\npnpm run publishDocsLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 \nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggerBuilder   (packages/.../LoggerBindings.ts)\n                        \n                        \n                            LogMethodId   (packages/.../BunyanLoggerImplementation.ts)\n                        \n                        \n                            LogMethodId   (packages/.../LoglevelLoggerImplementation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts\n    \n    \n        \n            \n                \n                    \n                    LoggerBuilder\n                \n            \n            \n                \n                    Builds the instance of the underlying logger framework.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts\n    \n    \n        \n            \n                \n                    \n                    LogMethodId\n                \n            \n            \n                \n                        \"trace\" | \"debug\" | \"info\" | \"warn\" | \"error\"\n\n                \n            \n        \n    \n    packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts\n    \n    \n        \n            \n                \n                    \n                    LogMethodId\n                \n            \n            \n                \n                        \"trace\" | \"debug\" | \"info\" | \"warn\" | \"error\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"unit-test.html":{"url":"unit-test.html","title":"unit-test - unit-test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n  Unit test coverage\n\n\n\n    \n    \n    \n    \n\n\n\n    \n        \n            File\n            Statements\n            Branches\n            Functions\n            Lines\n        \n    \n    \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-api/lib/slf4ts/LoggerBindings.ts\n            \n            \n                100 %\n                (43/43)\n            \n            \n                87 %\n                (13/15)\n            \n            \n                100 %\n                (14/14)\n            \n            \n                100 %\n                (42/42)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts\n            \n            \n                89 %\n                (39/44)\n            \n            \n                81 %\n                (17/21)\n            \n            \n                83 %\n                (10/12)\n            \n            \n                89 %\n                (39/44)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-api/lib/slf4ts/LoggerFactory.ts\n            \n            \n                80 %\n                (73/91)\n            \n            \n                89 %\n                (32/36)\n            \n            \n                63 %\n                (20/32)\n            \n            \n                80 %\n                (73/91)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerBinding.ts\n            \n            \n                100 %\n                (16/16)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts\n            \n            \n                92 %\n                (44/48)\n            \n            \n                83 %\n                (5/6)\n            \n            \n                64 %\n                (7/11)\n            \n            \n                94 %\n                (44/47)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-cassandra-log-adapter/lib/slf4ts/CassandraLogAdapter.ts\n            \n            \n                89 %\n                (24/27)\n            \n            \n                82 %\n                (14/17)\n            \n            \n                100 %\n                (3/3)\n            \n            \n                89 %\n                (24/27)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-console/lib/slf4ts/ConsoleLoggerBinding.ts\n            \n            \n                100 %\n                (16/16)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-console/lib/slf4ts/ConsoleLoggerImplementation.ts\n            \n            \n                100 %\n                (25/25)\n            \n            \n                100 %\n                (16/16)\n            \n            \n                43 %\n                (3/7)\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerBinding.ts\n            \n            \n                100 %\n                (16/16)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts\n            \n            \n                80 %\n                (32/40)\n            \n            \n                25 %\n                (2/8)\n            \n            \n                58 %\n                (7/12)\n            \n            \n                79 %\n                (31/39)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerBinding.ts\n            \n            \n                100 %\n                (16/16)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts\n            \n            \n                84 %\n                (38/45)\n            \n            \n                60 %\n                (6/10)\n            \n            \n                60 %\n                (6/10)\n            \n            \n                84 %\n                (38/45)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-pino/lib/slf4ts/PinoLoggerBinding.ts\n            \n            \n                100 %\n                (16/16)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts\n            \n            \n                92 %\n                (48/52)\n            \n            \n                93 %\n                (13/14)\n            \n            \n                67 %\n                (8/12)\n            \n            \n                92 %\n                (48/52)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-winston/lib/slf4ts/WinstonLoggerBinding.ts\n            \n            \n                100 %\n                (16/16)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        /opt/slf4ts/packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts\n            \n            \n                88 %\n                (45/51)\n            \n            \n                59 %\n                (13/22)\n            \n            \n                67 %\n                (8/12)\n            \n            \n                88 %\n                (44/50)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggerConfiguration   (packages/.../LoggerConfiguration.ts)\n                        \n                        \n                            LogLevelMapping   (packages/.../BunyanLoggerImplementation.ts)\n                        \n                        \n                            LogLevelMapping   (packages/.../Log4JSLoggerImplementation.ts)\n                        \n                        \n                            LogLevelMapping   (packages/.../LoglevelLoggerImplementation.ts)\n                        \n                        \n                            LogLevelMapping   (packages/.../WinstonLoggerImplementation.ts)\n                        \n                        \n                            LogLevelMapping   (packages/.../PinoLoggerImplementation.ts)\n                        \n                        \n                            LogMethodMapping   (packages/.../BunyanLoggerImplementation.ts)\n                        \n                        \n                            LogMethodMapping   (packages/.../LoglevelLoggerImplementation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/slf4ts-api/lib/slf4ts/LoggerConfiguration.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LoggerConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new LoggerConfigurationImpl()\n                        \n                    \n\n                \n                    \n                        Default configuration instance\n\n                    \n                \n\n            \n        \n\n    packages/slf4ts-bunyan/lib/slf4ts/BunyanLoggerImplementation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LogLevelMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LogMethodMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LogMethodId[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    packages/slf4ts-log4js/lib/slf4ts/Log4JSLoggerImplementation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LogLevelMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    packages/slf4ts-loglevel/lib/slf4ts/LoglevelLoggerImplementation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LogLevelMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogLevelDesc[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LogMethodMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LogMethodId[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    packages/slf4ts-winston/lib/slf4ts/WinstonLoggerImplementation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LogLevelMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    packages/slf4ts-pino/lib/slf4ts/PinoLoggerImplementation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LogLevelMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/slf4ts-api.html":{"url":"additional-documentation/slf4ts-api.html","title":"additional-page - slf4ts-api","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nslf4ts-api\nSimple Logging Facade for NodeJS\n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\nInspired by the popular Java lib SLF4J\nThis project is used to abstract loggingto develop reusable libraries and not force the usageof a certain logging framework.\nIt's meant to be used with nodejs.\nLogLevel\n\nTRACE (numeric value: 4)\nDEBUG (numeric value: 3)\nINFO (numeric value: 2)\nWARN (numeric value: 1)\nERROR (numeric value: 0)\n\nLogger Implementations\nslf4ts doesn't work without a logging-framework binding.Bindings exist for a couple of logging-frameworks:\n\nconsole\nlog4js\nwinston\n\nWrite a binding\nA binding for a logging-framework needs to implement the LoggerBinding interface andthe actual logger interface LoggerImplementation.   \nAlso a file named .slf4ts-binding needs to be present in the package folder (can be empty).   \nA node package for a binding should export a single function that is used during binding discovery.\nInterfaces to implement:\nimport { LogLevel } from \"slf4ts-api\";\n\ninterface LoggerImplementation {\n    log(...args: any[]): Promise;\n    getImplementation(): T;\n    setConfig(config: T, group: string, name: string): void;\n    setLogLevel(logLevel: LogLevel, group: string, name: string): void;\n    setMetadata(metadata: any, group: string, name: string): void;\n}\n\ninterface LoggerBinding {\n    getLoggerImplementation(): LoggerImplementation;\n    getVendor(): string;\n    getVersion(): string;\n}Sample implementation in typescript (index.ts):\nimport { LoggerBindings } from \"slf4ts-api\";\n\nexport default function(bindings: LoggerBindings) {\n    bindings.registerBinding({\n        getLoggerImplementation: () => { ... },\n        getVendor: () => \"My Logger Binding Implementation\",\n        getVersion: () => \"1.0.0\"\n    });\n}\nAn example implementation can be found in the example-node-modules folder of this project.\nUsage\nimport { LoggerConfiguration, LogLevel, LoggerFactory } from \"slf4ts-api\";\n\n// gets the root logger (group \"\" and name \"\")\nconst ROOT_LOGGER = LoggerFactory.getLogger();\n\nclass X {\n\n    // gets a logger with group \"my-lib\" and name \"X\"\n    private static LOG = LoggerFactory.getLogger(\"my-lib\", \"X\");\n\n    public async something(value: any) {\n        // log with debug level and some metadata\n        X.LOG.debug(`a message with ${value}`, { additionalData: \"Testvalue\" });\n\n        try {\n            ...\n        } catch(error: Error) {\n            // logs an error without metadata\n            X.LOG.error('Error!', error);\n        }\n    }\n\n}\n\n// sets the log level of all loggers\nLoggerConfiguration.setLogLevel(LogLevel.INFO);\n\n// sets the log level of all loggers within group \"my-lib\"\nLoggerConfiguration.setLogLevel(LogLevel.WARN, \"my-lib\");\n\n// sets the log level of the logger with group \"my-lib\" and name \"X\"\nLoggerConfiguration.setLogLevel(LogLevel.ERROR, \"my-lib\", \"X\");\n\nconst config = {\n    transports: [...],\n    events: [...],\n    postProcessor: () => { ... }\n};\n\n// sets the config of all loggers\nLoggerConfiguration.setConfig(config);\n\n// sets the config of all loggers within group \"my-lib\"\nLoggerConfiguration.setConfig(config, \"my-lib\");\n\n// sets the config of the logger with group \"my-lib\" and name \"X\"\nLoggerConfiguration.setConfig(config, \"my-lib\", \"X\");License\nMIT\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/slf4ts-bunyan.html":{"url":"additional-documentation/slf4ts-bunyan.html","title":"additional-page - slf4ts-bunyan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nslf4ts-bunyan\nbunyan Logging-Binding for slf4ts\n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\nIt's meant to be used with nodejs.\nExample Usage\nExample package.json:\n{\n    ...,\n    \"dependencies\": {\n        \"slf4ts-bunyan\": \"latest\"\n    },\n    ...\n}Example code:\nimport { LoggerFactory, LoggerConfiguration } from \"slf4ts-api\";\n\nconst ROOT_LOGGER = LoggerFactory.getLogger();\nROOT_LOGGER.setMetadata({ application: 'my-app' });\n\n/**\n * prints something like:\n * \n *  {\n *      \"hostname\":\"...\",\n *      \"pid\":...,\n *      \"application\":\"my-app\",\n *      \"level\":30,\n *      \"msg\":\"Test Message { version: '1.0.0' } Error: \\n    at Object. ...\",\n *      \"time\":\"...\",\n *      \"v\":0\n *  }\n * \n * Note that the metadata are extra fields while objects\n * passed to the log-method call are part of the log-message\n */\nROOT_LOGGER.info(\"Test Message\", { version: '1.0.0' }, new Error());License\nMIT\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/slf4ts-cassandra-log-adapter.html":{"url":"additional-documentation/slf4ts-cassandra-log-adapter.html","title":"additional-page - slf4ts-cassandra-log-adapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nslf4ts-cassandra-log-adapter\nCassandra Logging-Adapter for slf4ts\n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\nThis project forwards log events from datastax cassandra driver to slf4ts logger implementation.It's s meant to be used with nodejs.\nUsage\nimport { ILoggerInstance, LoggerFactory } from \"slf4ts-api\";\n\n// create an instance of Client\nconst client = new Client({ contactPoints: [\"127.0.0.1:9042\"] });\n\n// Create an instance of the logging adapter for each client\n// creates/uses a logger with group \"cassandra\" and the keyspace of the client as name (empty string if not configured) \nnew CassandraLogAdapter(client);\n\n// Create an instance of the logging adapter with a pre-created logger instance\nconst logger: ILoggerInstance = LoggerFactory.getLogger(\"my-cassandra\");\nnew CassandraLogAdapter(client, logger);\n\n// use the client as usual\nclient.connect(() => {\n    ...\n});\n\n// access the underlying logger instance\nconst logger: ILoggerInstance = LoggerFactory.getLogger(\"cassandra\", client.keyspace);\nlogger.setLogLevel(...);License\nMIT\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/slf4ts-console.html":{"url":"additional-documentation/slf4ts-console.html","title":"additional-page - slf4ts-console","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nslf4ts-console\nConsole Logging-Binding for slf4ts\n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\nIt's meant to be used with nodejs.\nExample Usage\nExample package.json:\n{\n    ...,\n    \"dependencies\": {\n        \"slf4ts-console\": \"latest\"\n    },\n    ...\n}Example code:\nimport { LoggerFactory } from \"slf4ts-api\";\n\nconst ROOT_LOGGER = LoggerFactory.getLogger();\nROOT_LOGGER.setMetadata({ application: 'my-app' });\n\nROOT_LOGGER.info(\"Test Message\", { version: '1.0.0' }, new Error());Example output:\n2017-01-01T12:00:00.999Z ROOT INFO Test Message { application: 'my-app', version: '1.0.0' } Error\n    at ConsoleLoggerImplementationTest.checkArgumentPassing (.../slf4ts-console/test/slf4ts/ConsoleLoggerImplementationTest.ts:XXX:XXX)\n    at License\nMIT\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/slf4ts-log4js.html":{"url":"additional-documentation/slf4ts-log4js.html","title":"additional-page - slf4ts-log4js","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nslf4ts-log4js\nlog4js Logging-Binding for slf4ts\n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\nIt's meant to be used with nodejs.\nExample Usage\nExample package.json:\n{\n    ...,\n    \"dependencies\": {\n        \"slf4ts-log4js\": \"latest\"\n    },\n    ...\n}Example code:\nimport { configure } from \"log4js\";\nimport { LoggerFactory, LoggerConfiguration } from \"slf4ts-api\";\n\nconst ROOT_LOGGER = LoggerFactory.getLogger();\nROOT_LOGGER.setMetadata({ application: 'my-app' });\n\n// configure log4js as usual\nconfigure({\n  appenders: {\n    out: { type: 'stdout' },\n    app: { type: 'file', filename: 'application.log' }\n  },\n  categories: {\n    default: { appenders: [ 'out', 'app' ], level: 'debug' }\n  }\n});\n\n/**\n * prints something like:\n * \n *      [2020-01-01T11:22:33.444] [INFO] default - Test Message { version: '1.0.0' } Error: \n *          at Object. (...)\n *          at Module._compile (internal/modules/cjs/loader.js:1151:30)\n *          at Object.Module._extensions..js (internal/modules/cjs/loader.js:1171:10)\n *          at Module.load (internal/modules/cjs/loader.js:1000:32)\n *          at Function.Module._load (internal/modules/cjs/loader.js:899:14)\n *          at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:71:12)\n *          at internal/main/run_main_module.js:17:47\n * \n * { application: 'my-app' } (metadata set above) is present in the context of the logger.\n */\nROOT_LOGGER.info(\"Test Message\", { version: '1.0.0' }, new Error());License\nMIT\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/slf4ts-loglevel.html":{"url":"additional-documentation/slf4ts-loglevel.html","title":"additional-page - slf4ts-loglevel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nslf4ts-loglevel\nloglevel Logging-Binding for slf4ts\n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\nIt's meant to be used with nodejs.\nExample Usage\nExample package.json:\n{\n    ...,\n    \"dependencies\": {\n        \"slf4ts-loglevel\": \"latest\"\n    },\n    ...\n}Example code:\nimport { LoggerFactory, LoggerConfiguration } from \"slf4ts-api\";\n\nconst ROOT_LOGGER = LoggerFactory.getLogger();\nROOT_LOGGER.setMetadata({ application: 'my-app' });\n\n/**\n * prints something like:\n * \n *      Test Message { version: '1.0.0' } { application: 'my-app' } Error: \n *          at Object. ...\n * \n * Note that all metadata are an extra object passed to the log-method.\n */\nROOT_LOGGER.info(\"Test Message\", { version: '1.0.0' }, new Error());License\nMIT\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/slf4ts-pino.html":{"url":"additional-documentation/slf4ts-pino.html","title":"additional-page - slf4ts-pino","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nslf4ts-pino\npino Logging-Binding for slf4ts\n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\nIt's meant to be used with nodejs.\nExample Usage\nExample package.json:\n{\n    ...,\n    \"dependencies\": {\n        \"slf4ts-pino\": \"latest\"\n    },\n    ...\n}Example code:\nimport { LoggerFactory, LoggerConfiguration } from \"slf4ts-api\";\n\nconst ROOT_LOGGER = LoggerFactory.getLogger();\nROOT_LOGGER.setMetadata({ application: 'my-app' });\n\n/**\n * prints something like:\n * \n *  {\n *      \"level\":30,\n *      \"time\":...,\n *      \"pid\":...,\n *      \"hostname\":\"...\",\n *      \"application\":\"my-app\",\n *      \"msg\":\"Test Message { \\\"version\\\": \\\"1.0.0\\\" }\",\n *      \"stack\":\"Error: \\n ...\",\n *      \"type\":\"Error\",\n *      \"v\":1\n *  }\n * \n * Note that the metadata are extra fields while objects\n * passed to the log-method call are part of the log-message,\n * except for instances of Error\n */\nROOT_LOGGER.info(\"Test Message\", { version: '1.0.0' }, new Error());License\nMIT\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/slf4ts-winston.html":{"url":"additional-documentation/slf4ts-winston.html","title":"additional-page - slf4ts-winston","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nslf4ts-winston\nWinston Logging-Binding for slf4ts\n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\nIt's meant to be used with nodejs.\nCurrently not supported:\n\nusing custom log-levels\n\nExample Usage\nExample package.json:\n{\n    ...,\n    \"dependencies\": {\n        \"slf4ts-winston\": \"latest\"\n    },\n    ...\n}Example code:\nimport { LoggerFactory, LoggerConfiguration } from \"slf4ts-api\";\n// register winston third-party-lib\nimport \"winston-daily-rotate-file\";\n\nconst ROOT_LOGGER = LoggerFactory.getLogger();\nROOT_LOGGER.setMetadata({ application: 'my-app' });\n\nROOT_LOGGER.info(\"Test Message\", { version: '1.0.0' }, new Error());\n\n// configuration for winston loggers\nconst config = {\n    transports: [\n        new (winston.transports.Console)(),\n        new (winston.transports.File)({ filename: 'somefile.log' }),\n        new (winston.transports.DailyRotateFile)({\n            \"filename\": \"logfilename-%DATE%.log\",\n            \"datePattern\": \"YYYY-MM-DD\",\n            \"logstash\": true,\n            \"level\": \"debug\"\n        })\n    ]\n};\n\n// configure the root logger ...\nLoggerConfiguration.setConfig(config);\n\n// configure a certain logger\nLoggerConfiguration.setConfig(config, \"my-lib\", \"X\");License\nMIT\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
